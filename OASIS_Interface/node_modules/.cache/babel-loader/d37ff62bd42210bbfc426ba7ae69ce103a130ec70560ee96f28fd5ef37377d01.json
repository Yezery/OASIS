{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { UpSale, DownSale } from \"@/api/axios/contract\";\nimport ChatMemu from \"@/views/chat/ChatMemu.vue\";\nimport { getOwnerNFTsByAddress } from \"@/api/axios/ownerContractLIst\";\nexport default {\n  components: {\n    ChatMemu\n  },\n  data() {\n    return {\n      userBalance: 0,\n      userName: \"\",\n      userAvatar: require(\"@/assets/webAssets/MetaMask.png\"),\n      UserNFTListInf: [],\n      NFTArray: [],\n      nftContractAddressList: []\n    };\n  },\n  async mounted() {\n    this.UserNFTListInf = this.$store.state.ownerNFTList;\n    this.init();\n    await this.GetNFTContractNFT();\n  },\n  methods: {\n    async init() {\n      let user = this.$store.state.currentAddress;\n      try {\n        this.userBalance = this.$store.state.Web3.utils.fromWei(await this.$store.state.Web3.eth.getBalance(user), \"ether\").slice(0, 4);\n        this.userName = `${user.slice(0, 5)}...${user.slice(37)}`;\n        this.userAvatar = \"data:image/png;base64,\" + new this.Identicon(user, 120).toString();\n      } catch (error) {\n        return;\n      }\n    },\n    async UpSale(NFT) {\n      this.$prompt(\"请输入价格\", \"上架\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        inputPattern: /^[0-9]*$/,\n        inputErrorMessage: \"只能是数字\"\n      }).then(async ({\n        price\n      }) => {\n        NFT.price = price;\n        try {\n          await UpSale(NFT);\n        } catch (error) {\n          this.$message({\n            type: \"waring\",\n            message: \"上架异常\"\n          });\n        }\n        this.$message({\n          type: \"success\",\n          message: \"上架成功 \"\n        });\n      }).catch(() => {\n        this.$message({\n          type: \"info\",\n          message: \"取消输入\"\n        });\n      });\n      this.UserNFTListInf = await this.$store.state.ownerNFTList;\n    },\n    async downSale(NFT) {\n      await DownSale(NFT);\n      this.UserNFTListInf = this.$store.state.ownerNFTList;\n    },\n    async GetNFTContractNFT() {\n      await this.getSetAddressArray();\n      let NFTInfList = [];\n      for (const nftaddress of this.nftContractAddressList) {\n        let nft = {\n          ownerAddress: this.$store.state.currentAddress,\n          nftAddress: nftaddress\n        };\n        await getOwnerNFTsByAddress(nft).then(re => {\n          NFTInfList.push(re.data.data);\n        });\n      }\n      this.NFTArray = NFTInfList;\n    },\n    async getSetAddressArray() {\n      for (const nft of this.$store.state.ownerNFTList) {\n        this.nftContractAddressList.push(nft.nftAddress);\n      }\n      this.nftContractAddressList = new Set(this.nftContractAddressList);\n    }\n  }\n};","map":{"version":3,"names":["UpSale","DownSale","ChatMemu","getOwnerNFTsByAddress","components","data","userBalance","userName","userAvatar","require","UserNFTListInf","NFTArray","nftContractAddressList","mounted","$store","state","ownerNFTList","init","GetNFTContractNFT","methods","user","currentAddress","Web3","utils","fromWei","eth","getBalance","slice","Identicon","toString","error","NFT","$prompt","confirmButtonText","cancelButtonText","inputPattern","inputErrorMessage","then","price","$message","type","message","catch","downSale","getSetAddressArray","NFTInfList","nftaddress","nft","ownerAddress","nftAddress","re","push","Set"],"sources":["src/views/user/UserHome.vue"],"sourcesContent":["<template>\n\n  <div class=\"userHomeMain\">\n    <el-container>\n      <el-aside style=\"width: auto;\" class=\"animate__animated animate__fadeInLeft\">\n        <ChatMemu ref=\"ChatMemu\">\n        </ChatMemu>\n      </el-aside>\n      <div class=\"inf\">\n        <div class=\"infBox\">\n          <el-container>\n            <div class=\"content \">\n              <div class=\"contentTop animate__animated animate__fadeInDown\">\n                <div class=\"userInf \">\n                  <div class=\"userInfTop\">\n                    <div class=\"userAvatarBox\">\n                      <img :src=\"userAvatar\" alt=\"\">\n                    </div>\n                    <div class=\"userName\">{{userName}}</div>\n                  </div>\n                  <div class=\"userInfBottom\">\n                    <div class=\"UserBalance\">\n                      <span style=\"font-size: 4vw;font-weight: 800;\"> {{ userBalance }}</span> ETH\n                    </div>\n                  </div>\n                </div>\n                <div class=\"userPet\">\n                </div>\n              </div>\n              <div class=\"contentBottom animate__animated animate__fadeInUp\">\n                <div class=\"NFTListBox\">\n                  <div class=\"NFTList\">\n                    <el-collapse>\n                      <el-collapse-item :title=\"address\" v-for=\"address,i in nftContractAddressList\" :key=\"i\" :name=\"address\">\n                        <div class=\"ToSellMain\" v-for=\"inf,i in NFTArray\" :key=\"i\">\n                          <div class=\"NFTInfBox\" v-for=\"nft,i in inf\" :key=\"i\">\n                            <template v-if=\"nft.nftAddress == address\">\n                              <div class=\"NFTInf\">\n                                <div style=\"height:65%;width: 100%;overflow: hidden;\">\n                                  <img class=\"NFTImage\" :src=\"nft.ipfsPath\" alt=\"\">\n                                </div>\n                                <div class=\"Inf\">\n                                  <div class=\"InfTop\">\n                                    <div class=\"NFTName\">{{ nft.nftName }} </div>\n                                    <div class=\"Active\" v-if=\"nft.isActive\">\n                                      <i class=\"el-icon-sort\"></i>\n                                      <span style=\"font-weight: 800; font-size: 12px;\">在售</span>\n                                    </div>\n                                    <div class=\"NoActive\" v-else>\n                                      <i class=\"el-icon-sort\"></i>\n                                      <span style=\"font-weight: 800; font-size: 12px;\"> 未上架 </span>\n                                    </div>\n                                  </div>\n                                  <div v-show=\"!nft.isActive\" class=\"priceBox\">\n                                    <span class=\"price\">{{ nft.price }} ETH</span>\n                                  </div>\n                                  <div class=\"InfBottom DownSale\" v-if=\"nft.isActive\">\n\n                                    <i class=\"el-icon-sell\"></i>\n                                  </div>\n                                  <div class=\"InfBottom \">\n                                    <i class=\"el-icon-sold-out\"></i>\n                                  </div>\n                                </div>\n                              </div>\n                            </template>\n                          </div>\n\n                        </div>\n                        <div class=\"ADDNFT\">\n                          <router-link class=\"addImit\" :to=\"{ name: 'addImit',query:{nftContract:address} }\"><i class=\"el-icon-plus\"></i>\n                          </router-link>\n                        </div>\n                      </el-collapse-item>\n                    </el-collapse>\n\n                  </div>\n\n                </div>\n              </div>\n            </div>\n            <el-aside class=\"Mainbar animate__animated animate__fadeInRight\">\n              <div class=\"barBox\">\n\n              </div>\n            </el-aside>\n          </el-container>\n        </div>\n\n      </div>\n    </el-container>\n  </div>\n\n</template>\n\n<script>\n  import { UpSale, DownSale } from \"@/api/axios/contract\";\n  import ChatMemu from \"@/views/chat/ChatMemu.vue\";\n  import { getOwnerNFTsByAddress } from \"@/api/axios/ownerContractLIst\";\n  export default {\n    components: { ChatMemu },\n    data() {\n      return {\n        userBalance: 0,\n        userName: \"\",\n        userAvatar: require(\"@/assets/webAssets/MetaMask.png\"),\n        UserNFTListInf: [],\n        NFTArray: [],\n        nftContractAddressList: [],\n      };\n    },\n    async mounted() {\n      this.UserNFTListInf = this.$store.state.ownerNFTList;\n      this.init();\n      await this.GetNFTContractNFT();\n    },\n    methods: {\n      async init() {\n        let user = this.$store.state.currentAddress;\n        try {\n          this.userBalance = this.$store.state.Web3.utils\n            .fromWei(await this.$store.state.Web3.eth.getBalance(user), \"ether\")\n            .slice(0, 4);\n          this.userName = `${user.slice(0, 5)}...${user.slice(37)}`;\n          this.userAvatar =\n            \"data:image/png;base64,\" + new this.Identicon(user, 120).toString();\n        } catch (error) {\n          return;\n        }\n      },\n      async UpSale(NFT) {\n        this.$prompt(\"请输入价格\", \"上架\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          inputPattern: /^[0-9]*$/,\n          inputErrorMessage: \"只能是数字\",\n        })\n          .then(async ({ price }) => {\n            NFT.price = price;\n            try {\n              await UpSale(NFT);\n            } catch (error) {\n              this.$message({\n                type: \"waring\",\n                message: \"上架异常\",\n              });\n            }\n            this.$message({\n              type: \"success\",\n              message: \"上架成功 \",\n            });\n          })\n          .catch(() => {\n            this.$message({\n              type: \"info\",\n              message: \"取消输入\",\n            });\n          });\n\n        this.UserNFTListInf = await this.$store.state.ownerNFTList;\n      },\n      async downSale(NFT) {\n        await DownSale(NFT);\n        this.UserNFTListInf = this.$store.state.ownerNFTList;\n      },\n      async GetNFTContractNFT() {\n        await this.getSetAddressArray();\n        let NFTInfList = [];\n        for (const nftaddress of this.nftContractAddressList) {\n          let nft = {\n            ownerAddress: this.$store.state.currentAddress,\n            nftAddress: nftaddress,\n          };\n          await getOwnerNFTsByAddress(nft).then((re) => {\n            NFTInfList.push(re.data.data);\n          });\n        }\n        this.NFTArray = NFTInfList;\n      },\n      async getSetAddressArray() {\n        for (const nft of this.$store.state.ownerNFTList) {\n          this.nftContractAddressList.push(nft.nftAddress);\n        }\n        this.nftContractAddressList = new Set(this.nftContractAddressList);\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n::-webkit-scrollbar {\n  width: 6px;\n  height: 8px;\n  display: none;\n  background-color: transparent;\n}\n::-webkit-scrollbar-thumb {\n  background-color: #ccc;\n  border-radius: 25px;\n}\n.userHomeMain {\n  width: 100%;\n  height: 100vh;\n  background-color: var(--White-eee--);\n  .inf {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    .infBox {\n      border-radius: 30px;\n      width: 95%;\n      height: 95%;\n\n      .content {\n        overflow: auto;\n        height: 100%;\n        width: 100%;\n        color: var(--Dark--);\n        background-color: var(--White-eee--);\n\n        .contentTop {\n          width: 100%;\n          display: flex;\n          justify-content: space-around;\n          align-items: center;\n\n          .userInf {\n            background-color: var(--White--);\n            border-radius: 50px;\n            width: 600px;\n            height: 280px;\n            display: flex;\n            justify-content: center;\n            flex-direction: column;\n            align-content: flex-start;\n            margin-right: 5%;\n            overflow: hidden;\n            padding: 0;\n            transition: all 0.3s ease-in-out;\n            &:hover {\n              box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 5px 0px,\n                rgba(0, 0, 0, 0.1) 0px 0px 1px 0px;\n              transition: all 0.3s ease-in-out;\n            }\n            .userInfTop {\n              width: 100%;\n              height: 100%;\n              display: flex;\n              justify-content: flex-start;\n              align-items: center;\n              margin-top: 20px;\n              .userAvatarBox {\n                margin-left: 25px;\n                margin-right: 25px;\n                min-width: 95px;\n                min-height: 95px;\n                overflow: hidden;\n                border-radius: 50%;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                background-color: rgba(230, 230, 230, 1);\n                img {\n                  object-fit: cover;\n                  width: 85px;\n                  height: 85px;\n                }\n              }\n              .userName {\n                font-weight: 800;\n                font-size: 25px;\n              }\n            }\n            .userInfBottom {\n              width: 100%;\n              height: 100%;\n              display: flex;\n              justify-content: flex-end;\n              align-items: center;\n              .UserBalance {\n                margin-right: 35px;\n                font-size: 1vw;\n              }\n            }\n          }\n          .userPet {\n            @extend .userInf;\n          }\n          .TopBackground {\n            position: relative;\n            width: 100%;\n            height: 30%;\n            .userName {\n              position: absolute;\n              width: 726px;\n              height: 180px;\n              left: 113px;\n              top: 185px;\n              color: rgb(255, 255, 255);\n              font-family: Inter;\n              font-size: 5vw;\n              font-weight: 800;\n              line-height: 90px;\n              letter-spacing: -2px;\n              text-align: left;\n            }\n          }\n        }\n        .contentBottom {\n          width: 95%;\n          height: 90%;\n          margin-top: 5%;\n          display: flex;\n          justify-content: center;\n          .NFTListBox {\n            width: 100%;\n            background-color: var(--White--);\n            border-radius: 50px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            .NFTList {\n              width: 95%;\n              height: 100%;\n              margin-top: 10%;\n              .ToSellMain {\n                height: 100%;\n                width: 100%;\n                font-family: Arial, Helvetica, sans-serif;\n                margin-top: 2%;\n                display: flex;\n                justify-content: flex-start;\n                flex-wrap: wrap;\n                margin-left: 2%;\n                .NFTInfBox {\n                  display: flex;\n                  justify-content: flex-start;\n                  align-items: center;\n                  margin: 1% 2% 0% 2%;\n                  .NFTInf {\n                    background-color: var(--White--);\n                    border-radius: 50px;\n                    width: 320px;\n                    height: 400px;\n                    display: inline-block;\n                    overflow: hidden;\n                    transition: all 0.7s ease-in-out;\n                    box-shadow: rgba(17, 17, 26, 0.05) 0px 1px 0px,\n                      rgba(17, 17, 26, 0.1) 0px 0px 8px;\n                    .NFTImage {\n                      width: 100%;\n                      height: 100%;\n                      object-fit: contain;\n                      transition: all 0.6s;\n                      cursor: pointer;\n                      &:hover {\n                        transform: scale(1.1);\n\n                        transition: all 0.6s;\n                      }\n                    }\n                  }\n\n                  .NFTInf:hover {\n                    transition: all 0.6s ease-in-out;\n                    transform: translateY(-20px) perspective(1000px);\n                  }\n                  .NFTInf:hover > * {\n                    transform: none;\n                  }\n                }\n\n              \n                .Inf {\n                  width: 100%;\n                  height: 60%;\n                  .priceBox{\n                    text-align: left;\n                    width: 100%;\n                    .price{\n                      margin-left: 15%;\n                      font-size: 1vw;\n                    }\n                  }\n                  .InfTop {\n                    width: 100%;\n                    height: 60px;\n                    position: relative;\n                    .NoActive {\n                      position: absolute;\n                      right: 10%;\n                      top: 15px;\n                      width: 100px;\n                      padding: 4px 0px 4px 0px;\n                      color: white;\n                      background-color: #d63131b3;\n                      border-radius: 10px;\n                      transition: all 0.3s ease-in-out;\n                    }\n                    .Active {\n                      @extend .NoActive;\n                      background-color: rgba(85, 201, 96, 0.12);\n                      color: #55c960;\n                    }\n                    .NFTName {\n                      position: absolute;\n                      left: 0%;\n                      top: 19px;\n                      color: var(--Dark--);\n                      font-weight: 800;\n                      text-align: left;\n                      font-size: 14px;\n                      margin-left: 20%;\n                    }\n                  }\n                  .InfBottom {\n                    font-size: 1.5vw;\n                    display:flex;\n                    justify-content: center;\n                    align-items: center;\n                    height: 20%;\n                    background-color: rgba(0, 0, 255, 0.874);\n                  }\n                }\n                .DownSale{\n                  color: white;\n                  background-color: #d63131b3;\n                }\n                .ownerAndToSell {\n                  width: 100%;\n                  display: flex;\n                  margin-top: 18px;\n                  justify-content: center;\n                  align-items: center;\n                }\n                .ToSellBox {\n                  display: flex;\n                  justify-content: flex-start;\n                  align-items: center;\n                }\n\n                .downSale {\n                  background-color: #d63131e5;\n                  color: white;\n                  &:hover {\n                    background-color: rgb(255, 0, 0);\n                    transition: all 0.3s ease-in-out;\n                  }\n                }\n                .apporve {\n                  font-size: 12px;\n                  font-weight: 800;\n                }\n                .ToSellHeader {\n                  display: flex;\n                  justify-content: space-between;\n                  width: 95%;\n                  height: 10%;\n                  font-size: 25px;\n                  margin-top: 3%;\n                  border-radius: 30px;\n                  padding: 3.5% 0;\n                  font-weight: 800;\n                  color: var(--Dark--);\n                }\n                .ToSellHeaderBox {\n                  width: 100%;\n                  text-align: center;\n                  display: flex;\n                  justify-content: center;\n                  align-items: center;\n                }\n              }\n              .ADDNFT {\n                  background-color: var(--White--);\n                  border-radius: 50px;\n                  margin-left: 4%;\n                  width: 320px;\n                  height: 400px;\n                  display: inline-block;\n                  transition: all 0.7s ease-in-out;\n                  box-shadow: rgba(17, 17, 26, 0.05) 0px 1px 0px,\n                    rgba(17, 17, 26, 0.1) 0px 0px 8px;\n                  cursor: pointer;\n                  display: flex;\n                  justify-content: center;\n                  align-items: center;\n                  i {\n                    font-size: 70px;\n                    color: var(--Dark--);\n                  }\n                }\n            }\n          }\n        }\n      }\n      .Mainbar {\n        padding: 0 !important;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: transparent;\n\n        .barBox {\n          height: 100%;\n          background-color: var(--White--);\n          width: 95%;\n          border-radius: 50px;\n          transition: all 0.3s ease-in-out;\n          &:hover {\n            box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 5px 0px,\n              rgba(0, 0, 0, 0.1) 0px 0px 1px 0px;\n            transition: all 0.3s ease-in-out;\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n@import \"@/style/index.css\";\n</style>\n<style lang=\"scss\" scoped>\n@import \"@/style/MarketShop/index.scss\";\n</style> \n  "],"mappings":";AAgGA,SAAAA,MAAA,EAAAC,QAAA;AACA,OAAAC,QAAA;AACA,SAAAC,qBAAA;AACA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACA;MACAC,WAAA;MACAC,QAAA;MACAC,UAAA,EAAAC,OAAA;MACAC,cAAA;MACAC,QAAA;MACAC,sBAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,KAAAH,cAAA,QAAAI,MAAA,CAAAC,KAAA,CAAAC,YAAA;IACA,KAAAC,IAAA;IACA,WAAAC,iBAAA;EACA;EACAC,OAAA;IACA,MAAAF,KAAA;MACA,IAAAG,IAAA,QAAAN,MAAA,CAAAC,KAAA,CAAAM,cAAA;MACA;QACA,KAAAf,WAAA,QAAAQ,MAAA,CAAAC,KAAA,CAAAO,IAAA,CAAAC,KAAA,CACAC,OAAA,YAAAV,MAAA,CAAAC,KAAA,CAAAO,IAAA,CAAAG,GAAA,CAAAC,UAAA,CAAAN,IAAA,YACAO,KAAA;QACA,KAAApB,QAAA,MAAAa,IAAA,CAAAO,KAAA,YAAAP,IAAA,CAAAO,KAAA;QACA,KAAAnB,UAAA,GACA,oCAAAoB,SAAA,CAAAR,IAAA,OAAAS,QAAA;MACA,SAAAC,KAAA;QACA;MACA;IACA;IACA,MAAA9B,OAAA+B,GAAA;MACA,KAAAC,OAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,YAAA;QACAC,iBAAA;MACA,GACAC,IAAA;QAAAC;MAAA;QACAP,GAAA,CAAAO,KAAA,GAAAA,KAAA;QACA;UACA,MAAAtC,MAAA,CAAA+B,GAAA;QACA,SAAAD,KAAA;UACA,KAAAS,QAAA;YACAC,IAAA;YACAC,OAAA;UACA;QACA;QACA,KAAAF,QAAA;UACAC,IAAA;UACAC,OAAA;QACA;MACA,GACAC,KAAA;QACA,KAAAH,QAAA;UACAC,IAAA;UACAC,OAAA;QACA;MACA;MAEA,KAAA/B,cAAA,cAAAI,MAAA,CAAAC,KAAA,CAAAC,YAAA;IACA;IACA,MAAA2B,SAAAZ,GAAA;MACA,MAAA9B,QAAA,CAAA8B,GAAA;MACA,KAAArB,cAAA,QAAAI,MAAA,CAAAC,KAAA,CAAAC,YAAA;IACA;IACA,MAAAE,kBAAA;MACA,WAAA0B,kBAAA;MACA,IAAAC,UAAA;MACA,WAAAC,UAAA,SAAAlC,sBAAA;QACA,IAAAmC,GAAA;UACAC,YAAA,OAAAlC,MAAA,CAAAC,KAAA,CAAAM,cAAA;UACA4B,UAAA,EAAAH;QACA;QACA,MAAA3C,qBAAA,CAAA4C,GAAA,EAAAV,IAAA,CAAAa,EAAA;UACAL,UAAA,CAAAM,IAAA,CAAAD,EAAA,CAAA7C,IAAA,CAAAA,IAAA;QACA;MACA;MACA,KAAAM,QAAA,GAAAkC,UAAA;IACA;IACA,MAAAD,mBAAA;MACA,WAAAG,GAAA,SAAAjC,MAAA,CAAAC,KAAA,CAAAC,YAAA;QACA,KAAAJ,sBAAA,CAAAuC,IAAA,CAAAJ,GAAA,CAAAE,UAAA;MACA;MACA,KAAArC,sBAAA,OAAAwC,GAAA,MAAAxC,sBAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}