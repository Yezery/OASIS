{"ast":null,"code":"import errCode from 'err-code';\nimport { messages, codes } from '../errors.js';\nimport { EventEmitter } from '@libp2p/interfaces/events';\nimport { symbol } from '@libp2p/interface-peer-discovery';\nexport class DummyDHT extends EventEmitter {\n  get [symbol]() {\n    return true;\n  }\n  get [Symbol.toStringTag]() {\n    return '@libp2p/dummy-dht';\n  }\n  get wan() {\n    throw errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED);\n  }\n  get lan() {\n    throw errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED);\n  }\n  get() {\n    throw errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED);\n  }\n  findProviders() {\n    throw errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED);\n  }\n  findPeer() {\n    throw errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED);\n  }\n  getClosestPeers() {\n    throw errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED);\n  }\n  provide() {\n    throw errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED);\n  }\n  put() {\n    throw errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED);\n  }\n  async getMode() {\n    throw errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED);\n  }\n  async setMode() {\n    throw errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED);\n  }\n  async refreshRoutingTable() {\n    throw errCode(new Error(messages.DHT_DISABLED), codes.DHT_DISABLED);\n  }\n}","map":{"version":3,"names":["errCode","messages","codes","EventEmitter","symbol","DummyDHT","Symbol","toStringTag","wan","Error","DHT_DISABLED","lan","get","findProviders","findPeer","getClosestPeers","provide","put","getMode","setMode","refreshRoutingTable"],"sources":["../../../src/dht/dummy-dht.ts"],"sourcesContent":[null],"mappings":"AAEA,OAAOA,OAAO,MAAM,UAAU;AAC9B,SAASC,QAAQ,EAAEC,KAAK,QAAQ,cAAc;AAC9C,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,MAAM,QAAQ,kCAAkC;AAEzD,OAAM,MAAOC,QAAS,SAAQF,YAAiC;EAC7D,KAAKC,MAAM,IAAC;IACV,OAAO,IAAI;EACb;EAEA,KAAKE,MAAM,CAACC,WAAW,IAAC;IACtB,OAAO,mBAAmB;EAC5B;EAEA,IAAIC,GAAGA,CAAA;IACL,MAAMR,OAAO,CAAC,IAAIS,KAAK,CAACR,QAAQ,CAACS,YAAY,CAAC,EAAER,KAAK,CAACQ,YAAY,CAAC;EACrE;EAEA,IAAIC,GAAGA,CAAA;IACL,MAAMX,OAAO,CAAC,IAAIS,KAAK,CAACR,QAAQ,CAACS,YAAY,CAAC,EAAER,KAAK,CAACQ,YAAY,CAAC;EACrE;EAEAE,GAAGA,CAAA;IACD,MAAMZ,OAAO,CAAC,IAAIS,KAAK,CAACR,QAAQ,CAACS,YAAY,CAAC,EAAER,KAAK,CAACQ,YAAY,CAAC;EACrE;EAEAG,aAAaA,CAAA;IACX,MAAMb,OAAO,CAAC,IAAIS,KAAK,CAACR,QAAQ,CAACS,YAAY,CAAC,EAAER,KAAK,CAACQ,YAAY,CAAC;EACrE;EAEAI,QAAQA,CAAA;IACN,MAAMd,OAAO,CAAC,IAAIS,KAAK,CAACR,QAAQ,CAACS,YAAY,CAAC,EAAER,KAAK,CAACQ,YAAY,CAAC;EACrE;EAEAK,eAAeA,CAAA;IACb,MAAMf,OAAO,CAAC,IAAIS,KAAK,CAACR,QAAQ,CAACS,YAAY,CAAC,EAAER,KAAK,CAACQ,YAAY,CAAC;EACrE;EAEAM,OAAOA,CAAA;IACL,MAAMhB,OAAO,CAAC,IAAIS,KAAK,CAACR,QAAQ,CAACS,YAAY,CAAC,EAAER,KAAK,CAACQ,YAAY,CAAC;EACrE;EAEAO,GAAGA,CAAA;IACD,MAAMjB,OAAO,CAAC,IAAIS,KAAK,CAACR,QAAQ,CAACS,YAAY,CAAC,EAAER,KAAK,CAACQ,YAAY,CAAC;EACrE;EAEA,MAAMQ,OAAOA,CAAA;IACX,MAAMlB,OAAO,CAAC,IAAIS,KAAK,CAACR,QAAQ,CAACS,YAAY,CAAC,EAAER,KAAK,CAACQ,YAAY,CAAC;EACrE;EAEA,MAAMS,OAAOA,CAAA;IACX,MAAMnB,OAAO,CAAC,IAAIS,KAAK,CAACR,QAAQ,CAACS,YAAY,CAAC,EAAER,KAAK,CAACQ,YAAY,CAAC;EACrE;EAEA,MAAMU,mBAAmBA,CAAA;IACvB,MAAMpB,OAAO,CAAC,IAAIS,KAAK,CAACR,QAAQ,CAACS,YAAY,CAAC,EAAER,KAAK,CAACQ,YAAY,CAAC;EACrE"},"metadata":{},"sourceType":"module","externalDependencies":[]}