{"ast":null,"code":"import { setMaxListeners } from 'events';\nimport take from 'it-take';\nimport length from 'it-length';\nimport { QUERY_SELF_INTERVAL, QUERY_SELF_TIMEOUT, K } from './constants.js';\nimport { TimeoutController } from 'timeout-abort-controller';\nimport { anySignal } from 'any-signal';\nimport { logger } from '@libp2p/logger';\nimport { pipe } from 'it-pipe';\n/**\n * Receives notifications of new peers joining the network that support the DHT protocol\n */\nexport class QuerySelf {\n  constructor(components, init) {\n    const {\n      peerRouting,\n      lan,\n      count,\n      interval,\n      queryTimeout\n    } = init;\n    this.components = components;\n    this.log = logger(`libp2p:kad-dht:${lan ? 'lan' : 'wan'}:query-self`);\n    this.running = false;\n    this.peerRouting = peerRouting;\n    this.count = count ?? K;\n    this.interval = interval ?? QUERY_SELF_INTERVAL;\n    this.queryTimeout = queryTimeout ?? QUERY_SELF_TIMEOUT;\n  }\n  isStarted() {\n    return this.running;\n  }\n  async start() {\n    if (this.running) {\n      return;\n    }\n    this.running = true;\n    this._querySelf();\n  }\n  async stop() {\n    this.running = false;\n    if (this.timeoutId != null) {\n      clearTimeout(this.timeoutId);\n    }\n    if (this.controller != null) {\n      this.controller.abort();\n    }\n  }\n  _querySelf() {\n    Promise.resolve().then(async () => {\n      const timeoutController = new TimeoutController(this.queryTimeout);\n      try {\n        this.controller = new AbortController();\n        const signal = anySignal([this.controller.signal, timeoutController.signal]);\n        // this controller will get used for lots of dial attempts so make sure we don't cause warnings to be logged\n        try {\n          if (setMaxListeners != null) {\n            setMaxListeners(Infinity, signal);\n          }\n        } catch {} // fails on node < 15.4\n        const found = await pipe(this.peerRouting.getClosestPeers(this.components.peerId.toBytes(), {\n          signal\n        }), source => take(source, this.count), async source => await length(source));\n        this.log('query ran successfully - found %d peers', found);\n      } catch (err) {\n        this.log('query error', err);\n      } finally {\n        this.timeoutId = setTimeout(this._querySelf.bind(this), this.interval);\n        timeoutController.clear();\n      }\n    }).catch(err => {\n      this.log('query error', err);\n    });\n  }\n}","map":{"version":3,"names":["setMaxListeners","take","length","QUERY_SELF_INTERVAL","QUERY_SELF_TIMEOUT","K","TimeoutController","anySignal","logger","pipe","QuerySelf","constructor","components","init","peerRouting","lan","count","interval","queryTimeout","log","running","isStarted","start","_querySelf","stop","timeoutId","clearTimeout","controller","abort","Promise","resolve","then","timeoutController","AbortController","signal","Infinity","found","getClosestPeers","peerId","toBytes","source","err","setTimeout","bind","clear","catch"],"sources":["../../src/query-self.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}