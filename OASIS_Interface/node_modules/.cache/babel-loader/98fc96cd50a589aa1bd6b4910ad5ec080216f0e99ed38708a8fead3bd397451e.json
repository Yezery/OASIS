{"ast":null,"code":"import { Key } from 'interface-datastore/key';\nimport { notFoundError } from 'datastore-core/errors';\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\nexport const CONFIG_KEY = new Key('/config');\nexport const VERSION_KEY = new Key('/version');\n\n/**\n * Level dbs wrap level dbs that wrap level dbs. Find a level-js\n * instance in the chain if one exists.\n *\n * @param {Datastore} store\n * @returns {Datastore | undefined}\n */\nexport function findLevelJs(store) {\n  let db = store;\n\n  // @ts-ignore\n  while (db.db || db.child) {\n    // @ts-ignore\n    db = db.db || db.child;\n\n    // `Level` is only present in the browser, in node it is LevelDOWN\n    // @ts-ignore\n    if (db.type === 'level-js' || db.constructor.name === 'Level') {\n      return db;\n    }\n  }\n}\n\n/**\n * @param {Key} key\n * @param {function (Key): Promise<boolean>} has\n * @param {Datastore} store\n * @returns {Promise<boolean>}\n */\nexport async function hasWithFallback(key, has, store) {\n  const result = await has(key);\n  if (result) {\n    return result;\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array  so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store);\n  if (!levelJs) {\n    return false;\n  }\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString());\n    req.transaction.onabort = () => {\n      reject(req.transaction.error);\n    };\n    req.transaction.oncomplete = () => {\n      resolve(Boolean(req.result));\n    };\n  });\n}\n\n/**\n * @param {import('interface-datastore').Key} key\n * @param {function (Key): Promise<Uint8Array>} get\n * @param {function (Key): Promise<boolean>} has\n * @param {import('interface-datastore').Datastore} store\n * @returns {Promise<Uint8Array>}\n */\nasync function getWithFallback(key, get, has, store) {\n  if (await has(key)) {\n    return get(key);\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store);\n  if (!levelJs) {\n    throw notFoundError();\n  }\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString());\n    req.transaction.onabort = () => {\n      reject(req.transaction.error);\n    };\n    req.transaction.oncomplete = () => {\n      if (req.result) {\n        return resolve(req.result);\n      }\n      reject(notFoundError());\n    };\n  });\n}\n\n/**\n * @param {Datastore} store\n */\nfunction wrapStore(store) {\n  // necessary since level-js@5 cannot read keys from level-js@4 and earlier\n  const originalGet = store.get.bind(store);\n  const originalHas = store.has.bind(store);\n  /**\n   * @param {Key} key\n   */\n  store.get = key => getWithFallback(key, originalGet, originalHas, store);\n  /**\n   * @param {Key} key\n   */\n  store.has = key => hasWithFallback(key, originalHas, store);\n  return store;\n}\n\n/**\n * @param {import('./types').Backends} backends\n */\nexport function wrapBackends(backends) {\n  return {\n    ...backends,\n    root: wrapStore(backends.root),\n    datastore: wrapStore(backends.datastore),\n    pins: wrapStore(backends.pins),\n    keys: wrapStore(backends.keys)\n  };\n}","map":{"version":3,"names":["Key","notFoundError","CONFIG_KEY","VERSION_KEY","findLevelJs","store","db","child","type","constructor","name","hasWithFallback","key","has","result","levelJs","Promise","resolve","reject","req","get","toString","transaction","onabort","error","oncomplete","Boolean","getWithFallback","wrapStore","originalGet","bind","originalHas","wrapBackends","backends","root","datastore","pins","keys"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-repo-migrations@15.0.0/node_modules/ipfs-repo-migrations/src/utils.js"],"sourcesContent":["\nimport { Key } from 'interface-datastore/key'\nimport { notFoundError } from 'datastore-core/errors'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\nexport const CONFIG_KEY = new Key('/config')\nexport const VERSION_KEY = new Key('/version')\n\n/**\n * Level dbs wrap level dbs that wrap level dbs. Find a level-js\n * instance in the chain if one exists.\n *\n * @param {Datastore} store\n * @returns {Datastore | undefined}\n */\nexport function findLevelJs (store) {\n  let db = store\n\n  // @ts-ignore\n  while (db.db || db.child) {\n    // @ts-ignore\n    db = db.db || db.child\n\n    // `Level` is only present in the browser, in node it is LevelDOWN\n    // @ts-ignore\n    if (db.type === 'level-js' || db.constructor.name === 'Level') {\n      return db\n    }\n  }\n}\n\n/**\n * @param {Key} key\n * @param {function (Key): Promise<boolean>} has\n * @param {Datastore} store\n * @returns {Promise<boolean>}\n */\nexport async function hasWithFallback (key, has, store) {\n  const result = await has(key)\n\n  if (result) {\n    return result\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array  so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    return false\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      resolve(Boolean(req.result))\n    }\n  })\n}\n\n/**\n * @param {import('interface-datastore').Key} key\n * @param {function (Key): Promise<Uint8Array>} get\n * @param {function (Key): Promise<boolean>} has\n * @param {import('interface-datastore').Datastore} store\n * @returns {Promise<Uint8Array>}\n */\nasync function getWithFallback (key, get, has, store) {\n  if (await has(key)) {\n    return get(key)\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    throw notFoundError()\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      if (req.result) {\n        return resolve(req.result)\n      }\n\n      reject(notFoundError())\n    }\n  })\n}\n\n/**\n * @param {Datastore} store\n */\nfunction wrapStore (store) {\n  // necessary since level-js@5 cannot read keys from level-js@4 and earlier\n  const originalGet = store.get.bind(store)\n  const originalHas = store.has.bind(store)\n  /**\n   * @param {Key} key\n   */\n  store.get = (key) => getWithFallback(key, originalGet, originalHas, store)\n  /**\n   * @param {Key} key\n   */\n  store.has = (key) => hasWithFallback(key, originalHas, store)\n\n  return store\n}\n\n/**\n * @param {import('./types').Backends} backends\n */\nexport function wrapBackends (backends) {\n  return {\n    ...backends,\n    root: wrapStore(backends.root),\n    datastore: wrapStore(backends.datastore),\n    pins: wrapStore(backends.pins),\n    keys: wrapStore(backends.keys)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}