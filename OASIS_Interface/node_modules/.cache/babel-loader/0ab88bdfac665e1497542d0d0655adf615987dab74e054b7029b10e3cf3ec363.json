{"ast":null,"code":"import { logger } from '@libp2p/logger';\nimport { CodeError } from '@libp2p/interfaces/errors';\nimport { codes } from './errors.js';\nimport { peerIdFromPeerId } from '@libp2p/peer-id';\nimport { CustomEvent } from '@libp2p/interfaces/events';\nconst log = logger('libp2p:peer-store:proto-book');\nconst EVENT_NAME = 'change:protocols';\nexport class PeerStoreProtoBook {\n  /**\n   * The ProtoBook is responsible for keeping the known supported\n   * protocols of a peer\n   */\n  constructor(dispatchEvent, store) {\n    this.dispatchEvent = dispatchEvent;\n    this.store = store;\n  }\n  async get(peerId) {\n    log.trace('get wait for read lock');\n    const release = await this.store.lock.readLock();\n    log.trace('get got read lock');\n    try {\n      const peer = await this.store.load(peerId);\n      return peer.protocols;\n    } catch (err) {\n      if (err.code !== codes.ERR_NOT_FOUND) {\n        throw err;\n      }\n    } finally {\n      log.trace('get release read lock');\n      release();\n    }\n    return [];\n  }\n  async set(peerId, protocols) {\n    peerId = peerIdFromPeerId(peerId);\n    if (!Array.isArray(protocols)) {\n      log.error('protocols must be provided to store data');\n      throw new CodeError('protocols must be provided', codes.ERR_INVALID_PARAMETERS);\n    }\n    log.trace('set await write lock');\n    const release = await this.store.lock.writeLock();\n    log.trace('set got write lock');\n    let peer;\n    let updatedPeer;\n    try {\n      try {\n        peer = await this.store.load(peerId);\n        if (new Set([...protocols]).size === peer.protocols.length) {\n          return;\n        }\n      } catch (err) {\n        if (err.code !== codes.ERR_NOT_FOUND) {\n          throw err;\n        }\n      }\n      updatedPeer = await this.store.patchOrCreate(peerId, {\n        protocols\n      });\n      log('stored provided protocols for %p', peerId);\n    } finally {\n      log.trace('set release write lock');\n      release();\n    }\n    this.dispatchEvent(new CustomEvent(EVENT_NAME, {\n      detail: {\n        peerId,\n        protocols: updatedPeer.protocols,\n        oldProtocols: peer == null ? [] : peer.protocols\n      }\n    }));\n  }\n  async add(peerId, protocols) {\n    peerId = peerIdFromPeerId(peerId);\n    if (!Array.isArray(protocols)) {\n      log.error('protocols must be provided to store data');\n      throw new CodeError('protocols must be provided', codes.ERR_INVALID_PARAMETERS);\n    }\n    log.trace('add await write lock');\n    const release = await this.store.lock.writeLock();\n    log.trace('add got write lock');\n    let peer;\n    let updatedPeer;\n    try {\n      try {\n        peer = await this.store.load(peerId);\n        if (new Set([...peer.protocols, ...protocols]).size === peer.protocols.length) {\n          return;\n        }\n      } catch (err) {\n        if (err.code !== codes.ERR_NOT_FOUND) {\n          throw err;\n        }\n      }\n      updatedPeer = await this.store.mergeOrCreate(peerId, {\n        protocols\n      });\n      log('added provided protocols for %p', peerId);\n    } finally {\n      log.trace('add release write lock');\n      release();\n    }\n    this.dispatchEvent(new CustomEvent(EVENT_NAME, {\n      detail: {\n        peerId,\n        protocols: updatedPeer.protocols,\n        oldProtocols: peer == null ? [] : peer.protocols\n      }\n    }));\n  }\n  async remove(peerId, protocols) {\n    peerId = peerIdFromPeerId(peerId);\n    if (!Array.isArray(protocols)) {\n      log.error('protocols must be provided to store data');\n      throw new CodeError('protocols must be provided', codes.ERR_INVALID_PARAMETERS);\n    }\n    log.trace('remove await write lock');\n    const release = await this.store.lock.writeLock();\n    log.trace('remove got write lock');\n    let peer;\n    let updatedPeer;\n    try {\n      try {\n        peer = await this.store.load(peerId);\n        const protocolSet = new Set(peer.protocols);\n        for (const protocol of protocols) {\n          protocolSet.delete(protocol);\n        }\n        if (peer.protocols.length === protocolSet.size) {\n          return;\n        }\n        protocols = Array.from(protocolSet);\n      } catch (err) {\n        if (err.code !== codes.ERR_NOT_FOUND) {\n          throw err;\n        }\n      }\n      updatedPeer = await this.store.patchOrCreate(peerId, {\n        protocols\n      });\n    } finally {\n      log.trace('remove release write lock');\n      release();\n    }\n    this.dispatchEvent(new CustomEvent(EVENT_NAME, {\n      detail: {\n        peerId,\n        protocols: updatedPeer.protocols,\n        oldProtocols: peer == null ? [] : peer.protocols\n      }\n    }));\n  }\n  async delete(peerId) {\n    peerId = peerIdFromPeerId(peerId);\n    log.trace('delete await write lock');\n    const release = await this.store.lock.writeLock();\n    log.trace('delete got write lock');\n    let peer;\n    try {\n      try {\n        peer = await this.store.load(peerId);\n      } catch (err) {\n        if (err.code !== codes.ERR_NOT_FOUND) {\n          throw err;\n        }\n      }\n      await this.store.patchOrCreate(peerId, {\n        protocols: []\n      });\n    } finally {\n      log.trace('delete release write lock');\n      release();\n    }\n    if (peer != null) {\n      this.dispatchEvent(new CustomEvent(EVENT_NAME, {\n        detail: {\n          peerId,\n          protocols: [],\n          oldProtocols: peer.protocols\n        }\n      }));\n    }\n  }\n}","map":{"version":3,"names":["logger","CodeError","codes","peerIdFromPeerId","CustomEvent","log","EVENT_NAME","PeerStoreProtoBook","constructor","dispatchEvent","store","get","peerId","trace","release","lock","readLock","peer","load","protocols","err","code","ERR_NOT_FOUND","set","Array","isArray","error","ERR_INVALID_PARAMETERS","writeLock","updatedPeer","Set","size","length","patchOrCreate","detail","oldProtocols","add","mergeOrCreate","remove","protocolSet","protocol","delete","from"],"sources":["../../src/proto-book.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}