{"ast":null,"code":"import _defineProperty from \"/Users/yezery/Oasis/OASIS/node_modules/.store/@babel+runtime@7.22.15/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nlet _Symbol$iterator;\nimport { peerIdFromString } from '@libp2p/peer-id';\nimport { mapIterable } from './util.js';\n/**\n * We can't use PeerIds as set entries because set entries are\n * compared using same-value-zero equality, so this is just\n * a map that stringifies the PeerIds before storing them.\n *\n * PeerIds cache stringified versions of themselves so this\n * should be a cheap operation.\n *\n * @example\n *\n * ```JavaScript\n * import { peerSet } from '@libp2p/peer-collections'\n *\n * const set = peerSet()\n * set.add(peerId)\n * ```\n */\n_Symbol$iterator = Symbol.iterator;\nexport class PeerSet {\n  constructor(set) {\n    _defineProperty(this, \"set\", void 0);\n    this.set = new Set();\n    if (set != null) {\n      for (const key of set) {\n        this.set.add(key.toString());\n      }\n    }\n  }\n  get size() {\n    return this.set.size;\n  }\n  [_Symbol$iterator]() {\n    return this.values();\n  }\n  add(peer) {\n    this.set.add(peer.toString());\n  }\n  clear() {\n    this.set.clear();\n  }\n  delete(peer) {\n    this.set.delete(peer.toString());\n  }\n  entries() {\n    return mapIterable(this.set.entries(), val => {\n      const peerId = peerIdFromString(val[0]);\n      return [peerId, peerId];\n    });\n  }\n  forEach(predicate) {\n    this.set.forEach(str => {\n      const id = peerIdFromString(str);\n      predicate(id, id, this);\n    });\n  }\n  has(peer) {\n    return this.set.has(peer.toString());\n  }\n  values() {\n    return mapIterable(this.set.values(), val => {\n      return peerIdFromString(val);\n    });\n  }\n  intersection(other) {\n    const output = new PeerSet();\n    for (const peerId of other) {\n      if (this.has(peerId)) {\n        output.add(peerId);\n      }\n    }\n    return output;\n  }\n  difference(other) {\n    const output = new PeerSet();\n    for (const peerId of this) {\n      if (!other.has(peerId)) {\n        output.add(peerId);\n      }\n    }\n    return output;\n  }\n  union(other) {\n    const output = new PeerSet();\n    for (const peerId of other) {\n      output.add(peerId);\n    }\n    for (const peerId of this) {\n      output.add(peerId);\n    }\n    return output;\n  }\n}","map":{"version":3,"names":["peerIdFromString","mapIterable","_Symbol$iterator","Symbol","iterator","PeerSet","constructor","set","_defineProperty","Set","key","add","toString","size","values","peer","clear","delete","entries","val","peerId","forEach","predicate","str","id","has","intersection","other","output","difference","union"],"sources":["../../src/set.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}