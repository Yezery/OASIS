{"ast":null,"code":"const V = -1;\nexport const names = {};\nexport const codes = {};\nexport const table = [[4, 32, 'ip4'], [6, 16, 'tcp'], [33, 16, 'dccp'], [41, 128, 'ip6'], [42, V, 'ip6zone'], [43, 8, 'ipcidr'], [53, V, 'dns', true], [54, V, 'dns4', true], [55, V, 'dns6', true], [56, V, 'dnsaddr', true], [132, 16, 'sctp'], [273, 16, 'udp'], [275, 0, 'p2p-webrtc-star'], [276, 0, 'p2p-webrtc-direct'], [277, 0, 'p2p-stardust'], [280, 0, 'webrtc-direct'], [281, 0, 'webrtc'], [290, 0, 'p2p-circuit'], [301, 0, 'udt'], [302, 0, 'utp'], [400, V, 'unix', false, true],\n// `ipfs` is added before `p2p` for legacy support.\n// All text representations will default to `p2p`, but `ipfs` will\n// still be supported\n[421, V, 'ipfs'],\n// `p2p` is the preferred name for 421, and is now the default\n[421, V, 'p2p'], [443, 0, 'https'], [444, 96, 'onion'], [445, 296, 'onion3'], [446, V, 'garlic64'], [448, 0, 'tls'], [449, V, 'sni'], [460, 0, 'quic'], [461, 0, 'quic-v1'], [465, 0, 'webtransport'], [466, V, 'certhash'], [477, 0, 'ws'], [478, 0, 'wss'], [479, 0, 'p2p-websocket-star'], [480, 0, 'http'], [777, V, 'memory']];\n// populate tables\ntable.forEach(row => {\n  const proto = createProtocol(...row);\n  codes[proto.code] = proto;\n  names[proto.name] = proto;\n});\nexport function createProtocol(code, size, name, resolvable, path) {\n  return {\n    code,\n    size,\n    name,\n    resolvable: Boolean(resolvable),\n    path: Boolean(path)\n  };\n}\n/**\n * For the passed proto string or number, return a {@link Protocol}\n *\n * @example\n *\n * ```js\n * import { protocol } from '@multiformats/multiaddr'\n *\n * console.info(protocol(4))\n * // { code: 4, size: 32, name: 'ip4', resolvable: false, path: false }\n * ```\n */\nexport function getProtocol(proto) {\n  if (typeof proto === 'number') {\n    if (codes[proto] != null) {\n      return codes[proto];\n    }\n    throw new Error(`no protocol with code: ${proto}`);\n  } else if (typeof proto === 'string') {\n    if (names[proto] != null) {\n      return names[proto];\n    }\n    throw new Error(`no protocol with name: ${proto}`);\n  }\n  throw new Error(`invalid protocol id type: ${typeof proto}`);\n}","map":{"version":3,"names":["V","names","codes","table","forEach","row","proto","createProtocol","code","name","size","resolvable","path","Boolean","getProtocol","Error"],"sources":["../../src/protocols-table.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}