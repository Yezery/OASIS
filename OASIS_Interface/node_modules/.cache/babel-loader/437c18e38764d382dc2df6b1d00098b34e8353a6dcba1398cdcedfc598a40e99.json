{"ast":null,"code":"/* global indexedDB */\n\n'use strict';\n\nconst {\n  AbstractLevel\n} = require('abstract-level');\nconst ModuleError = require('module-error');\nconst parallel = require('run-parallel-limit');\nconst {\n  fromCallback\n} = require('catering');\nconst {\n  Iterator\n} = require('./iterator');\nconst deserialize = require('./util/deserialize');\nconst clear = require('./util/clear');\nconst createKeyRange = require('./util/key-range');\n\n// Keep as-is for compatibility with existing level-js databases\nconst DEFAULT_PREFIX = 'level-js-';\nconst kIDB = Symbol('idb');\nconst kNamePrefix = Symbol('namePrefix');\nconst kLocation = Symbol('location');\nconst kVersion = Symbol('version');\nconst kStore = Symbol('store');\nconst kOnComplete = Symbol('onComplete');\nconst kPromise = Symbol('promise');\nclass BrowserLevel extends AbstractLevel {\n  constructor(location, options, _) {\n    // To help migrating to abstract-level\n    if (typeof options === 'function' || typeof _ === 'function') {\n      throw new ModuleError('The levelup-style callback argument has been removed', {\n        code: 'LEVEL_LEGACY'\n      });\n    }\n    const {\n      prefix,\n      version,\n      ...forward\n    } = options || {};\n    super({\n      encodings: {\n        view: true\n      },\n      snapshots: false,\n      createIfMissing: false,\n      errorIfExists: false,\n      seek: true\n    }, forward);\n    if (typeof location !== 'string') {\n      throw new Error('constructor requires a location string argument');\n    }\n\n    // TODO (next major): remove default prefix\n    this[kLocation] = location;\n    this[kNamePrefix] = prefix == null ? DEFAULT_PREFIX : prefix;\n    this[kVersion] = parseInt(version || 1, 10);\n    this[kIDB] = null;\n  }\n  get location() {\n    return this[kLocation];\n  }\n  get namePrefix() {\n    return this[kNamePrefix];\n  }\n  get version() {\n    return this[kVersion];\n  }\n\n  // Exposed for backwards compat and unit tests\n  get db() {\n    return this[kIDB];\n  }\n  get type() {\n    return 'browser-level';\n  }\n  _open(options, callback) {\n    const req = indexedDB.open(this[kNamePrefix] + this[kLocation], this[kVersion]);\n    req.onerror = function () {\n      callback(req.error || new Error('unknown error'));\n    };\n    req.onsuccess = () => {\n      this[kIDB] = req.result;\n      callback();\n    };\n    req.onupgradeneeded = ev => {\n      const db = ev.target.result;\n      if (!db.objectStoreNames.contains(this[kLocation])) {\n        db.createObjectStore(this[kLocation]);\n      }\n    };\n  }\n  [kStore](mode) {\n    const transaction = this[kIDB].transaction([this[kLocation]], mode);\n    return transaction.objectStore(this[kLocation]);\n  }\n  [kOnComplete](request, callback) {\n    const transaction = request.transaction;\n\n    // Take advantage of the fact that a non-canceled request error aborts\n    // the transaction. I.e. no need to listen for \"request.onerror\".\n    transaction.onabort = function () {\n      callback(transaction.error || new Error('aborted by user'));\n    };\n    transaction.oncomplete = function () {\n      callback(null, request.result);\n    };\n  }\n  _get(key, options, callback) {\n    const store = this[kStore]('readonly');\n    let req;\n    try {\n      req = store.get(key);\n    } catch (err) {\n      return this.nextTick(callback, err);\n    }\n    this[kOnComplete](req, function (err, value) {\n      if (err) return callback(err);\n      if (value === undefined) {\n        return callback(new ModuleError('Entry not found', {\n          code: 'LEVEL_NOT_FOUND'\n        }));\n      }\n      callback(null, deserialize(value));\n    });\n  }\n  _getMany(keys, options, callback) {\n    const store = this[kStore]('readonly');\n    const tasks = keys.map(key => next => {\n      let request;\n      try {\n        request = store.get(key);\n      } catch (err) {\n        return next(err);\n      }\n      request.onsuccess = () => {\n        const value = request.result;\n        next(null, value === undefined ? value : deserialize(value));\n      };\n      request.onerror = ev => {\n        ev.stopPropagation();\n        next(request.error);\n      };\n    });\n    parallel(tasks, 16, callback);\n  }\n  _del(key, options, callback) {\n    const store = this[kStore]('readwrite');\n    let req;\n    try {\n      req = store.delete(key);\n    } catch (err) {\n      return this.nextTick(callback, err);\n    }\n    this[kOnComplete](req, callback);\n  }\n  _put(key, value, options, callback) {\n    const store = this[kStore]('readwrite');\n    let req;\n    try {\n      // Will throw a DataError or DataCloneError if the environment\n      // does not support serializing the key or value respectively.\n      req = store.put(value, key);\n    } catch (err) {\n      return this.nextTick(callback, err);\n    }\n    this[kOnComplete](req, callback);\n  }\n\n  // TODO: implement key and value iterators\n  _iterator(options) {\n    return new Iterator(this, this[kLocation], options);\n  }\n  _batch(operations, options, callback) {\n    const store = this[kStore]('readwrite');\n    const transaction = store.transaction;\n    let index = 0;\n    let error;\n    transaction.onabort = function () {\n      callback(error || transaction.error || new Error('aborted by user'));\n    };\n    transaction.oncomplete = function () {\n      callback();\n    };\n\n    // Wait for a request to complete before making the next, saving CPU.\n    function loop() {\n      const op = operations[index++];\n      const key = op.key;\n      let req;\n      try {\n        req = op.type === 'del' ? store.delete(key) : store.put(op.value, key);\n      } catch (err) {\n        error = err;\n        transaction.abort();\n        return;\n      }\n      if (index < operations.length) {\n        req.onsuccess = loop;\n      } else if (typeof transaction.commit === 'function') {\n        // Commit now instead of waiting for auto-commit\n        transaction.commit();\n      }\n    }\n    loop();\n  }\n  _clear(options, callback) {\n    let keyRange;\n    let req;\n    try {\n      keyRange = createKeyRange(options);\n    } catch (e) {\n      // The lower key is greater than the upper key.\n      // IndexedDB throws an error, but we'll just do nothing.\n      return this.nextTick(callback);\n    }\n    if (options.limit >= 0) {\n      // IDBObjectStore#delete(range) doesn't have such an option.\n      // Fall back to cursor-based implementation.\n      return clear(this, this[kLocation], keyRange, options, callback);\n    }\n    try {\n      const store = this[kStore]('readwrite');\n      req = keyRange ? store.delete(keyRange) : store.clear();\n    } catch (err) {\n      return this.nextTick(callback, err);\n    }\n    this[kOnComplete](req, callback);\n  }\n  _close(callback) {\n    this[kIDB].close();\n    this.nextTick(callback);\n  }\n}\nBrowserLevel.destroy = function (location, prefix, callback) {\n  if (typeof prefix === 'function') {\n    callback = prefix;\n    prefix = DEFAULT_PREFIX;\n  }\n  callback = fromCallback(callback, kPromise);\n  const request = indexedDB.deleteDatabase(prefix + location);\n  request.onsuccess = function () {\n    callback();\n  };\n  request.onerror = function (err) {\n    callback(err);\n  };\n  return callback[kPromise];\n};\nexports.BrowserLevel = BrowserLevel;","map":{"version":3,"names":["AbstractLevel","require","ModuleError","parallel","fromCallback","Iterator","deserialize","clear","createKeyRange","DEFAULT_PREFIX","kIDB","Symbol","kNamePrefix","kLocation","kVersion","kStore","kOnComplete","kPromise","BrowserLevel","constructor","location","options","_","code","prefix","version","forward","encodings","view","snapshots","createIfMissing","errorIfExists","seek","Error","parseInt","namePrefix","db","type","_open","callback","req","indexedDB","open","onerror","error","onsuccess","result","onupgradeneeded","ev","target","objectStoreNames","contains","createObjectStore","mode","transaction","objectStore","request","onabort","oncomplete","_get","key","store","get","err","nextTick","value","undefined","_getMany","keys","tasks","map","next","stopPropagation","_del","delete","_put","put","_iterator","_batch","operations","index","loop","op","abort","length","commit","_clear","keyRange","e","limit","_close","close","destroy","deleteDatabase","exports"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/browser-level@1.0.1/node_modules/browser-level/index.js"],"sourcesContent":["/* global indexedDB */\n\n'use strict'\n\nconst { AbstractLevel } = require('abstract-level')\nconst ModuleError = require('module-error')\nconst parallel = require('run-parallel-limit')\nconst { fromCallback } = require('catering')\nconst { Iterator } = require('./iterator')\nconst deserialize = require('./util/deserialize')\nconst clear = require('./util/clear')\nconst createKeyRange = require('./util/key-range')\n\n// Keep as-is for compatibility with existing level-js databases\nconst DEFAULT_PREFIX = 'level-js-'\n\nconst kIDB = Symbol('idb')\nconst kNamePrefix = Symbol('namePrefix')\nconst kLocation = Symbol('location')\nconst kVersion = Symbol('version')\nconst kStore = Symbol('store')\nconst kOnComplete = Symbol('onComplete')\nconst kPromise = Symbol('promise')\n\nclass BrowserLevel extends AbstractLevel {\n  constructor (location, options, _) {\n    // To help migrating to abstract-level\n    if (typeof options === 'function' || typeof _ === 'function') {\n      throw new ModuleError('The levelup-style callback argument has been removed', {\n        code: 'LEVEL_LEGACY'\n      })\n    }\n\n    const { prefix, version, ...forward } = options || {}\n\n    super({\n      encodings: { view: true },\n      snapshots: false,\n      createIfMissing: false,\n      errorIfExists: false,\n      seek: true\n    }, forward)\n\n    if (typeof location !== 'string') {\n      throw new Error('constructor requires a location string argument')\n    }\n\n    // TODO (next major): remove default prefix\n    this[kLocation] = location\n    this[kNamePrefix] = prefix == null ? DEFAULT_PREFIX : prefix\n    this[kVersion] = parseInt(version || 1, 10)\n    this[kIDB] = null\n  }\n\n  get location () {\n    return this[kLocation]\n  }\n\n  get namePrefix () {\n    return this[kNamePrefix]\n  }\n\n  get version () {\n    return this[kVersion]\n  }\n\n  // Exposed for backwards compat and unit tests\n  get db () {\n    return this[kIDB]\n  }\n\n  get type () {\n    return 'browser-level'\n  }\n\n  _open (options, callback) {\n    const req = indexedDB.open(this[kNamePrefix] + this[kLocation], this[kVersion])\n\n    req.onerror = function () {\n      callback(req.error || new Error('unknown error'))\n    }\n\n    req.onsuccess = () => {\n      this[kIDB] = req.result\n      callback()\n    }\n\n    req.onupgradeneeded = (ev) => {\n      const db = ev.target.result\n\n      if (!db.objectStoreNames.contains(this[kLocation])) {\n        db.createObjectStore(this[kLocation])\n      }\n    }\n  }\n\n  [kStore] (mode) {\n    const transaction = this[kIDB].transaction([this[kLocation]], mode)\n    return transaction.objectStore(this[kLocation])\n  }\n\n  [kOnComplete] (request, callback) {\n    const transaction = request.transaction\n\n    // Take advantage of the fact that a non-canceled request error aborts\n    // the transaction. I.e. no need to listen for \"request.onerror\".\n    transaction.onabort = function () {\n      callback(transaction.error || new Error('aborted by user'))\n    }\n\n    transaction.oncomplete = function () {\n      callback(null, request.result)\n    }\n  }\n\n  _get (key, options, callback) {\n    const store = this[kStore]('readonly')\n    let req\n\n    try {\n      req = store.get(key)\n    } catch (err) {\n      return this.nextTick(callback, err)\n    }\n\n    this[kOnComplete](req, function (err, value) {\n      if (err) return callback(err)\n\n      if (value === undefined) {\n        return callback(new ModuleError('Entry not found', {\n          code: 'LEVEL_NOT_FOUND'\n        }))\n      }\n\n      callback(null, deserialize(value))\n    })\n  }\n\n  _getMany (keys, options, callback) {\n    const store = this[kStore]('readonly')\n    const tasks = keys.map((key) => (next) => {\n      let request\n\n      try {\n        request = store.get(key)\n      } catch (err) {\n        return next(err)\n      }\n\n      request.onsuccess = () => {\n        const value = request.result\n        next(null, value === undefined ? value : deserialize(value))\n      }\n\n      request.onerror = (ev) => {\n        ev.stopPropagation()\n        next(request.error)\n      }\n    })\n\n    parallel(tasks, 16, callback)\n  }\n\n  _del (key, options, callback) {\n    const store = this[kStore]('readwrite')\n    let req\n\n    try {\n      req = store.delete(key)\n    } catch (err) {\n      return this.nextTick(callback, err)\n    }\n\n    this[kOnComplete](req, callback)\n  }\n\n  _put (key, value, options, callback) {\n    const store = this[kStore]('readwrite')\n    let req\n\n    try {\n      // Will throw a DataError or DataCloneError if the environment\n      // does not support serializing the key or value respectively.\n      req = store.put(value, key)\n    } catch (err) {\n      return this.nextTick(callback, err)\n    }\n\n    this[kOnComplete](req, callback)\n  }\n\n  // TODO: implement key and value iterators\n  _iterator (options) {\n    return new Iterator(this, this[kLocation], options)\n  }\n\n  _batch (operations, options, callback) {\n    const store = this[kStore]('readwrite')\n    const transaction = store.transaction\n    let index = 0\n    let error\n\n    transaction.onabort = function () {\n      callback(error || transaction.error || new Error('aborted by user'))\n    }\n\n    transaction.oncomplete = function () {\n      callback()\n    }\n\n    // Wait for a request to complete before making the next, saving CPU.\n    function loop () {\n      const op = operations[index++]\n      const key = op.key\n\n      let req\n\n      try {\n        req = op.type === 'del' ? store.delete(key) : store.put(op.value, key)\n      } catch (err) {\n        error = err\n        transaction.abort()\n        return\n      }\n\n      if (index < operations.length) {\n        req.onsuccess = loop\n      } else if (typeof transaction.commit === 'function') {\n        // Commit now instead of waiting for auto-commit\n        transaction.commit()\n      }\n    }\n\n    loop()\n  }\n\n  _clear (options, callback) {\n    let keyRange\n    let req\n\n    try {\n      keyRange = createKeyRange(options)\n    } catch (e) {\n      // The lower key is greater than the upper key.\n      // IndexedDB throws an error, but we'll just do nothing.\n      return this.nextTick(callback)\n    }\n\n    if (options.limit >= 0) {\n      // IDBObjectStore#delete(range) doesn't have such an option.\n      // Fall back to cursor-based implementation.\n      return clear(this, this[kLocation], keyRange, options, callback)\n    }\n\n    try {\n      const store = this[kStore]('readwrite')\n      req = keyRange ? store.delete(keyRange) : store.clear()\n    } catch (err) {\n      return this.nextTick(callback, err)\n    }\n\n    this[kOnComplete](req, callback)\n  }\n\n  _close (callback) {\n    this[kIDB].close()\n    this.nextTick(callback)\n  }\n}\n\nBrowserLevel.destroy = function (location, prefix, callback) {\n  if (typeof prefix === 'function') {\n    callback = prefix\n    prefix = DEFAULT_PREFIX\n  }\n\n  callback = fromCallback(callback, kPromise)\n  const request = indexedDB.deleteDatabase(prefix + location)\n\n  request.onsuccess = function () {\n    callback()\n  }\n\n  request.onerror = function (err) {\n    callback(err)\n  }\n\n  return callback[kPromise]\n}\n\nexports.BrowserLevel = BrowserLevel\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}