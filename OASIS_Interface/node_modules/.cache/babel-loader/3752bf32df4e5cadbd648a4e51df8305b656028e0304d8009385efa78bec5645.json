{"ast":null,"code":"'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\n// Truncate string by size in bytes\nmodule.exports = function getByteLength(string) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n  var charLength = string.length;\n  var byteLength = 0;\n  var codePoint = null;\n  var prevCodePoint = null;\n  for (var i = 0; i < charLength; i++) {\n    codePoint = string.charCodeAt(i);\n    // handle 4-byte non-BMP chars\n    // low surrogate\n    if (isLowSurrogate(codePoint)) {\n      // when parsing previous hi-surrogate, 3 is added to byteLength\n      if (prevCodePoint != null && isHighSurrogate(prevCodePoint)) {\n        byteLength += 1;\n      } else {\n        byteLength += 3;\n      }\n    } else if (codePoint <= 0x7f) {\n      byteLength += 1;\n    } else if (codePoint >= 0x80 && codePoint <= 0x7ff) {\n      byteLength += 2;\n    } else if (codePoint >= 0x800 && codePoint <= 0xffff) {\n      byteLength += 3;\n    }\n    prevCodePoint = codePoint;\n  }\n  return byteLength;\n};","map":{"version":3,"names":["isHighSurrogate","codePoint","isLowSurrogate","module","exports","getByteLength","string","Error","charLength","length","byteLength","prevCodePoint","i","charCodeAt"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/utf8-byte-length@1.0.4/node_modules/utf8-byte-length/browser.js"],"sourcesContent":["'use strict';\n\nfunction isHighSurrogate(codePoint) {\n  return codePoint >= 0xd800 && codePoint <= 0xdbff;\n}\n\nfunction isLowSurrogate(codePoint) {\n  return codePoint >= 0xdc00 && codePoint <= 0xdfff;\n}\n\n// Truncate string by size in bytes\nmodule.exports = function getByteLength(string) {\n  if (typeof string !== \"string\") {\n    throw new Error(\"Input must be string\");\n  }\n\n  var charLength = string.length;\n  var byteLength = 0;\n  var codePoint = null;\n  var prevCodePoint = null;\n  for (var i = 0; i < charLength; i++) {\n    codePoint = string.charCodeAt(i);\n    // handle 4-byte non-BMP chars\n    // low surrogate\n    if (isLowSurrogate(codePoint)) {\n      // when parsing previous hi-surrogate, 3 is added to byteLength\n      if (prevCodePoint != null && isHighSurrogate(prevCodePoint)) {\n        byteLength += 1;\n      }\n      else {\n        byteLength += 3;\n      }\n    }\n    else if (codePoint <= 0x7f ) {\n      byteLength += 1;\n    }\n    else if (codePoint >= 0x80 && codePoint <= 0x7ff) {\n      byteLength += 2;\n    }\n    else if (codePoint >= 0x800 && codePoint <= 0xffff) {\n      byteLength += 3;\n    }\n    prevCodePoint = codePoint;\n  }\n\n  return byteLength;\n};\n"],"mappings":"AAAA,YAAY;;AAEZ,SAASA,eAAeA,CAACC,SAAS,EAAE;EAClC,OAAOA,SAAS,IAAI,MAAM,IAAIA,SAAS,IAAI,MAAM;AACnD;AAEA,SAASC,cAAcA,CAACD,SAAS,EAAE;EACjC,OAAOA,SAAS,IAAI,MAAM,IAAIA,SAAS,IAAI,MAAM;AACnD;;AAEA;AACAE,MAAM,CAACC,OAAO,GAAG,SAASC,aAAaA,CAACC,MAAM,EAAE;EAC9C,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC9B,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACzC;EAEA,IAAIC,UAAU,GAAGF,MAAM,CAACG,MAAM;EAC9B,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIT,SAAS,GAAG,IAAI;EACpB,IAAIU,aAAa,GAAG,IAAI;EACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,UAAU,EAAEI,CAAC,EAAE,EAAE;IACnCX,SAAS,GAAGK,MAAM,CAACO,UAAU,CAACD,CAAC,CAAC;IAChC;IACA;IACA,IAAIV,cAAc,CAACD,SAAS,CAAC,EAAE;MAC7B;MACA,IAAIU,aAAa,IAAI,IAAI,IAAIX,eAAe,CAACW,aAAa,CAAC,EAAE;QAC3DD,UAAU,IAAI,CAAC;MACjB,CAAC,MACI;QACHA,UAAU,IAAI,CAAC;MACjB;IACF,CAAC,MACI,IAAIT,SAAS,IAAI,IAAI,EAAG;MAC3BS,UAAU,IAAI,CAAC;IACjB,CAAC,MACI,IAAIT,SAAS,IAAI,IAAI,IAAIA,SAAS,IAAI,KAAK,EAAE;MAChDS,UAAU,IAAI,CAAC;IACjB,CAAC,MACI,IAAIT,SAAS,IAAI,KAAK,IAAIA,SAAS,IAAI,MAAM,EAAE;MAClDS,UAAU,IAAI,CAAC;IACjB;IACAC,aAAa,GAAGV,SAAS;EAC3B;EAEA,OAAOS,UAAU;AACnB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}