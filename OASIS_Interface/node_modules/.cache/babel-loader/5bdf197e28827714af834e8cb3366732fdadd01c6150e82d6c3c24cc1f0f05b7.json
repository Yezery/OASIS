{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createImport({\n  keychain\n}) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"import\"]}\n   */\n  const importKey = (name, pem, password) => {\n    return keychain.importKey(name, pem, password);\n  };\n  return withTimeoutOption(importKey);\n}","map":{"version":3,"names":["withTimeoutOption","createImport","keychain","importKey","name","pem","password"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-core@0.18.1/node_modules/ipfs-core/src/components/key/import.js"],"sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createImport ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"import\"]}\n   */\n  const importKey = (name, pem, password) => {\n    return keychain.importKey(name, pem, password)\n  }\n\n  return withTimeoutOption(importKey)\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,qCAAqC;;AAEvE;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAAE;EAAEC;AAAS,CAAC,EAAE;EAC1C;AACF;AACA;EACE,MAAMC,SAAS,GAAGA,CAACC,IAAI,EAAEC,GAAG,EAAEC,QAAQ,KAAK;IACzC,OAAOJ,QAAQ,CAACC,SAAS,CAACC,IAAI,EAAEC,GAAG,EAAEC,QAAQ,CAAC;EAChD,CAAC;EAED,OAAON,iBAAiB,CAACG,SAAS,CAAC;AACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}