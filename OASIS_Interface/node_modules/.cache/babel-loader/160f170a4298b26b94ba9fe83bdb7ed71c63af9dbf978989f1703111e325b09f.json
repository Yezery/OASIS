{"ast":null,"code":"import { abortableSource } from 'abortable-iterator';\nimport { CLOSE_TIMEOUT } from './constants.js';\nimport { logger } from '@libp2p/logger';\nconst log = logger('libp2p:webrtc-star:socket');\n/**\n * Convert a socket into a MultiaddrConnection\n * https://github.com/libp2p/js-libp2p-interfaces/tree/master/src/transport#multiaddrconnection\n */\nexport function toMultiaddrConnection(socket, options) {\n  const {\n    sink,\n    source\n  } = socket;\n  const maConn = {\n    remoteAddr: options.remoteAddr,\n    async sink(source) {\n      if (options.signal != null) {\n        source = abortableSource(source, options.signal);\n      }\n      try {\n        await sink(source);\n      } catch (err) {\n        // If aborted we can safely ignore\n        if (err.type !== 'aborted') {\n          // If the source errored the socket will already have been destroyed by\n          // toIterable.duplex(). If the socket errored it will already be\n          // destroyed. There's nothing to do here except log the error & return.\n          log.error(err);\n        }\n      }\n    },\n    source: options.signal != null ? abortableSource(source, options.signal) : source,\n    timeline: {\n      open: Date.now()\n    },\n    async close() {\n      if (socket.closed) {\n        return;\n      }\n      const start = Date.now();\n      // Attempt to end the socket. If it takes longer to close than the\n      // timeout, destroy it manually.\n      const timeout = setTimeout(() => {\n        if (maConn.remoteAddr != null) {\n          const {\n            host,\n            port\n          } = maConn.remoteAddr.toOptions();\n          log('timeout closing socket to %s:%s after %dms, destroying it manually', host, port, Date.now() - start);\n        }\n        if (!socket.closed) {\n          socket.close().catch(err => {\n            log.error('could not close socket', err);\n          });\n        }\n      }, CLOSE_TIMEOUT);\n      try {\n        await socket.close();\n      } finally {\n        clearTimeout(timeout);\n      }\n    }\n  };\n  socket.addEventListener('close', () => {\n    // In instances where `close` was not explicitly called,\n    // such as an iterable stream ending, ensure we have set the close\n    // timeline\n    if (maConn.timeline.close == null) {\n      maConn.timeline.close = Date.now();\n    }\n  }, {\n    once: true\n  });\n  return maConn;\n}","map":{"version":3,"names":["abortableSource","CLOSE_TIMEOUT","logger","log","toMultiaddrConnection","socket","options","sink","source","maConn","remoteAddr","signal","err","type","error","timeline","open","Date","now","close","closed","start","timeout","setTimeout","host","port","toOptions","catch","clearTimeout","addEventListener","once"],"sources":["../../src/socket-to-conn.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,eAAe,QAAQ,oBAAoB;AACpD,SAASC,aAAa,QAAQ,gBAAgB;AAC9C,SAASC,MAAM,QAAQ,gBAAgB;AAMvC,MAAMC,GAAG,GAAGD,MAAM,CAAC,2BAA2B,CAAC;AAM/C;;;;AAIA,OAAM,SAAUE,qBAAqBA,CAAEC,MAAkB,EAAEC,OAAqC;EAC9F,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAE,GAAGH,MAAM;EAE/B,MAAMI,MAAM,GAAwB;IAClCC,UAAU,EAAEJ,OAAO,CAACI,UAAU;IAE9B,MAAMH,IAAIA,CAAEC,MAAM;MAChB,IAAIF,OAAO,CAACK,MAAM,IAAI,IAAI,EAAE;QAC1BH,MAAM,GAAGR,eAAe,CAACQ,MAAM,EAAEF,OAAO,CAACK,MAAM,CAAC;;MAGlD,IAAI;QACF,MAAMJ,IAAI,CAACC,MAAM,CAAC;OACnB,CAAC,OAAOI,GAAQ,EAAE;QACjB;QACA,IAAIA,GAAG,CAACC,IAAI,KAAK,SAAS,EAAE;UAC1B;UACA;UACA;UACAV,GAAG,CAACW,KAAK,CAACF,GAAG,CAAC;;;IAGpB,CAAC;IAEDJ,MAAM,EAAGF,OAAO,CAACK,MAAM,IAAI,IAAI,GAAIX,eAAe,CAACQ,MAAM,EAAEF,OAAO,CAACK,MAAM,CAAC,GAAGH,MAAM;IAEnFO,QAAQ,EAAE;MAAEC,IAAI,EAAEC,IAAI,CAACC,GAAG;IAAE,CAAE;IAE9B,MAAMC,KAAKA,CAAA;MACT,IAAId,MAAM,CAACe,MAAM,EAAE;QACjB;;MAGF,MAAMC,KAAK,GAAGJ,IAAI,CAACC,GAAG,EAAE;MAExB;MACA;MACA,MAAMI,OAAO,GAAGC,UAAU,CAAC,MAAK;QAC9B,IAAId,MAAM,CAACC,UAAU,IAAI,IAAI,EAAE;UAC7B,MAAM;YAAEc,IAAI;YAAEC;UAAI,CAAE,GAAGhB,MAAM,CAACC,UAAU,CAACgB,SAAS,EAAE;UACpDvB,GAAG,CAAC,oEAAoE,EACtEqB,IAAI,EAAEC,IAAI,EAAER,IAAI,CAACC,GAAG,EAAE,GAAGG,KAAK,CAAC;;QAGnC,IAAI,CAAChB,MAAM,CAACe,MAAM,EAAE;UAClBf,MAAM,CAACc,KAAK,EAAE,CAACQ,KAAK,CAACf,GAAG,IAAG;YACzBT,GAAG,CAACW,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC;UAC1C,CAAC,CAAC;;MAEN,CAAC,EAAEX,aAAa,CAAC;MAEjB,IAAI;QACF,MAAMI,MAAM,CAACc,KAAK,EAAE;OACrB,SAAS;QACRS,YAAY,CAACN,OAAO,CAAC;;IAEzB;GACD;EAEDjB,MAAM,CAACwB,gBAAgB,CAAC,OAAO,EAAE,MAAK;IACpC;IACA;IACA;IACA,IAAIpB,MAAM,CAACM,QAAQ,CAACI,KAAK,IAAI,IAAI,EAAE;MACjCV,MAAM,CAACM,QAAQ,CAACI,KAAK,GAAGF,IAAI,CAACC,GAAG,EAAE;;EAEtC,CAAC,EAAE;IACDY,IAAI,EAAE;GACP,CAAC;EAEF,OAAOrB,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}