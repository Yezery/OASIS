{"ast":null,"code":"'use strict';\n\nvar util = require('util');\nvar zlib = require('zlib');\nvar ChunkStream = require('./chunkstream');\nvar FilterAsync = require('./filter-parse-async');\nvar Parser = require('./parser');\nvar bitmapper = require('./bitmapper');\nvar formatNormaliser = require('./format-normaliser');\nvar ParserAsync = module.exports = function (options) {\n  ChunkStream.call(this);\n  this._parser = new Parser(options, {\n    read: this.read.bind(this),\n    error: this._handleError.bind(this),\n    metadata: this._handleMetaData.bind(this),\n    gamma: this.emit.bind(this, 'gamma'),\n    palette: this._handlePalette.bind(this),\n    transColor: this._handleTransColor.bind(this),\n    finished: this._finished.bind(this),\n    inflateData: this._inflateData.bind(this)\n  });\n  this._options = options;\n  this.writable = true;\n  this._parser.start();\n};\nutil.inherits(ParserAsync, ChunkStream);\nParserAsync.prototype._handleError = function (err) {\n  this.emit('error', err);\n  this.writable = false;\n  this.destroy();\n  if (this._inflate && this._inflate.destroy) {\n    this._inflate.destroy();\n  }\n  this.errord = true;\n};\nParserAsync.prototype._inflateData = function (data) {\n  if (!this._inflate) {\n    this._inflate = zlib.createInflate();\n    this._inflate.on('error', this.emit.bind(this, 'error'));\n    this._filter.on('complete', this._complete.bind(this));\n    this._inflate.pipe(this._filter);\n  }\n  this._inflate.write(data);\n};\nParserAsync.prototype._handleMetaData = function (metaData) {\n  this.emit('metadata', metaData);\n  this._bitmapInfo = Object.create(metaData);\n  this._filter = new FilterAsync(this._bitmapInfo);\n};\nParserAsync.prototype._handleTransColor = function (transColor) {\n  this._bitmapInfo.transColor = transColor;\n};\nParserAsync.prototype._handlePalette = function (palette) {\n  this._bitmapInfo.palette = palette;\n};\nParserAsync.prototype._finished = function () {\n  if (this.errord) {\n    return;\n  }\n  if (!this._inflate) {\n    this.emit('error', 'No Inflate block');\n  } else {\n    // no more data to inflate\n    this._inflate.end();\n  }\n  this.destroySoon();\n};\nParserAsync.prototype._complete = function (filteredData) {\n  if (this.errord) {\n    return;\n  }\n  try {\n    var bitmapData = bitmapper.dataToBitMap(filteredData, this._bitmapInfo);\n    var normalisedBitmapData = formatNormaliser(bitmapData, this._bitmapInfo);\n    bitmapData = null;\n  } catch (ex) {\n    this._handleError(ex);\n    return;\n  }\n  this.emit('parsed', normalisedBitmapData);\n};","map":{"version":3,"names":["util","require","zlib","ChunkStream","FilterAsync","Parser","bitmapper","formatNormaliser","ParserAsync","module","exports","options","call","_parser","read","bind","error","_handleError","metadata","_handleMetaData","gamma","emit","palette","_handlePalette","transColor","_handleTransColor","finished","_finished","inflateData","_inflateData","_options","writable","start","inherits","prototype","err","destroy","_inflate","errord","data","createInflate","on","_filter","_complete","pipe","write","metaData","_bitmapInfo","Object","create","end","destroySoon","filteredData","bitmapData","dataToBitMap","normalisedBitmapData","ex"],"sources":["/Users/yezery/Desktop/OASIS/OASIS_Interface/node_modules/.store/pngjs-nozlib@1.0.0/node_modules/pngjs-nozlib/lib/parser-async.js"],"sourcesContent":["'use strict';\n\nvar util = require('util');\nvar zlib = require('zlib');\nvar ChunkStream = require('./chunkstream');\nvar FilterAsync = require('./filter-parse-async');\nvar Parser = require('./parser');\nvar bitmapper = require('./bitmapper');\nvar formatNormaliser = require('./format-normaliser');\n\nvar ParserAsync = module.exports = function(options) {\n  ChunkStream.call(this);\n\n  this._parser = new Parser(options, {\n    read: this.read.bind(this),\n    error: this._handleError.bind(this),\n    metadata: this._handleMetaData.bind(this),\n    gamma: this.emit.bind(this, 'gamma'),\n    palette: this._handlePalette.bind(this),\n    transColor: this._handleTransColor.bind(this),\n    finished: this._finished.bind(this),\n    inflateData: this._inflateData.bind(this)\n  });\n  this._options = options;\n  this.writable = true;\n\n  this._parser.start();\n};\nutil.inherits(ParserAsync, ChunkStream);\n\n\nParserAsync.prototype._handleError = function(err) {\n\n  this.emit('error', err);\n\n  this.writable = false;\n\n  this.destroy();\n\n  if (this._inflate && this._inflate.destroy) {\n    this._inflate.destroy();\n  }\n\n  this.errord = true;\n};\n\nParserAsync.prototype._inflateData = function(data) {\n  if (!this._inflate) {\n    this._inflate = zlib.createInflate();\n\n    this._inflate.on('error', this.emit.bind(this, 'error'));\n    this._filter.on('complete', this._complete.bind(this));\n\n    this._inflate.pipe(this._filter);\n  }\n  this._inflate.write(data);\n};\n\nParserAsync.prototype._handleMetaData = function(metaData) {\n\n  this.emit('metadata', metaData);\n\n  this._bitmapInfo = Object.create(metaData);\n\n  this._filter = new FilterAsync(this._bitmapInfo);\n};\n\nParserAsync.prototype._handleTransColor = function(transColor) {\n  this._bitmapInfo.transColor = transColor;\n};\n\nParserAsync.prototype._handlePalette = function(palette) {\n  this._bitmapInfo.palette = palette;\n};\n\n\nParserAsync.prototype._finished = function() {\n  if (this.errord) {\n    return;\n  }\n\n  if (!this._inflate) {\n    this.emit('error', 'No Inflate block');\n  }\n  else {\n    // no more data to inflate\n    this._inflate.end();\n  }\n  this.destroySoon();\n};\n\nParserAsync.prototype._complete = function(filteredData) {\n\n  if (this.errord) {\n    return;\n  }\n\n  try {\n    var bitmapData = bitmapper.dataToBitMap(filteredData, this._bitmapInfo);\n\n    var normalisedBitmapData = formatNormaliser(bitmapData, this._bitmapInfo);\n    bitmapData = null;\n  }\n  catch (ex) {\n    this._handleError(ex);\n    return;\n  }\n\n  this.emit('parsed', normalisedBitmapData);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}