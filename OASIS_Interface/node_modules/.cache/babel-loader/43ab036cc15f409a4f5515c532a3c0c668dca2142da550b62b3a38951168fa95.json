{"ast":null,"code":"import { createData } from './data.js';\nimport { createGet } from './get.js';\nimport { createLinks } from './links.js';\nimport { createNew } from './new.js';\nimport { createPut } from './put.js';\nimport { createStat } from './stat.js';\nimport { ObjectPatchAPI } from './patch/index.js';\n\n/**\n * @typedef {import('../../types').Preload} Preload\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\nexport class ObjectAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {Preload} config.preload\n   */\n  constructor({\n    repo,\n    codecs,\n    preload\n  }) {\n    this.data = createData({\n      repo,\n      preload\n    });\n    this.get = createGet({\n      repo,\n      preload\n    });\n    this.links = createLinks({\n      repo,\n      codecs\n    });\n    this.new = createNew({\n      repo,\n      preload\n    });\n    this.put = createPut({\n      repo,\n      preload\n    });\n    this.stat = createStat({\n      repo,\n      preload\n    });\n    this.patch = new ObjectPatchAPI({\n      repo,\n      preload\n    });\n  }\n}","map":{"version":3,"names":["createData","createGet","createLinks","createNew","createPut","createStat","ObjectPatchAPI","ObjectAPI","constructor","repo","codecs","preload","data","get","links","new","put","stat","patch"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-core@0.18.1/node_modules/ipfs-core/src/components/object/index.js"],"sourcesContent":["import { createData } from './data.js'\nimport { createGet } from './get.js'\nimport { createLinks } from './links.js'\nimport { createNew } from './new.js'\nimport { createPut } from './put.js'\nimport { createStat } from './stat.js'\nimport { ObjectPatchAPI } from './patch/index.js'\n\n/**\n * @typedef {import('../../types').Preload} Preload\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\nexport class ObjectAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {Preload} config.preload\n   */\n  constructor ({ repo, codecs, preload }) {\n    this.data = createData({ repo, preload })\n    this.get = createGet({ repo, preload })\n    this.links = createLinks({ repo, codecs })\n    this.new = createNew({ repo, preload })\n    this.put = createPut({ repo, preload })\n    this.stat = createStat({ repo, preload })\n    this.patch = new ObjectPatchAPI({ repo, preload })\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,WAAW;AACtC,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,WAAW,QAAQ,YAAY;AACxC,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,UAAU,QAAQ,WAAW;AACtC,SAASC,cAAc,QAAQ,kBAAkB;;AAEjD;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,CAAC;EACrB;AACF;AACA;AACA;AACA;AACA;EACEC,WAAWA,CAAE;IAAEC,IAAI;IAAEC,MAAM;IAAEC;EAAQ,CAAC,EAAE;IACtC,IAAI,CAACC,IAAI,GAAGZ,UAAU,CAAC;MAAES,IAAI;MAAEE;IAAQ,CAAC,CAAC;IACzC,IAAI,CAACE,GAAG,GAAGZ,SAAS,CAAC;MAAEQ,IAAI;MAAEE;IAAQ,CAAC,CAAC;IACvC,IAAI,CAACG,KAAK,GAAGZ,WAAW,CAAC;MAAEO,IAAI;MAAEC;IAAO,CAAC,CAAC;IAC1C,IAAI,CAACK,GAAG,GAAGZ,SAAS,CAAC;MAAEM,IAAI;MAAEE;IAAQ,CAAC,CAAC;IACvC,IAAI,CAACK,GAAG,GAAGZ,SAAS,CAAC;MAAEK,IAAI;MAAEE;IAAQ,CAAC,CAAC;IACvC,IAAI,CAACM,IAAI,GAAGZ,UAAU,CAAC;MAAEI,IAAI;MAAEE;IAAQ,CAAC,CAAC;IACzC,IAAI,CAACO,KAAK,GAAG,IAAIZ,cAAc,CAAC;MAAEG,IAAI;MAAEE;IAAQ,CAAC,CAAC;EACpD;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}