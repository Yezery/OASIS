{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/web.url-search-params.delete.js\");\nrequire(\"core-js/modules/web.url-search-params.has.js\");\nrequire(\"core-js/modules/web.url-search-params.size.js\");\nconst isReactNative = typeof navigator !== 'undefined' && navigator.product === 'ReactNative';\nfunction getDefaultBase() {\n  if (isReactNative) {\n    return 'http://localhost';\n  }\n  // in some environments i.e. cloudflare workers location is not available\n  if (!self.location) {\n    return '';\n  }\n  return self.location.protocol + '//' + self.location.host;\n}\nconst URL = self.URL;\nconst defaultBase = getDefaultBase();\nclass URLWithLegacySupport {\n  constructor(url = '', base = defaultBase) {\n    this.super = new URL(url, base);\n    this.path = this.pathname + this.search;\n    this.auth = this.username && this.password ? this.username + ':' + this.password : null;\n    this.query = this.search && this.search.startsWith('?') ? this.search.slice(1) : null;\n  }\n  get hash() {\n    return this.super.hash;\n  }\n  get host() {\n    return this.super.host;\n  }\n  get hostname() {\n    return this.super.hostname;\n  }\n  get href() {\n    return this.super.href;\n  }\n  get origin() {\n    return this.super.origin;\n  }\n  get password() {\n    return this.super.password;\n  }\n  get pathname() {\n    return this.super.pathname;\n  }\n  get port() {\n    return this.super.port;\n  }\n  get protocol() {\n    return this.super.protocol;\n  }\n  get search() {\n    return this.super.search;\n  }\n  get searchParams() {\n    return this.super.searchParams;\n  }\n  get username() {\n    return this.super.username;\n  }\n  set hash(hash) {\n    this.super.hash = hash;\n  }\n  set host(host) {\n    this.super.host = host;\n  }\n  set hostname(hostname) {\n    this.super.hostname = hostname;\n  }\n  set href(href) {\n    this.super.href = href;\n  }\n  set password(password) {\n    this.super.password = password;\n  }\n  set pathname(pathname) {\n    this.super.pathname = pathname;\n  }\n  set port(port) {\n    this.super.port = port;\n  }\n  set protocol(protocol) {\n    this.super.protocol = protocol;\n  }\n  set search(search) {\n    this.super.search = search;\n  }\n  set username(username) {\n    this.super.username = username;\n  }\n\n  /**\n   * @param {any} o\n   */\n  static createObjectURL(o) {\n    return URL.createObjectURL(o);\n  }\n\n  /**\n   * @param {string} o\n   */\n  static revokeObjectURL(o) {\n    URL.revokeObjectURL(o);\n  }\n  toJSON() {\n    return this.super.toJSON();\n  }\n  toString() {\n    return this.super.toString();\n  }\n  format() {\n    return this.toString();\n  }\n}\n\n/**\n * @param {string | import('url').UrlObject} obj\n */\nfunction format(obj) {\n  if (typeof obj === 'string') {\n    const url = new URL(obj);\n    return url.toString();\n  }\n  if (!(obj instanceof URL)) {\n    const userPass =\n    // @ts-ignore its not supported in node but we normalise\n    obj.username && obj.password\n    // @ts-ignore its not supported in node but we normalise\n    ? `${obj.username}:${obj.password}@` : '';\n    const auth = obj.auth ? obj.auth + '@' : '';\n    const port = obj.port ? ':' + obj.port : '';\n    const protocol = obj.protocol ? obj.protocol + '//' : '';\n    const host = obj.host || '';\n    const hostname = obj.hostname || '';\n    const search = obj.search || (obj.query ? '?' + obj.query : '');\n    const hash = obj.hash || '';\n    const pathname = obj.pathname || '';\n    // @ts-ignore - path is not supported in node but we normalise\n    const path = obj.path || pathname + search;\n    return `${protocol}${userPass || auth}${host || hostname + port}${path}${hash}`;\n  }\n}\nmodule.exports = {\n  URLWithLegacySupport,\n  URLSearchParams: self.URLSearchParams,\n  defaultBase,\n  format\n};","map":{"version":3,"names":["require","isReactNative","navigator","product","getDefaultBase","self","location","protocol","host","URL","defaultBase","URLWithLegacySupport","constructor","url","base","super","path","pathname","search","auth","username","password","query","startsWith","slice","hash","hostname","href","origin","port","searchParams","createObjectURL","o","revokeObjectURL","toJSON","toString","format","obj","userPass","module","exports","URLSearchParams"],"sources":["/Users/yezery/OASIS/OASIS_Interface/node_modules/.store/iso-url@1.2.1/node_modules/iso-url/src/url-browser.js"],"sourcesContent":["'use strict'\n\nconst isReactNative =\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative'\n\nfunction getDefaultBase () {\n  if (isReactNative) {\n    return 'http://localhost'\n  }\n  // in some environments i.e. cloudflare workers location is not available\n  if (!self.location) {\n    return ''\n  }\n\n  return self.location.protocol + '//' + self.location.host\n}\n\nconst URL = self.URL\nconst defaultBase = getDefaultBase()\n\nclass URLWithLegacySupport {\n  constructor (url = '', base = defaultBase) {\n    this.super = new URL(url, base)\n    this.path = this.pathname + this.search\n    this.auth =\n            this.username && this.password\n              ? this.username + ':' + this.password\n              : null\n\n    this.query =\n            this.search && this.search.startsWith('?')\n              ? this.search.slice(1)\n              : null\n  }\n\n  get hash () {\n    return this.super.hash\n  }\n\n  get host () {\n    return this.super.host\n  }\n\n  get hostname () {\n    return this.super.hostname\n  }\n\n  get href () {\n    return this.super.href\n  }\n\n  get origin () {\n    return this.super.origin\n  }\n\n  get password () {\n    return this.super.password\n  }\n\n  get pathname () {\n    return this.super.pathname\n  }\n\n  get port () {\n    return this.super.port\n  }\n\n  get protocol () {\n    return this.super.protocol\n  }\n\n  get search () {\n    return this.super.search\n  }\n\n  get searchParams () {\n    return this.super.searchParams\n  }\n\n  get username () {\n    return this.super.username\n  }\n\n  set hash (hash) {\n    this.super.hash = hash\n  }\n\n  set host (host) {\n    this.super.host = host\n  }\n\n  set hostname (hostname) {\n    this.super.hostname = hostname\n  }\n\n  set href (href) {\n    this.super.href = href\n  }\n\n  set password (password) {\n    this.super.password = password\n  }\n\n  set pathname (pathname) {\n    this.super.pathname = pathname\n  }\n\n  set port (port) {\n    this.super.port = port\n  }\n\n  set protocol (protocol) {\n    this.super.protocol = protocol\n  }\n\n  set search (search) {\n    this.super.search = search\n  }\n\n  set username (username) {\n    this.super.username = username\n  }\n\n  /**\n   * @param {any} o\n   */\n  static createObjectURL (o) {\n    return URL.createObjectURL(o)\n  }\n\n  /**\n   * @param {string} o\n   */\n  static revokeObjectURL (o) {\n    URL.revokeObjectURL(o)\n  }\n\n  toJSON () {\n    return this.super.toJSON()\n  }\n\n  toString () {\n    return this.super.toString()\n  }\n\n  format () {\n    return this.toString()\n  }\n}\n\n/**\n * @param {string | import('url').UrlObject} obj\n */\nfunction format (obj) {\n  if (typeof obj === 'string') {\n    const url = new URL(obj)\n\n    return url.toString()\n  }\n\n  if (!(obj instanceof URL)) {\n    const userPass =\n            // @ts-ignore its not supported in node but we normalise\n            obj.username && obj.password\n              // @ts-ignore its not supported in node but we normalise\n              ? `${obj.username}:${obj.password}@`\n              : ''\n    const auth = obj.auth ? obj.auth + '@' : ''\n    const port = obj.port ? ':' + obj.port : ''\n    const protocol = obj.protocol ? obj.protocol + '//' : ''\n    const host = obj.host || ''\n    const hostname = obj.hostname || ''\n    const search = obj.search || (obj.query ? '?' + obj.query : '')\n    const hash = obj.hash || ''\n    const pathname = obj.pathname || ''\n    // @ts-ignore - path is not supported in node but we normalise\n    const path = obj.path || pathname + search\n\n    return `${protocol}${userPass || auth}${\n            host || hostname + port\n        }${path}${hash}`\n  }\n}\n\nmodule.exports = {\n  URLWithLegacySupport,\n  URLSearchParams: self.URLSearchParams,\n  defaultBase,\n  format\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}