{"ast":null,"code":"// components\nimport userEmpower from \"./user/userEmpower.vue\";\nimport oasisTheme from \"@/views/bar/oasisTheme.vue\";\nimport walletConnection from \"./bar/walletConnect.vue\";\nimport oasisSearch from \"@/views/topMenu/oasisSearch.vue\";\nimport oasisChat from \"@/views/leftMenu/oasisChat.vue\";\n// func\nexport default {\n  name: \"MarketShopIndex\",\n  components: {\n    oasisTheme,\n    oasisChat,\n    oasisSearch,\n    walletConnection\n    // userEmpower,\n  },\n\n  data() {\n    return {\n      activeIndex: \"NFTs\",\n      //****聊天栏******//\n      isOpen: false,\n      UserImageList: [],\n      avatar: \"\",\n      //*********************//\n      //方法\n      echartChange: null,\n      //连接钱包\n      user: {\n        encryptedPassword: \"\"\n      },\n      changeingAccount: false,\n      anmiate1: true,\n      animate2: false,\n      animate3: false,\n      animate4: false,\n      animate5: false,\n      EmpowerSignForm: {\n        sp1: \"\",\n        sp2: \"\",\n        sp3: \"\"\n      },\n      isGetToken: true,\n      CopyTips: \"点击复制\",\n      CopySuccess: \"复制成功！\",\n      isCopy: false,\n      isRepeatClick: true,\n      newMnemonic: \"\",\n      isUnlocked: false\n    };\n  },\n  created() {},\n  async mounted() {\n    // if (window.ethereum != undefined) {\n    //   await window.ethereum._metamask\n    //     .isUnlocked()\n    //     .then((re) => (this.isUnlocked = re));\n    //   window.ethereum.on(\"accountsChanged\", async () => {\n    //     window.location.reload();\n    //   });\n    //   window.ethereum.on(\"chainChanged\", () => {\n    //     window.location.reload();\n    //     this.$notify({\n    //       title: \"已切换链\",\n    //       type: \"warning\",\n    //       position: \"top-left\",\n    //       offset: 200,\n    //     });\n    //   });\n    //   if (!this.$store.state.isconnect && this.isUnlocked) {\n    //     await this.connectWallet();\n    //     this.isGetToken = true;\n    //     setTimeout(async () => {\n    //       this.anmiate1 = false;\n    //       await checkUserExist({\n    //         userAddress: this.$store.state.currentAddress,\n    //       }).then(async (re) => {\n    //         if (re.data.data == \"\") {\n    //           this.animate3 = true;\n    //         } else {\n    //           this.animate2 = true;\n    //         }\n    //       });\n    //     }, 2000);\n    //   }\n    // }\n  },\n  methods: {\n    // async empower(opt) {\n    //   if (opt == 2) {\n    //     if (\n    //       this.EmpowerSignForm.sp1 == \"\" ||\n    //       this.EmpowerSignForm.sp2 == \"\" ||\n    //       this.EmpowerSignForm.sp3 == \"\" ||\n    //       this.EmpowerSignForm.sp4 == \"\" ||\n    //       this.EmpowerSignForm.sp5 == \"\" ||\n    //       this.user.encryptedPassword == \"\"\n    //     ) {\n    //       this.$notify({\n    //         title: \"信息不能为空\",\n    //         type: \"warning\",\n    //         position: \"top-left\",\n    //         offset: 200,\n    //       });\n    //       return;\n    //     }\n    //   }\n    //   this.user.encryptedPassword = CryptoJS.SHA256(\n    //     this.user.encryptedPassword\n    //   ).toString();\n    //   await setMnemonic(this.user);\n    //   this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n    //   await setAuthenticationMetaInformation(this.EmpowerSignForm);\n    //   await getToken(this.user).then(async (re) => {\n    //     localStorage.clear();\n    //     if (re.data.data == null) {\n    //       this.$notify({\n    //         title: \"密码错误\",\n    //         type: \"waring\",\n    //         position: \"top-left\",\n    //         offset: 200,\n    //       });\n    //     } else {\n    //       localStorage.setItem(\"token\", re.data.data);\n    //       let currentAddress = {\n    //         ownerAddress: this.EmpowerSignForm.userAddress,\n    //       };\n    //       await postOwnerContractList(currentAddress).then((re) => {\n    //         this.$store.commit(\"setOwnerNFTList\", re.data.data);\n    //       });\n    //       this.giveChatInitToWalletConnect();\n    //       this.$store.commit(\"connection\", true);\n    //       this.$store.commit(\"setEmpower\", true);\n    //       this.isGetToken = false;\n    //       this.$notify({\n    //         title: \"🎉 连接成功\",\n    //         position: \"top-left\",\n    //         offset: 200,\n    //       });\n    //     }\n    //   });\n    // },\n    // openEmpower() {\n    //   if (this.$store.state.isEmpower || window.ethereum == undefined) {\n    //     return;\n    //   }\n    //   if (!this.isUnlocked) {\n    //     this.$notify({\n    //       title: \"钱包未解锁\",\n    //       type: \"warning\",\n    //       position: \"top-left\",\n    //       offset: 200,\n    //     });\n    //     return;\n    //   } else {\n    //     this.isGetToken = true;\n    //   }\n    // },\n    // async checkEmpower() {\n    //   this.user.encryptedPassword = CryptoJS.SHA256(\n    //     this.user.encryptedPassword\n    //   ).toString();\n    //   await getToken(this.user).then((re) => {\n    //     localStorage.clear();\n    //     if (re.data.data == null) {\n    //       this.$notify({\n    //         title: \"授权码错误\",\n    //         type: \"warning\",\n    //         position: \"top-left\",\n    //         offset: 200,\n    //       });\n    //     } else {\n    //       let currentAddress = {\n    //         ownerAddress: this.$store.state.currentAddress,\n    //       };\n    //       postOwnerContractList(currentAddress).then((re) => {\n    //         this.$store.commit(\"setOwnerNFTList\", re.data.data);\n    //       });\n    //       localStorage.setItem(\"token\", re.data.data);\n    //       this.$store.commit(\"setEmpower\", true);\n    //       this.$store.commit(\"connection\", true);\n    //       this.giveChatInitToWalletConnect();\n    //       this.isGetToken = false;\n    //       this.$notify({\n    //         title: \"🎉 连接成功\",\n    //         position: \"top-left\",\n    //         offset: 200,\n    //       });\n    //     }\n    //   });\n    // },\n    // viewControl(opt) {\n    //   switch (opt) {\n    //     case 1:\n    //       this.animate2 = false;\n    //       this.animate4 = true;\n    //       break;\n    //     case 2:\n    //       this.animate2 = true;\n    //       this.animate4 = false;\n    //       break;\n    //     case 3:\n    //       this.animate2 = true;\n    //       this.animate5 = false;\n    //       break;\n    //     default:\n    //       this.animate2 = false;\n    //       this.isGetToken = true;\n    //       this.anmiate1 = false;\n    //       this.animate4 = true;\n    //       this.user.encryptedPassword = \"\";\n    //       break;\n    //   }\n    // },\n    // async backPassword() {\n    //   this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n    //   forgetMnemonic(this.EmpowerSignForm).then((re) => {\n    //     if (re.data.data) {\n    //       this.animate5 = true;\n    //       this.animate4 = false;\n    //       this.$notify({\n    //         title: \"密保正确\",\n    //         type: \"success\",\n    //         position: \"top-left\",\n    //         offset: 200,\n    //       });\n    //     } else {\n    //       this.$notify({\n    //         title: \"密保错误\",\n    //         type: \"warning\",\n    //         position: \"top-left\",\n    //         offset: 200,\n    //       });\n    //     }\n    //   });\n    // },\n    // async resetMnemonic() {\n    //   this.EmpowerSignForm.newMnemonic = CryptoJS.SHA256(\n    //     this.newMnemonic\n    //   ).toString();\n    //   this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n    //   await checkUserExist(this.EmpowerSignForm).then((re) => {\n    //     if (re.data.data == this.EmpowerSignForm.encryptedPassword) {\n    //       this.$notify({\n    //         title: \"不能与旧密码重复\",\n    //         type: \"warning\",\n    //         position: \"top-left\",\n    //         offset: 200,\n    //       });\n    //       return;\n    //     } else {\n    //       resetMnemonic(this.EmpowerSignForm).then((re) => {\n    //         if (re.data.data == null) {\n    //           this.$notify.error({\n    //             title: \"系统异常\",\n    //             position: \"top-left\",\n    //             offset: 200,\n    //           });\n    //         }\n    //         this.$notify({\n    //           title: \"🎉 重设成功\",\n    //           position: \"top-left\",\n    //           offset: 200,\n    //         });\n    //         this.animate2 = true;\n    //         this.animate5 = false;\n    //       });\n    //     }\n    //   });\n    // },\n    // canacelEmpover() {\n    //   this.isGetToken = false;\n    //   this.$store.commit(\"connection\", true);\n    // },\n    // giveChatInitToWalletConnect() {\n    //   console.log(\"聊天栏正初始化.......\");\n    //   this.$refs.ChatMemu.init();\n    // },\n    // setEchartChange(data) {\n    //   this.echartChange = data;\n    //   console.log(this.echartChange);\n    // },\n    // async connectWallet() {\n    //   if (\n    //     localStorage.getItem[\"token\"] == null ||\n    //     !this.$store.state.isconnect\n    //   ) {\n    //     try {\n    //       // 请求用户授权\n    //       await window.ethereum\n    //         .request({ method: \"eth_requestAccounts\" })\n    //         .then(async (handleAccountsChanged) => {\n    //           this.$store.commit(\"setcurrentAddress\", handleAccountsChanged[0]);\n    //           this.$store.commit(\"changeAvatar\", handleAccountsChanged[0]);\n    //           this.user.userAddress = handleAccountsChanged[0];\n    //         })\n    //         .catch((error) => {\n    //           this.$store.commit(\"connection\", false);\n    //           if (error.code === 4001) {\n    //             // EIP-1193 userRejectedRequest error\n    //             console.log(\"Please connect to MetaMask.\");\n    //           } else {\n    //             console.error(error);\n    //           }\n    //         });\n    //     } catch (error) {\n    //       console.error(error);\n    //       this.$notify.error({\n    //         title: \"连接失败\",\n    //         position: \"top-left\",\n    //         offset: 200,\n    //       });\n    //     }\n    //   }\n    // },\n    // Copy() {\n    //   navigator.clipboard\n    //     .writeText(this.$store.state.currentAddress)\n    //     .then(() => {\n    //       this.isCopy = true;\n    //       setTimeout(() => {\n    //         this.isCopy = false;\n    //       }, 3000);\n    //     });\n    // },\n    // GETHashAvatar() {\n    //   if (this.$store.state.isconnect) {\n    //     this.avatar =\n    //       \"data:image/png;base64,\" +\n    //       new this.Identicon(this.$store.state.currentAddress, 120).toString();\n    //     this.$refs.avatar.width = 60;\n    //     this.$refs.avatar.height = 60;\n    //   } else {\n    //     this.avatar = require(\"@/assets/webAssets/MetaMask.png\");\n    //     this.$refs.avatar.width = 40;\n    //     this.$refs.avatar.height = 40;\n    //   }\n    // },\n  }\n};","map":{"version":3,"names":["userEmpower","oasisTheme","walletConnection","oasisSearch","oasisChat","name","components","data","activeIndex","isOpen","UserImageList","avatar","echartChange","user","encryptedPassword","changeingAccount","anmiate1","animate2","animate3","animate4","animate5","EmpowerSignForm","sp1","sp2","sp3","isGetToken","CopyTips","CopySuccess","isCopy","isRepeatClick","newMnemonic","isUnlocked","created","mounted","methods"],"sources":["src/views/layout.vue"],"sourcesContent":["<template>\n  <div class=\"layout\">\n    <div class=\"leftMenu\">\n      <oasisChat ref=\"ChatMemu\" />\n    </div>\n    <div class=\"main\">\n      <header class=\"menu\">\n        <div class=\"menu_search\">\n          <oasisSearch />\n        </div>\n        <div class=\"menu_selects\">\n          <div class=\"menu_select_links\">\n            <el-menu\n              :default-active=\"activeIndex\"\n              class=\"menu_select_link_items\"\n              mode=\"horizontal\"\n            >\n              <el-menu-item index=\"NFTs\">\n                <div class=\"menu_select_link_item\">\n                  <svg\n                    t=\"1697629842922\"\n                    class=\"icon\"\n                    viewBox=\"0 0 1024 1024\"\n                    version=\"1.1\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    p-id=\"1446\"\n                    width=\"18\"\n                    height=\"18\"\n                  >\n                    <path\n                      class=\"icon-path\"\n                      stroke=\"#1875F0\"\n                      stroke-width=\"3\"\n                      d=\"M445.799424 193.792l198.4512 202.752a50.4832 50.4832 0 0 0 72.3968 0l0.3072-0.3072a53.1456 53.1456 0 0 0 0-73.984L443.393024 42.8032a50.2272 50.2272 0 0 0-67.584 0l-4.608 4.7104-34.304 35.0208L102.401024 322.0992l-84.992 87.04-4.608 4.7104a52.1216 52.1216 0 0 0-12.8 34.5088v523.5712a51.2 51.2 0 1 0 102.4 0V492.4928a52.8384 52.8384 0 0 1 15.0016-36.9664l256-261.5296a50.4832 50.4832 0 0 1 72.3968-0.2048z\"\n                      fill=\"#515151\"\n                      p-id=\"1447\"\n                    />\n                    <path\n                      class=\"icon-path\"\n                      stroke=\"#1875F0\"\n                      stroke-width=\"3\"\n                      d=\"M1011.201024 343.9616l-4.608-4.7104L687.105024 13.056a50.2272 50.2272 0 0 0-67.584 0l-4.608 4.7104a52.0704 52.0704 0 0 0-12.8 34.5088 53.6064 53.6064 0 0 0 14.848 37.12l291.84 297.9328a52.0704 52.0704 0 0 1 12.8 34.5088v419.3792a77.6192 77.6192 0 0 1-76.8 78.2336h-409.6A77.6192 77.6192 0 0 1 358.401024 841.216v-296.5504a52.0704 52.0704 0 0 1 12.8-34.5088L435.201024 444.8256a53.8112 53.8112 0 0 0 0-74.24 50.8416 50.8416 0 0 0-72.704 0L273.409024 461.5168l-4.608 4.7104A52.0704 52.0704 0 0 0 256.001024 500.736v366.2336A155.904 155.904 0 0 0 409.601024 1024h460.8a155.8016 155.8016 0 0 0 153.6-156.928V378.4192a52.0704 52.0704 0 0 0-12.8-34.4576z\"\n                      fill=\"#515151\"\n                      p-id=\"1448\"\n                    />\n                  </svg>\n                  NFTs\n                </div>\n              </el-menu-item>\n              <el-menu-item index=\"initNFT\">\n                <div class=\"menu_select_link_item\">\n                  <svg\n                    t=\"1697633111966\"\n                    class=\"icon\"\n                    viewBox=\"0 0 1024 1024\"\n                    version=\"1.1\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    p-id=\"4342\"\n                    width=\"25\"\n                    height=\"25\"\n                  >\n                    <path\n                      class=\"icon-path\"\n                      stroke=\"#1875F0\"\n                      stroke-width=\"3\"\n                      d=\"M835.9424 245.0432L550.1952 80.128a76.8 76.8 0 0 0-76.4416 0L188.0576 245.0432A76.8 76.8 0 0 0 149.8624 311.296v329.8304a76.8 76.8 0 0 0 38.1952 66.304l285.6448 164.9152a75.9296 75.9296 0 0 0 76.4928 0l285.7472-164.9152a76.8 76.8 0 0 0 38.1952-66.304V311.296a76.8 76.8 0 0 0-38.1952-66.2528M471.1936 498.8416v278.1696l-239.7696-135.8848V360.448zM272.7424 290.048l239.0528-138.24 238.9504 138.24L511.744 428.288z m522.24 346.5216L552.8064 776.448V498.5856l240.0256-138.5472z\"\n                      fill=\"#707070\"\n                      p-id=\"4343\"\n                    />\n                  </svg>\n                  ImitNFT\n                </div>\n              </el-menu-item>\n              <el-menu-item index=\"3DModels\">\n                <div class=\"menu_select_link_item\">\n                  <svg\n                    t=\"1697646251949\"\n                    class=\"icon\"\n                    viewBox=\"0 0 1024 1024\"\n                    version=\"1.1\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    p-id=\"3702\"\n                    width=\"25\"\n                    height=\"25\"\n                  >\n                    <path\n                      class=\"icon-path\"\n                      stroke=\"#1875F0\"\n                      stroke-width=\"3\"\n                      d=\"M177.493333 389.36381a48.761905 48.761905 0 0 1 24.380953 6.534095l249.222095 143.896381a73.142857 73.142857 0 0 1 36.571429 63.341714v287.792762a48.761905 48.761905 0 0 1-45.104762 48.615619l-3.657143 0.146286a48.761905 48.761905 0 0 1-24.380953-6.534096L165.302857 789.26019a73.142857 73.142857 0 0 1-36.571428-63.341714V438.125714a48.761905 48.761905 0 0 1 45.104761-48.64l3.657143-0.121904z m669.135238 0a48.761905 48.761905 0 0 1 48.615619 45.104761l0.146286 3.657143v287.792762a73.142857 73.142857 0 0 1-32.426666 60.757334l-4.144762 2.58438-249.246477 143.896381a48.761905 48.761905 0 0 1-20.114285 6.339048l-4.266667 0.195048a48.761905 48.761905 0 0 1-48.615619-45.104762l-0.146286-3.657143V603.136a73.142857 73.142857 0 0 1 32.426667-60.757333l4.144762-2.584381 249.246476-143.896381a48.761905 48.761905 0 0 1 20.114286-6.339048l4.266666-0.195047zM201.849905 480.353524l0.024381 245.564952 212.650666 122.758095V603.136L201.874286 480.353524z m620.373333 0l-210.553905 121.539047-2.096762 1.243429V848.700952l210.578286-121.514666 2.096762-1.243429-0.024381-245.564952zM544.085333 122.441143l4.608 2.438095 249.222096 143.896381a48.761905 48.761905 0 0 1 3.242666 82.407619l-3.242666 2.048-249.222096 143.896381a73.142857 73.142857 0 0 1-68.559238 2.438095l-4.583619-2.438095-249.246476-143.896381a48.761905 48.761905 0 0 1-3.218286-82.407619l3.218286-2.048 249.246476-143.896381a73.142857 73.142857 0 0 1 68.534857-2.438095zM512.048762 188.220952l-212.601905 122.758096 211.748572 122.270476 0.950857 0.487619 212.626285-122.758095-211.309714-122.002286-1.414095-0.75581z\"\n                      p-id=\"3703\"\n                      fill=\"#707070\"\n                    />\n                  </svg>\n                  3DModel\n                </div>\n              </el-menu-item>\n            </el-menu>\n          </div>\n\n          <div class=\"menu_select_oasisTheme\">\n            <oasisTheme />\n          </div>\n          <div class=\"menu_select_walletConnection\">\n            <walletConnection />\n          </div>\n        </div>\n      </header>\n      <!-- <div class=\"view\"> -->\n        <router-view />\n      <!-- </div> -->\n      <!-- <router-view /> -->\n      <userEmpower />\n    </div>\n  </div>\n</template>\n<script>\n  // components\n  import userEmpower from \"./user/userEmpower.vue\";\n  import oasisTheme from \"@/views/bar/oasisTheme.vue\";\n  import walletConnection from \"./bar/walletConnect.vue\";\n  import oasisSearch from \"@/views/topMenu/oasisSearch.vue\";\n  import oasisChat from \"@/views/leftMenu/oasisChat.vue\";\n  // func\n  export default {\n    name: \"MarketShopIndex\",\n    components: {\n      oasisTheme,\n      oasisChat,\n      oasisSearch,\n      walletConnection,\n      // userEmpower,\n    },\n    data() {\n      return {\n        activeIndex: \"NFTs\",\n\n        //****聊天栏******//\n        isOpen: false,\n        UserImageList: [],\n        avatar: \"\",\n        //*********************//\n        //方法\n        echartChange: null,\n        //连接钱包\n        user: {\n          encryptedPassword: \"\",\n        },\n        changeingAccount: false,\n        anmiate1: true,\n        animate2: false,\n        animate3: false,\n        animate4: false,\n        animate5: false,\n        EmpowerSignForm: {\n          sp1: \"\",\n          sp2: \"\",\n          sp3: \"\",\n        },\n        isGetToken: true,\n        CopyTips: \"点击复制\",\n        CopySuccess: \"复制成功！\",\n        isCopy: false,\n        isRepeatClick: true,\n        newMnemonic: \"\",\n        isUnlocked: false,\n      };\n    },\n    created() {},\n    async mounted() {\n      // if (window.ethereum != undefined) {\n      //   await window.ethereum._metamask\n      //     .isUnlocked()\n      //     .then((re) => (this.isUnlocked = re));\n      //   window.ethereum.on(\"accountsChanged\", async () => {\n      //     window.location.reload();\n      //   });\n      //   window.ethereum.on(\"chainChanged\", () => {\n      //     window.location.reload();\n      //     this.$notify({\n      //       title: \"已切换链\",\n      //       type: \"warning\",\n      //       position: \"top-left\",\n      //       offset: 200,\n      //     });\n      //   });\n      //   if (!this.$store.state.isconnect && this.isUnlocked) {\n      //     await this.connectWallet();\n      //     this.isGetToken = true;\n      //     setTimeout(async () => {\n      //       this.anmiate1 = false;\n      //       await checkUserExist({\n      //         userAddress: this.$store.state.currentAddress,\n      //       }).then(async (re) => {\n      //         if (re.data.data == \"\") {\n      //           this.animate3 = true;\n      //         } else {\n      //           this.animate2 = true;\n      //         }\n      //       });\n      //     }, 2000);\n      //   }\n      // }\n    },\n    methods: {\n      // async empower(opt) {\n      //   if (opt == 2) {\n      //     if (\n      //       this.EmpowerSignForm.sp1 == \"\" ||\n      //       this.EmpowerSignForm.sp2 == \"\" ||\n      //       this.EmpowerSignForm.sp3 == \"\" ||\n      //       this.EmpowerSignForm.sp4 == \"\" ||\n      //       this.EmpowerSignForm.sp5 == \"\" ||\n      //       this.user.encryptedPassword == \"\"\n      //     ) {\n      //       this.$notify({\n      //         title: \"信息不能为空\",\n      //         type: \"warning\",\n      //         position: \"top-left\",\n      //         offset: 200,\n      //       });\n      //       return;\n      //     }\n      //   }\n      //   this.user.encryptedPassword = CryptoJS.SHA256(\n      //     this.user.encryptedPassword\n      //   ).toString();\n      //   await setMnemonic(this.user);\n      //   this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n      //   await setAuthenticationMetaInformation(this.EmpowerSignForm);\n      //   await getToken(this.user).then(async (re) => {\n      //     localStorage.clear();\n      //     if (re.data.data == null) {\n      //       this.$notify({\n      //         title: \"密码错误\",\n      //         type: \"waring\",\n      //         position: \"top-left\",\n      //         offset: 200,\n      //       });\n      //     } else {\n      //       localStorage.setItem(\"token\", re.data.data);\n      //       let currentAddress = {\n      //         ownerAddress: this.EmpowerSignForm.userAddress,\n      //       };\n      //       await postOwnerContractList(currentAddress).then((re) => {\n      //         this.$store.commit(\"setOwnerNFTList\", re.data.data);\n      //       });\n      //       this.giveChatInitToWalletConnect();\n      //       this.$store.commit(\"connection\", true);\n      //       this.$store.commit(\"setEmpower\", true);\n      //       this.isGetToken = false;\n      //       this.$notify({\n      //         title: \"🎉 连接成功\",\n      //         position: \"top-left\",\n      //         offset: 200,\n      //       });\n      //     }\n      //   });\n      // },\n      // openEmpower() {\n      //   if (this.$store.state.isEmpower || window.ethereum == undefined) {\n      //     return;\n      //   }\n      //   if (!this.isUnlocked) {\n      //     this.$notify({\n      //       title: \"钱包未解锁\",\n      //       type: \"warning\",\n      //       position: \"top-left\",\n      //       offset: 200,\n      //     });\n      //     return;\n      //   } else {\n      //     this.isGetToken = true;\n      //   }\n      // },\n      // async checkEmpower() {\n      //   this.user.encryptedPassword = CryptoJS.SHA256(\n      //     this.user.encryptedPassword\n      //   ).toString();\n      //   await getToken(this.user).then((re) => {\n      //     localStorage.clear();\n      //     if (re.data.data == null) {\n      //       this.$notify({\n      //         title: \"授权码错误\",\n      //         type: \"warning\",\n      //         position: \"top-left\",\n      //         offset: 200,\n      //       });\n      //     } else {\n      //       let currentAddress = {\n      //         ownerAddress: this.$store.state.currentAddress,\n      //       };\n      //       postOwnerContractList(currentAddress).then((re) => {\n      //         this.$store.commit(\"setOwnerNFTList\", re.data.data);\n      //       });\n      //       localStorage.setItem(\"token\", re.data.data);\n      //       this.$store.commit(\"setEmpower\", true);\n      //       this.$store.commit(\"connection\", true);\n      //       this.giveChatInitToWalletConnect();\n      //       this.isGetToken = false;\n      //       this.$notify({\n      //         title: \"🎉 连接成功\",\n      //         position: \"top-left\",\n      //         offset: 200,\n      //       });\n      //     }\n      //   });\n      // },\n      // viewControl(opt) {\n      //   switch (opt) {\n      //     case 1:\n      //       this.animate2 = false;\n      //       this.animate4 = true;\n      //       break;\n      //     case 2:\n      //       this.animate2 = true;\n      //       this.animate4 = false;\n      //       break;\n      //     case 3:\n      //       this.animate2 = true;\n      //       this.animate5 = false;\n      //       break;\n      //     default:\n      //       this.animate2 = false;\n      //       this.isGetToken = true;\n      //       this.anmiate1 = false;\n      //       this.animate4 = true;\n      //       this.user.encryptedPassword = \"\";\n      //       break;\n      //   }\n      // },\n      // async backPassword() {\n      //   this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n      //   forgetMnemonic(this.EmpowerSignForm).then((re) => {\n      //     if (re.data.data) {\n      //       this.animate5 = true;\n      //       this.animate4 = false;\n      //       this.$notify({\n      //         title: \"密保正确\",\n      //         type: \"success\",\n      //         position: \"top-left\",\n      //         offset: 200,\n      //       });\n      //     } else {\n      //       this.$notify({\n      //         title: \"密保错误\",\n      //         type: \"warning\",\n      //         position: \"top-left\",\n      //         offset: 200,\n      //       });\n      //     }\n      //   });\n      // },\n      // async resetMnemonic() {\n      //   this.EmpowerSignForm.newMnemonic = CryptoJS.SHA256(\n      //     this.newMnemonic\n      //   ).toString();\n      //   this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n      //   await checkUserExist(this.EmpowerSignForm).then((re) => {\n      //     if (re.data.data == this.EmpowerSignForm.encryptedPassword) {\n      //       this.$notify({\n      //         title: \"不能与旧密码重复\",\n      //         type: \"warning\",\n      //         position: \"top-left\",\n      //         offset: 200,\n      //       });\n      //       return;\n      //     } else {\n      //       resetMnemonic(this.EmpowerSignForm).then((re) => {\n      //         if (re.data.data == null) {\n      //           this.$notify.error({\n      //             title: \"系统异常\",\n      //             position: \"top-left\",\n      //             offset: 200,\n      //           });\n      //         }\n      //         this.$notify({\n      //           title: \"🎉 重设成功\",\n      //           position: \"top-left\",\n      //           offset: 200,\n      //         });\n      //         this.animate2 = true;\n      //         this.animate5 = false;\n      //       });\n      //     }\n      //   });\n      // },\n      // canacelEmpover() {\n      //   this.isGetToken = false;\n      //   this.$store.commit(\"connection\", true);\n      // },\n      // giveChatInitToWalletConnect() {\n      //   console.log(\"聊天栏正初始化.......\");\n      //   this.$refs.ChatMemu.init();\n      // },\n      // setEchartChange(data) {\n      //   this.echartChange = data;\n      //   console.log(this.echartChange);\n      // },\n      // async connectWallet() {\n      //   if (\n      //     localStorage.getItem[\"token\"] == null ||\n      //     !this.$store.state.isconnect\n      //   ) {\n      //     try {\n      //       // 请求用户授权\n      //       await window.ethereum\n      //         .request({ method: \"eth_requestAccounts\" })\n      //         .then(async (handleAccountsChanged) => {\n      //           this.$store.commit(\"setcurrentAddress\", handleAccountsChanged[0]);\n      //           this.$store.commit(\"changeAvatar\", handleAccountsChanged[0]);\n      //           this.user.userAddress = handleAccountsChanged[0];\n      //         })\n      //         .catch((error) => {\n      //           this.$store.commit(\"connection\", false);\n      //           if (error.code === 4001) {\n      //             // EIP-1193 userRejectedRequest error\n      //             console.log(\"Please connect to MetaMask.\");\n      //           } else {\n      //             console.error(error);\n      //           }\n      //         });\n      //     } catch (error) {\n      //       console.error(error);\n      //       this.$notify.error({\n      //         title: \"连接失败\",\n      //         position: \"top-left\",\n      //         offset: 200,\n      //       });\n      //     }\n      //   }\n      // },\n      // Copy() {\n      //   navigator.clipboard\n      //     .writeText(this.$store.state.currentAddress)\n      //     .then(() => {\n      //       this.isCopy = true;\n      //       setTimeout(() => {\n      //         this.isCopy = false;\n      //       }, 3000);\n      //     });\n      // },\n      // GETHashAvatar() {\n      //   if (this.$store.state.isconnect) {\n      //     this.avatar =\n      //       \"data:image/png;base64,\" +\n      //       new this.Identicon(this.$store.state.currentAddress, 120).toString();\n      //     this.$refs.avatar.width = 60;\n      //     this.$refs.avatar.height = 60;\n      //   } else {\n      //     this.avatar = require(\"@/assets/webAssets/MetaMask.png\");\n      //     this.$refs.avatar.width = 40;\n      //     this.$refs.avatar.height = 40;\n      //   }\n      // },\n    },\n  };\n</script>\n<!-- <style lang=\"scss\" scoped>\n@import \"@/style/index.css\";\n</style>\n<style lang=\"scss\" scoped>\n@import \"@/style/MarketShop/index.scss\";\n</style> \n  \n<style lang=\"scss\" scoped>\n.EmpowerMask {\n  z-index: 200;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  .EmpowerBox {\n    transition: all 0.3s ease-in-out;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    width: 650px;\n    border-radius: 30px;\n    background-color: white;\n    display: flex;\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\n      rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\n    .EmpowerUserInfbox {\n      margin: 5% 0 5% 0;\n      width: 100%;\n      height: 45%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      .animate1 {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        transition: all 1s ease-in-out;\n        width: 100%;\n        .EmpowerUserInf {\n          width: 120px;\n          height: 120px;\n          border-radius: 50%;\n          overflow: hidden;\n          border: 4px solid var(--border-green--);\n          .UserImage {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n          }\n        }\n        .EmpowerUserAddress {\n          margin-top: 3%;\n          margin-bottom: 3%;\n          font-weight: 800;\n          font-size: 1.2vw;\n          padding-left: 4%;\n        }\n      }\n      .animate2 {\n        transition: all 1s ease-in-out;\n        @extend .animate1;\n        .EmpowerUserAddress {\n          padding-left: 0;\n        }\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        .EmpowerPasswordBox {\n          .EmpowerPasswordBoxTop {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            width: 100%;\n            .el-form {\n              margin-right: 10%;\n            }\n            .el-input /deep/ .el-input__inner {\n              border: 1px solid rgba(0, 0, 0, 0);\n              border-bottom: 1px solid rgb(0, 0, 0);\n              border-radius: 0px;\n            }\n          }\n          .EmpowerPasswordBoxBottom {\n            width: 100%;\n            font-size: 0.7vw;\n            .EmpowerPasswordOpt {\n              margin-top: 30px;\n              display: flex;\n              justify-content: space-around;\n              span {\n                cursor: pointer;\n              }\n            }\n          }\n        }\n      }\n      .animate3 {\n        @extend .animate1;\n        flex-direction: column;\n        .SignTop {\n          width: 100%;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          .SignUserInf {\n            width: 50px;\n            height: 50px;\n            border-radius: 50%;\n            overflow: hidden;\n            border: 2px solid #ff0000;\n            .SignUserImage {\n              width: 100%;\n              height: 100%;\n              object-fit: cover;\n            }\n          }\n          .SignUserAddress {\n            font-weight: 800;\n            font-size: 1vw;\n            padding-left: 2%;\n          }\n        }\n\n        .SignForm {\n          width: 50%;\n          margin-top: 2%;\n          .SignSubmitBox {\n            display: flex;\n            margin: 3% 0 3% 0;\n            justify-content: space-around;\n            align-items: center;\n          }\n        }\n      }\n      .animate4 {\n        @extend .animate3;\n        .el-input /deep/ .el-input__inner {\n          border: 1px solid rgba(0, 0, 0, 0);\n          border-bottom: 1px solid rgb(0, 0, 0);\n          border-radius: 0px;\n        }\n      }\n      .animate5 {\n        .el-input /deep/ .el-input__inner {\n          border: 1px solid rgba(0, 0, 0, 0);\n          border-bottom: 1px solid rgb(0, 0, 0);\n          border-radius: 0px;\n        }\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n.Walletbox {\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n}\n.avatar {\n  object-fit: fill;\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  float: right;\n}\n.avatarBox {\n  overflow: hidden;\n  border-radius: 50%;\n  width: 38px;\n  height: 38px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 10%;\n  border: 2px solid var(--border-green--);\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    border: 2px solid var(--border-green--);\n    box-shadow: 0 0 20px var(--border-green--);\n    transition: all 0.3s ease-in-out;\n  }\n}\n.MetaMaskAvatar {\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.BOX {\n  width: 100%;\n  height: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.WalletInnerBox {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  cursor: pointer;\n}\n.address {\n  margin-left: 5%;\n  color: var(--Dark--);\n  font-weight: 800;\n  font-size: 12px;\n  width: 50%;\n  text-align: center;\n  border-radius: 10px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  font-family: Arial, Helvetica, sans-serif;\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    background-color: rgba(238, 238, 238, 0.1);\n    transition: all 0.3s ease-in-out;\n  }\n}\n.feePercentage {\n  width: 90%;\n  height: 100%;\n  background-color: var(--White--);\n  border-radius: 40px;\n  box-shadow: var(--boxshdow-style--);\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px,\n      rgba(14, 30, 37, 0.32) 0px 2px 16px 0px;\n    transition: all 0.3s ease-in-out;\n  }\n}\n</style> -->\n\n<style lang=\"scss\" scoped>\n@import \"@/style/layout/layout.scss\";\n</style>\n"],"mappings":"AAqHA;AACA,OAAAA,WAAA;AACA,OAAAC,UAAA;AACA,OAAAC,gBAAA;AACA,OAAAC,WAAA;AACA,OAAAC,SAAA;AACA;AACA;EACAC,IAAA;EACAC,UAAA;IACAL,UAAA;IACAG,SAAA;IACAD,WAAA;IACAD;IACA;EACA;;EACAK,KAAA;IACA;MACAC,WAAA;MAEA;MACAC,MAAA;MACAC,aAAA;MACAC,MAAA;MACA;MACA;MACAC,YAAA;MACA;MACAC,IAAA;QACAC,iBAAA;MACA;MACAC,gBAAA;MACAC,QAAA;MACAC,QAAA;MACAC,QAAA;MACAC,QAAA;MACAC,QAAA;MACAC,eAAA;QACAC,GAAA;QACAC,GAAA;QACAC,GAAA;MACA;MACAC,UAAA;MACAC,QAAA;MACAC,WAAA;MACAC,MAAA;MACAC,aAAA;MACAC,WAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;EACA,MAAAC,QAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACA;EACAC,OAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}