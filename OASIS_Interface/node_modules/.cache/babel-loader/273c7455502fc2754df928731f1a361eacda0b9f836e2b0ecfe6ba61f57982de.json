{"ast":null,"code":"import { configure } from './lib/configure.js';\nimport { toUrlSearchParams } from './lib/to-url-search-params.js';\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createStop = configure(api => {\n  /**\n   * @type {RootAPI[\"stop\"]}\n   */\n  async function stop(options = {}) {\n    const res = await api.post('shutdown', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    });\n    await res.text();\n  }\n  return stop;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","createStop","api","stop","options","res","post","signal","searchParams","headers","text"],"sources":["/Users/yezery/Desktop/OASIS/OASIS_Interface/node_modules/.store/ipfs-http-client@60.0.1/node_modules/ipfs-http-client/src/stop.js"],"sourcesContent":["import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createStop = configure(api => {\n  /**\n   * @type {RootAPI[\"stop\"]}\n   */\n  async function stop (options = {}) {\n    const res = await api.post('shutdown', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return stop\n})\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,iBAAiB,QAAQ,+BAA+B;;AAEjE;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAGF,SAAS,CAACG,GAAG,IAAI;EACzC;AACF;AACA;EACE,eAAeC,IAAIA,CAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACjC,MAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,UAAU,EAAE;MACrCC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBC,YAAY,EAAER,iBAAiB,CAACI,OAAO,CAAC;MACxCK,OAAO,EAAEL,OAAO,CAACK;IACnB,CAAC,CAAC;IAEF,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;EAClB;EACA,OAAOP,IAAI;AACb,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}