{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { logger } from '@libp2p/logger';\nimport { EventEmitter, CustomEvent } from '@libp2p/interfaces/events';\nimport { isStartable } from '@libp2p/interfaces/startable';\nimport { isMultiaddr } from '@multiformats/multiaddr';\nimport { MemoryDatastore } from 'datastore-core/memory';\nimport { DefaultPeerRouting } from './peer-routing.js';\nimport { CompoundContentRouting } from './content-routing/index.js';\nimport { codes } from './errors.js';\nimport { DefaultAddressManager } from './address-manager/index.js';\nimport { DefaultConnectionManager } from './connection-manager/index.js';\nimport { AutoDialler } from './connection-manager/auto-dialler.js';\nimport { Circuit } from './circuit/transport.js';\nimport { Relay } from './circuit/index.js';\nimport { KeyChain } from './keychain/index.js';\nimport { DefaultTransportManager } from './transport-manager.js';\nimport { DefaultUpgrader } from './upgrader.js';\nimport { DefaultRegistrar } from './registrar.js';\nimport { IdentifyService } from './identify/index.js';\nimport { FetchService } from './fetch/index.js';\nimport { PingService } from './ping/index.js';\nimport { NatManager } from './nat-manager.js';\nimport { PeerRecordUpdater } from './peer-record-updater.js';\nimport { DHTPeerRouting } from './dht/dht-peer-routing.js';\nimport { PersistentPeerStore } from '@libp2p/peer-store';\nimport { DHTContentRouting } from './dht/dht-content-routing.js';\nimport { DefaultComponents } from './components.js';\nimport { validateConfig } from './config.js';\nimport { createEd25519PeerId } from '@libp2p/peer-id-factory';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport errCode from 'err-code';\nimport { unmarshalPublicKey } from '@libp2p/crypto/keys';\nimport { DummyDHT } from './dht/dummy-dht.js';\nimport { DummyPubSub } from './pubsub/dummy-pubsub.js';\nimport { PeerSet } from '@libp2p/peer-collections';\nimport { DefaultDialer } from './connection-manager/dialer/index.js';\nimport { peerIdFromString } from '@libp2p/peer-id';\nconst log = logger('libp2p');\nexport class Libp2pNode extends EventEmitter {\n  constructor(init) {\n    super();\n    this.started = false;\n    this.peerId = init.peerId;\n    const components = this.components = new DefaultComponents({\n      peerId: init.peerId,\n      datastore: init.datastore ?? new MemoryDatastore(),\n      connectionGater: {\n        denyDialPeer: async () => await Promise.resolve(false),\n        denyDialMultiaddr: async () => await Promise.resolve(false),\n        denyInboundConnection: async () => await Promise.resolve(false),\n        denyOutboundConnection: async () => await Promise.resolve(false),\n        denyInboundEncryptedConnection: async () => await Promise.resolve(false),\n        denyOutboundEncryptedConnection: async () => await Promise.resolve(false),\n        denyInboundUpgradedConnection: async () => await Promise.resolve(false),\n        denyOutboundUpgradedConnection: async () => await Promise.resolve(false),\n        filterMultiaddrForPeer: async () => await Promise.resolve(true),\n        ...init.connectionGater\n      }\n    });\n    components.peerStore = new PersistentPeerStore(components, {\n      addressFilter: this.components.connectionGater.filterMultiaddrForPeer,\n      ...init.peerStore\n    });\n    this.services = [components];\n    // Create Metrics\n    if (init.metrics != null) {\n      this.metrics = this.components.metrics = this.configureComponent(init.metrics(this.components));\n    }\n    this.peerStore = this.components.peerStore;\n    this.peerStore.addEventListener('peer', evt => {\n      const {\n        detail: peerData\n      } = evt;\n      this.dispatchEvent(new CustomEvent('peer:discovery', {\n        detail: peerData\n      }));\n    });\n    // Set up connection protector if configured\n    if (init.connectionProtector != null) {\n      this.components.connectionProtector = init.connectionProtector(components);\n    }\n    // Set up the Upgrader\n    this.components.upgrader = new DefaultUpgrader(this.components, {\n      connectionEncryption: (init.connectionEncryption ?? []).map(fn => this.configureComponent(fn(this.components))),\n      muxers: (init.streamMuxers ?? []).map(fn => this.configureComponent(fn(this.components))),\n      inboundUpgradeTimeout: init.connectionManager.inboundUpgradeTimeout\n    });\n    // Create the dialer\n    this.components.dialer = new DefaultDialer(this.components, init.connectionManager);\n    // Create the Connection Manager\n    this.connectionManager = this.components.connectionManager = new DefaultConnectionManager(this.components, init.connectionManager);\n    // forward connection manager events\n    this.components.connectionManager.addEventListener('peer:disconnect', event => {\n      this.dispatchEvent(new CustomEvent('peer:disconnect', {\n        detail: event.detail\n      }));\n    });\n    this.components.connectionManager.addEventListener('peer:connect', event => {\n      this.dispatchEvent(new CustomEvent('peer:connect', {\n        detail: event.detail\n      }));\n    });\n    // Create the Registrar\n    this.registrar = this.components.registrar = new DefaultRegistrar(this.components);\n    // Setup the transport manager\n    this.components.transportManager = new DefaultTransportManager(this.components, init.transportManager);\n    // Addresses {listen, announce, noAnnounce}\n    this.components.addressManager = new DefaultAddressManager(this.components, init.addresses);\n    // update our peer record when addresses change\n    this.configureComponent(new PeerRecordUpdater(this.components));\n    this.configureComponent(new AutoDialler(this.components, {\n      enabled: init.connectionManager.autoDial,\n      minConnections: init.connectionManager.minConnections,\n      autoDialInterval: init.connectionManager.autoDialInterval\n    }));\n    // Create keychain\n    const keychainOpts = KeyChain.generateOptions();\n    this.keychain = this.configureComponent(new KeyChain(this.components, {\n      ...keychainOpts,\n      ...init.keychain\n    }));\n    // Create the Nat Manager\n    this.services.push(new NatManager(this.components, init.nat));\n    init.transports.forEach(fn => {\n      this.components.transportManager.add(this.configureComponent(fn(this.components)));\n    });\n    // Add the identify service\n    this.identifyService = new IdentifyService(this.components, {\n      ...init.identify\n    });\n    this.configureComponent(this.identifyService);\n    // dht provided components (peerRouting, contentRouting, dht)\n    if (init.dht != null) {\n      this.dht = this.components.dht = init.dht(this.components);\n    } else {\n      this.dht = new DummyDHT();\n    }\n    // Create pubsub if provided\n    if (init.pubsub != null) {\n      this.pubsub = this.components.pubsub = init.pubsub(this.components);\n    } else {\n      this.pubsub = new DummyPubSub();\n    }\n    // Attach remaining APIs\n    // peer and content routing will automatically get modules from _modules and _dht\n    const peerRouters = (init.peerRouters ?? []).map(fn => this.configureComponent(fn(this.components)));\n    if (init.dht != null) {\n      // add dht to routers\n      peerRouters.push(this.configureComponent(new DHTPeerRouting(this.dht)));\n      // use dht for peer discovery\n      this.dht.addEventListener('peer', evt => {\n        this.onDiscoveryPeer(evt);\n      });\n    }\n    this.peerRouting = this.components.peerRouting = this.configureComponent(new DefaultPeerRouting(this.components, {\n      ...init.peerRouting,\n      routers: peerRouters\n    }));\n    const contentRouters = (init.contentRouters ?? []).map(fn => this.configureComponent(fn(this.components)));\n    if (init.dht != null) {\n      // add dht to routers\n      contentRouters.push(this.configureComponent(new DHTContentRouting(this.dht)));\n    }\n    this.contentRouting = this.components.contentRouting = this.configureComponent(new CompoundContentRouting(this.components, {\n      routers: contentRouters\n    }));\n    if (init.relay.enabled) {\n      this.components.transportManager.add(this.configureComponent(new Circuit(this.components, init.relay)));\n      this.configureComponent(new Relay(this.components, {\n        addressSorter: init.connectionManager.addressSorter,\n        ...init.relay\n      }));\n    }\n    this.fetchService = this.configureComponent(new FetchService(this.components, {\n      ...init.fetch\n    }));\n    this.pingService = this.configureComponent(new PingService(this.components, {\n      ...init.ping\n    }));\n    // Discovery modules\n    for (const fn of init.peerDiscovery ?? []) {\n      const service = this.configureComponent(fn(this.components));\n      service.addEventListener('peer', evt => {\n        this.onDiscoveryPeer(evt);\n      });\n    }\n  }\n  configureComponent(component) {\n    if (isStartable(component)) {\n      this.services.push(component);\n    }\n    return component;\n  }\n  /**\n   * Starts the libp2p node and all its subsystems\n   */\n  async start() {\n    if (this.started) {\n      return;\n    }\n    this.started = true;\n    log('libp2p is starting');\n    try {\n      await Promise.all(this.services.map(async service => {\n        if (service.beforeStart != null) {\n          await service.beforeStart();\n        }\n      }));\n      // start any startables\n      await Promise.all(this.services.map(service => service.start()));\n      await Promise.all(this.services.map(async service => {\n        if (service.afterStart != null) {\n          await service.afterStart();\n        }\n      }));\n      log('libp2p has started');\n    } catch (err) {\n      log.error('An error occurred starting libp2p', err);\n      await this.stop();\n      throw err;\n    }\n  }\n  /**\n   * Stop the libp2p node by closing its listeners and open connections\n   */\n  async stop() {\n    if (!this.started) {\n      return;\n    }\n    log('libp2p is stopping');\n    this.started = false;\n    await Promise.all(this.services.map(async service => {\n      if (service.beforeStop != null) {\n        await service.beforeStop();\n      }\n    }));\n    await Promise.all(this.services.map(service => service.stop()));\n    await Promise.all(this.services.map(async service => {\n      if (service.afterStop != null) {\n        await service.afterStop();\n      }\n    }));\n    log('libp2p has stopped');\n  }\n  isStarted() {\n    return this.started;\n  }\n  getConnections(peerId) {\n    return this.components.connectionManager.getConnections(peerId);\n  }\n  getPeers() {\n    const peerSet = new PeerSet();\n    for (const conn of this.components.connectionManager.getConnections()) {\n      peerSet.add(conn.remotePeer);\n    }\n    return Array.from(peerSet);\n  }\n  async dial(peer, options = {}) {\n    return await this.components.connectionManager.openConnection(peer, options);\n  }\n  async dialProtocol(peer, protocols, options = {}) {\n    if (protocols == null) {\n      throw errCode(new Error('no protocols were provided to open a stream'), codes.ERR_INVALID_PROTOCOLS_FOR_STREAM);\n    }\n    protocols = Array.isArray(protocols) ? protocols : [protocols];\n    if (protocols.length === 0) {\n      throw errCode(new Error('no protocols were provided to open a stream'), codes.ERR_INVALID_PROTOCOLS_FOR_STREAM);\n    }\n    const connection = await this.dial(peer, options);\n    return await connection.newStream(protocols, options);\n  }\n  getMultiaddrs() {\n    return this.components.addressManager.getAddresses();\n  }\n  getProtocols() {\n    return this.components.registrar.getProtocols();\n  }\n  async hangUp(peer) {\n    if (isMultiaddr(peer)) {\n      peer = peerIdFromString(peer.getPeerId() ?? '');\n    }\n    await this.components.connectionManager.closeConnections(peer);\n  }\n  /**\n   * Get the public key for the given peer id\n   */\n  async getPublicKey(peer, options = {}) {\n    log('getPublicKey %p', peer);\n    if (peer.publicKey != null) {\n      return peer.publicKey;\n    }\n    const peerInfo = await this.peerStore.get(peer);\n    if (peerInfo.pubKey != null) {\n      return peerInfo.pubKey;\n    }\n    if (this.dht == null) {\n      throw errCode(new Error('Public key was not in the peer store and the DHT is not enabled'), codes.ERR_NO_ROUTERS_AVAILABLE);\n    }\n    const peerKey = uint8ArrayConcat([uint8ArrayFromString('/pk/'), peer.multihash.digest]);\n    // search the dht\n    for await (const event of this.dht.get(peerKey, options)) {\n      if (event.name === 'VALUE') {\n        const key = unmarshalPublicKey(event.value);\n        await this.peerStore.keyBook.set(peer, event.value);\n        return key.bytes;\n      }\n    }\n    throw errCode(new Error(`Node not responding with its public key: ${peer.toString()}`), codes.ERR_INVALID_RECORD);\n  }\n  async fetch(peer, key, options = {}) {\n    if (isMultiaddr(peer)) {\n      const peerId = peerIdFromString(peer.getPeerId() ?? '');\n      await this.components.peerStore.addressBook.add(peerId, [peer]);\n      peer = peerId;\n    }\n    return await this.fetchService.fetch(peer, key, options);\n  }\n  async ping(peer, options = {}) {\n    if (isMultiaddr(peer)) {\n      const peerId = peerIdFromString(peer.getPeerId() ?? '');\n      await this.components.peerStore.addressBook.add(peerId, [peer]);\n      peer = peerId;\n    }\n    return await this.pingService.ping(peer, options);\n  }\n  async handle(protocols, handler, options) {\n    if (!Array.isArray(protocols)) {\n      protocols = [protocols];\n    }\n    await Promise.all(protocols.map(async protocol => {\n      await this.components.registrar.handle(protocol, handler, options);\n    }));\n  }\n  async unhandle(protocols) {\n    if (!Array.isArray(protocols)) {\n      protocols = [protocols];\n    }\n    await Promise.all(protocols.map(async protocol => {\n      await this.components.registrar.unhandle(protocol);\n    }));\n  }\n  async register(protocol, topology) {\n    return await this.registrar.register(protocol, topology);\n  }\n  unregister(id) {\n    this.registrar.unregister(id);\n  }\n  /**\n   * Called whenever peer discovery services emit `peer` events.\n   * Known peers may be emitted.\n   */\n  onDiscoveryPeer(evt) {\n    const {\n      detail: peer\n    } = evt;\n    if (peer.id.toString() === this.peerId.toString()) {\n      log.error(new Error(codes.ERR_DISCOVERED_SELF));\n      return;\n    }\n    if (peer.multiaddrs.length > 0) {\n      void this.components.peerStore.addressBook.add(peer.id, peer.multiaddrs).catch(err => log.error(err));\n    }\n    if (peer.protocols.length > 0) {\n      void this.components.peerStore.protoBook.set(peer.id, peer.protocols).catch(err => log.error(err));\n    }\n    this.dispatchEvent(new CustomEvent('peer:discovery', {\n      detail: peer\n    }));\n  }\n}\n/**\n * Returns a new Libp2pNode instance - this exposes more of the internals than the\n * libp2p interface and is useful for testing and debugging.\n */\nexport async function createLibp2pNode(options) {\n  if (options.peerId == null) {\n    const datastore = options.datastore;\n    if (datastore != null) {\n      try {\n        // try load the peer id from the keychain\n        // @ts-expect-error missing the peer id property\n        const keyChain = new KeyChain({\n          datastore\n        }, {\n          ...KeyChain.generateOptions(),\n          ...(options.keychain ?? {})\n        });\n        options.peerId = await keyChain.exportPeerId('self');\n      } catch (err) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err;\n        }\n      }\n    }\n  }\n  if (options.peerId == null) {\n    // no peer id in the keychain, create a new peer id\n    options.peerId = await createEd25519PeerId();\n  }\n  return new Libp2pNode(validateConfig(options));\n}","map":{"version":3,"names":["logger","EventEmitter","CustomEvent","isStartable","isMultiaddr","MemoryDatastore","DefaultPeerRouting","CompoundContentRouting","codes","DefaultAddressManager","DefaultConnectionManager","AutoDialler","Circuit","Relay","KeyChain","DefaultTransportManager","DefaultUpgrader","DefaultRegistrar","IdentifyService","FetchService","PingService","NatManager","PeerRecordUpdater","DHTPeerRouting","PersistentPeerStore","DHTContentRouting","DefaultComponents","validateConfig","createEd25519PeerId","concat","uint8ArrayConcat","fromString","uint8ArrayFromString","errCode","unmarshalPublicKey","DummyDHT","DummyPubSub","PeerSet","DefaultDialer","peerIdFromString","log","Libp2pNode","constructor","init","started","peerId","components","datastore","connectionGater","denyDialPeer","Promise","resolve","denyDialMultiaddr","denyInboundConnection","denyOutboundConnection","denyInboundEncryptedConnection","denyOutboundEncryptedConnection","denyInboundUpgradedConnection","denyOutboundUpgradedConnection","filterMultiaddrForPeer","peerStore","addressFilter","services","metrics","configureComponent","addEventListener","evt","detail","peerData","dispatchEvent","connectionProtector","upgrader","connectionEncryption","map","fn","muxers","streamMuxers","inboundUpgradeTimeout","connectionManager","dialer","event","registrar","transportManager","addressManager","addresses","enabled","autoDial","minConnections","autoDialInterval","keychainOpts","generateOptions","keychain","push","nat","transports","forEach","add","identifyService","identify","dht","pubsub","peerRouters","onDiscoveryPeer","peerRouting","routers","contentRouters","contentRouting","relay","addressSorter","fetchService","fetch","pingService","ping","peerDiscovery","service","component","start","all","beforeStart","afterStart","err","error","stop","beforeStop","afterStop","isStarted","getConnections","getPeers","peerSet","conn","remotePeer","Array","from","dial","peer","options","openConnection","dialProtocol","protocols","Error","ERR_INVALID_PROTOCOLS_FOR_STREAM","isArray","length","connection","newStream","getMultiaddrs","getAddresses","getProtocols","hangUp","getPeerId","closeConnections","getPublicKey","publicKey","peerInfo","get","pubKey","ERR_NO_ROUTERS_AVAILABLE","peerKey","multihash","digest","name","key","value","keyBook","set","bytes","toString","ERR_INVALID_RECORD","addressBook","handle","handler","protocol","unhandle","register","topology","unregister","id","ERR_DISCOVERED_SELF","multiaddrs","catch","protoBook","createLibp2pNode","keyChain","exportPeerId","code"],"sources":["../../src/libp2p.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}