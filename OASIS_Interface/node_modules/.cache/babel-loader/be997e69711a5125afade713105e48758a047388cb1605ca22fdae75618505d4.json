{"ast":null,"code":"\"use strict\";\n\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nrequire(\"core-js/modules/es.typed-array.to-reversed.js\");\nrequire(\"core-js/modules/es.typed-array.to-sorted.js\");\nrequire(\"core-js/modules/es.typed-array.with.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar binary_1 = require(\"@stablelib/binary\");\nvar wipe_1 = require(\"@stablelib/wipe\");\nexports.DIGEST_LENGTH = 32;\nexports.BLOCK_SIZE = 64;\n/**\n * SHA2-256 cryptographic hash algorithm.\n */\nvar SHA256 = /** @class */function () {\n  function SHA256() {\n    /** Length of hash output */\n    this.digestLength = exports.DIGEST_LENGTH;\n    /** Block size */\n    this.blockSize = exports.BLOCK_SIZE;\n    // Note: Int32Array is used instead of Uint32Array for performance reasons.\n    this._state = new Int32Array(8); // hash state\n    this._temp = new Int32Array(64); // temporary state\n    this._buffer = new Uint8Array(128); // buffer for data to hash\n    this._bufferLength = 0; // number of bytes in buffer\n    this._bytesHashed = 0; // number of total bytes hashed\n    this._finished = false; // indicates whether the hash was finalized\n    this.reset();\n  }\n  SHA256.prototype._initState = function () {\n    this._state[0] = 0x6a09e667;\n    this._state[1] = 0xbb67ae85;\n    this._state[2] = 0x3c6ef372;\n    this._state[3] = 0xa54ff53a;\n    this._state[4] = 0x510e527f;\n    this._state[5] = 0x9b05688c;\n    this._state[6] = 0x1f83d9ab;\n    this._state[7] = 0x5be0cd19;\n  };\n  /**\n   * Resets hash state making it possible\n   * to re-use this instance to hash other data.\n   */\n  SHA256.prototype.reset = function () {\n    this._initState();\n    this._bufferLength = 0;\n    this._bytesHashed = 0;\n    this._finished = false;\n    return this;\n  };\n  /**\n   * Cleans internal buffers and resets hash state.\n   */\n  SHA256.prototype.clean = function () {\n    wipe_1.wipe(this._buffer);\n    wipe_1.wipe(this._temp);\n    this.reset();\n  };\n  /**\n   * Updates hash state with the given data.\n   *\n   * Throws error when trying to update already finalized hash:\n   * instance must be reset to update it again.\n   */\n  SHA256.prototype.update = function (data, dataLength) {\n    if (dataLength === void 0) {\n      dataLength = data.length;\n    }\n    if (this._finished) {\n      throw new Error(\"SHA256: can't update because hash was finished.\");\n    }\n    var dataPos = 0;\n    this._bytesHashed += dataLength;\n    if (this._bufferLength > 0) {\n      while (this._bufferLength < this.blockSize && dataLength > 0) {\n        this._buffer[this._bufferLength++] = data[dataPos++];\n        dataLength--;\n      }\n      if (this._bufferLength === this.blockSize) {\n        hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);\n        this._bufferLength = 0;\n      }\n    }\n    if (dataLength >= this.blockSize) {\n      dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);\n      dataLength %= this.blockSize;\n    }\n    while (dataLength > 0) {\n      this._buffer[this._bufferLength++] = data[dataPos++];\n      dataLength--;\n    }\n    return this;\n  };\n  /**\n   * Finalizes hash state and puts hash into out.\n   * If hash was already finalized, puts the same value.\n   */\n  SHA256.prototype.finish = function (out) {\n    if (!this._finished) {\n      var bytesHashed = this._bytesHashed;\n      var left = this._bufferLength;\n      var bitLenHi = bytesHashed / 0x20000000 | 0;\n      var bitLenLo = bytesHashed << 3;\n      var padLength = bytesHashed % 64 < 56 ? 64 : 128;\n      this._buffer[left] = 0x80;\n      for (var i = left + 1; i < padLength - 8; i++) {\n        this._buffer[i] = 0;\n      }\n      binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);\n      binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);\n      hashBlocks(this._temp, this._state, this._buffer, 0, padLength);\n      this._finished = true;\n    }\n    for (var i = 0; i < this.digestLength / 4; i++) {\n      binary_1.writeUint32BE(this._state[i], out, i * 4);\n    }\n    return this;\n  };\n  /**\n   * Returns the final hash digest.\n   */\n  SHA256.prototype.digest = function () {\n    var out = new Uint8Array(this.digestLength);\n    this.finish(out);\n    return out;\n  };\n  /**\n   * Function useful for HMAC/PBKDF2 optimization.\n   * Returns hash state to be used with restoreState().\n   * Only chain value is saved, not buffers or other\n   * state variables.\n   */\n  SHA256.prototype.saveState = function () {\n    if (this._finished) {\n      throw new Error(\"SHA256: cannot save finished state\");\n    }\n    return {\n      state: new Int32Array(this._state),\n      buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : undefined,\n      bufferLength: this._bufferLength,\n      bytesHashed: this._bytesHashed\n    };\n  };\n  /**\n   * Function useful for HMAC/PBKDF2 optimization.\n   * Restores state saved by saveState() and sets bytesHashed\n   * to the given value.\n   */\n  SHA256.prototype.restoreState = function (savedState) {\n    this._state.set(savedState.state);\n    this._bufferLength = savedState.bufferLength;\n    if (savedState.buffer) {\n      this._buffer.set(savedState.buffer);\n    }\n    this._bytesHashed = savedState.bytesHashed;\n    this._finished = false;\n    return this;\n  };\n  /**\n   * Cleans state returned by saveState().\n   */\n  SHA256.prototype.cleanSavedState = function (savedState) {\n    wipe_1.wipe(savedState.state);\n    if (savedState.buffer) {\n      wipe_1.wipe(savedState.buffer);\n    }\n    savedState.bufferLength = 0;\n    savedState.bytesHashed = 0;\n  };\n  return SHA256;\n}();\nexports.SHA256 = SHA256;\n// Constants\nvar K = new Int32Array([0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2]);\nfunction hashBlocks(w, v, p, pos, len) {\n  while (len >= 64) {\n    var a = v[0];\n    var b = v[1];\n    var c = v[2];\n    var d = v[3];\n    var e = v[4];\n    var f = v[5];\n    var g = v[6];\n    var h = v[7];\n    for (var i = 0; i < 16; i++) {\n      var j = pos + i * 4;\n      w[i] = binary_1.readUint32BE(p, j);\n    }\n    for (var i = 16; i < 64; i++) {\n      var u = w[i - 2];\n      var t1 = (u >>> 17 | u << 32 - 17) ^ (u >>> 19 | u << 32 - 19) ^ u >>> 10;\n      u = w[i - 15];\n      var t2 = (u >>> 7 | u << 32 - 7) ^ (u >>> 18 | u << 32 - 18) ^ u >>> 3;\n      w[i] = (t1 + w[i - 7] | 0) + (t2 + w[i - 16] | 0);\n    }\n    for (var i = 0; i < 64; i++) {\n      var t1 = (((e >>> 6 | e << 32 - 6) ^ (e >>> 11 | e << 32 - 11) ^ (e >>> 25 | e << 32 - 25)) + (e & f ^ ~e & g) | 0) + (h + (K[i] + w[i] | 0) | 0) | 0;\n      var t2 = ((a >>> 2 | a << 32 - 2) ^ (a >>> 13 | a << 32 - 13) ^ (a >>> 22 | a << 32 - 22)) + (a & b ^ a & c ^ b & c) | 0;\n      h = g;\n      g = f;\n      f = e;\n      e = d + t1 | 0;\n      d = c;\n      c = b;\n      b = a;\n      a = t1 + t2 | 0;\n    }\n    v[0] += a;\n    v[1] += b;\n    v[2] += c;\n    v[3] += d;\n    v[4] += e;\n    v[5] += f;\n    v[6] += g;\n    v[7] += h;\n    pos += 64;\n    len -= 64;\n  }\n  return pos;\n}\nfunction hash(data) {\n  var h = new SHA256();\n  h.update(data);\n  var digest = h.digest();\n  h.clean();\n  return digest;\n}\nexports.hash = hash;","map":{"version":3,"names":["require","binary_1","wipe_1","exports","DIGEST_LENGTH","BLOCK_SIZE","SHA256","digestLength","blockSize","_state","Int32Array","_temp","_buffer","Uint8Array","_bufferLength","_bytesHashed","_finished","reset","prototype","_initState","clean","wipe","update","data","dataLength","length","Error","dataPos","hashBlocks","finish","out","bytesHashed","left","bitLenHi","bitLenLo","padLength","i","writeUint32BE","digest","saveState","state","buffer","undefined","bufferLength","restoreState","savedState","set","cleanSavedState","K","w","v","p","pos","len","a","b","c","d","e","f","g","h","j","readUint32BE","u","t1","t2","hash"],"sources":["../sha256.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}