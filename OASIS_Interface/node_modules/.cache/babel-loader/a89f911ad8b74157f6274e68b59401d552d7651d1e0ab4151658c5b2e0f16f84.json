{"ast":null,"code":"var encode_1 = encode;\nvar MSB = 0x80,\n  REST = 0x7F,\n  MSBALL = ~REST,\n  INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 0xFF | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 0xFF | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 0x80,\n  REST$1 = 0x7F;\nfunction read(buf, offset) {\n  var res = 0,\n    offset = offset || 0,\n    shift = 0,\n    counter = offset,\n    b,\n    l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","map":{"version":3,"names":["encode_1","encode","MSB","REST","MSBALL","INT","Math","pow","num","out","offset","oldOffset","bytes","decode","read","MSB$1","REST$1","buf","res","shift","counter","b","l","length","RangeError","N1","N2","N3","N4","N5","N6","N7","N8","N9","value","varint","encodingLength","_brrp_varint"],"sources":["/Users/yezery/OASIS/OASIS_Interface/node_modules/.store/multiformats@12.1.1/node_modules/multiformats/vendor/varint.js"],"sourcesContent":["var encode_1 = encode;\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31);\n\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num /= 128;\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  \n  encode.bytes = offset - oldOffset + 1;\n  \n  return out\n}\n\nvar decode = read;\n\nvar MSB$1 = 0x80\n  , REST$1 = 0x7F;\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length;\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++];\n    res += shift < 28\n      ? (b & REST$1) << shift\n      : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1)\n\n  read.bytes = counter - offset;\n\n  return res\n}\n\nvar N1 = Math.pow(2,  7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\n\nvar length = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n};\n\nvar varint = {\n    encode: encode_1\n  , decode: decode\n  , encodingLength: length\n};\n\nvar _brrp_varint = varint;\n\nexport default _brrp_varint;\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM;AAErB,IAAIC,GAAG,GAAG,IAAI;EACVC,IAAI,GAAG,IAAI;EACXC,MAAM,GAAG,CAACD,IAAI;EACdE,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AAEzB,SAASN,MAAMA,CAACO,GAAG,EAAEC,GAAG,EAAEC,MAAM,EAAE;EAChCD,GAAG,GAAGA,GAAG,IAAI,EAAE;EACfC,MAAM,GAAGA,MAAM,IAAI,CAAC;EACpB,IAAIC,SAAS,GAAGD,MAAM;EAEtB,OAAMF,GAAG,IAAIH,GAAG,EAAE;IAChBI,GAAG,CAACC,MAAM,EAAE,CAAC,GAAIF,GAAG,GAAG,IAAI,GAAIN,GAAG;IAClCM,GAAG,IAAI,GAAG;EACZ;EACA,OAAMA,GAAG,GAAGJ,MAAM,EAAE;IAClBK,GAAG,CAACC,MAAM,EAAE,CAAC,GAAIF,GAAG,GAAG,IAAI,GAAIN,GAAG;IAClCM,GAAG,MAAM,CAAC;EACZ;EACAC,GAAG,CAACC,MAAM,CAAC,GAAGF,GAAG,GAAG,CAAC;EAErBP,MAAM,CAACW,KAAK,GAAGF,MAAM,GAAGC,SAAS,GAAG,CAAC;EAErC,OAAOF,GAAG;AACZ;AAEA,IAAII,MAAM,GAAGC,IAAI;AAEjB,IAAIC,KAAK,GAAG,IAAI;EACZC,MAAM,GAAG,IAAI;AAEjB,SAASF,IAAIA,CAACG,GAAG,EAAEP,MAAM,EAAE;EACzB,IAAIQ,GAAG,GAAM,CAAC;IACVR,MAAM,GAAGA,MAAM,IAAI,CAAC;IACpBS,KAAK,GAAI,CAAC;IACVC,OAAO,GAAGV,MAAM;IAChBW,CAAC;IACDC,CAAC,GAAGL,GAAG,CAACM,MAAM;EAElB,GAAG;IACD,IAAIH,OAAO,IAAIE,CAAC,EAAE;MAChBR,IAAI,CAACF,KAAK,GAAG,CAAC;MACd,MAAM,IAAIY,UAAU,CAAC,yBAAyB,CAAC;IACjD;IACAH,CAAC,GAAGJ,GAAG,CAACG,OAAO,EAAE,CAAC;IAClBF,GAAG,IAAIC,KAAK,GAAG,EAAE,GACb,CAACE,CAAC,GAAGL,MAAM,KAAKG,KAAK,GACrB,CAACE,CAAC,GAAGL,MAAM,IAAIV,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEY,KAAK,CAAC;IACrCA,KAAK,IAAI,CAAC;EACZ,CAAC,QAAQE,CAAC,IAAIN,KAAK;EAEnBD,IAAI,CAACF,KAAK,GAAGQ,OAAO,GAAGV,MAAM;EAE7B,OAAOQ,GAAG;AACZ;AAEA,IAAIO,EAAE,GAAGnB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAG,CAAC,CAAC;AACxB,IAAImB,EAAE,GAAGpB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AACxB,IAAIoB,EAAE,GAAGrB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AACxB,IAAIqB,EAAE,GAAGtB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AACxB,IAAIsB,EAAE,GAAGvB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AACxB,IAAIuB,EAAE,GAAGxB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AACxB,IAAIwB,EAAE,GAAGzB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AACxB,IAAIyB,EAAE,GAAG1B,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AACxB,IAAI0B,EAAE,GAAG3B,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC;AAExB,IAAIgB,MAAM,GAAG,SAAAA,CAAUW,KAAK,EAAE;EAC5B,OACEA,KAAK,GAAGT,EAAE,GAAG,CAAC,GACdS,KAAK,GAAGR,EAAE,GAAG,CAAC,GACdQ,KAAK,GAAGP,EAAE,GAAG,CAAC,GACdO,KAAK,GAAGN,EAAE,GAAG,CAAC,GACdM,KAAK,GAAGL,EAAE,GAAG,CAAC,GACdK,KAAK,GAAGJ,EAAE,GAAG,CAAC,GACdI,KAAK,GAAGH,EAAE,GAAG,CAAC,GACdG,KAAK,GAAGF,EAAE,GAAG,CAAC,GACdE,KAAK,GAAGD,EAAE,GAAG,CAAC,GACD,EAAE;AAEnB,CAAC;AAED,IAAIE,MAAM,GAAG;EACTlC,MAAM,EAAED,QAAQ;EAChBa,MAAM,EAAEA,MAAM;EACduB,cAAc,EAAEb;AACpB,CAAC;AAED,IAAIc,YAAY,GAAGF,MAAM;AAEzB,eAAeE,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}