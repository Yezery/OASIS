{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nexport class TimeoutError extends Error {\n  constructor(message) {\n    super(message);\n    this.name = 'TimeoutError';\n  }\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n  constructor(message) {\n    super();\n    this.name = 'AbortError';\n    this.message = message;\n  }\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined ? new AbortError(errorMessage) : new DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n  const reason = signal.reason === undefined ? getDOMException('This operation was aborted.') : signal.reason;\n  return reason instanceof Error ? reason : getDOMException(reason);\n};\nexport default function pTimeout(promise, options) {\n  const {\n    milliseconds,\n    fallback,\n    message,\n    customTimers = {\n      setTimeout,\n      clearTimeout\n    }\n  } = options;\n  let timer;\n  const wrappedPromise = new Promise((resolve, reject) => {\n    if (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n      throw new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n    }\n    if (options.signal) {\n      const {\n        signal\n      } = options;\n      if (signal.aborted) {\n        reject(getAbortedReason(signal));\n      }\n      signal.addEventListener('abort', () => {\n        reject(getAbortedReason(signal));\n      });\n    }\n    if (milliseconds === Number.POSITIVE_INFINITY) {\n      promise.then(resolve, reject);\n      return;\n    }\n\n    // We create the error outside of `setTimeout` to preserve the stack trace.\n    const timeoutError = new TimeoutError();\n    timer = customTimers.setTimeout.call(undefined, () => {\n      if (fallback) {\n        try {\n          resolve(fallback());\n        } catch (error) {\n          reject(error);\n        }\n        return;\n      }\n      if (typeof promise.cancel === 'function') {\n        promise.cancel();\n      }\n      if (message === false) {\n        resolve();\n      } else if (message instanceof Error) {\n        reject(message);\n      } else {\n        timeoutError.message = message ?? `Promise timed out after ${milliseconds} milliseconds`;\n        reject(timeoutError);\n      }\n    }, milliseconds);\n    (async () => {\n      try {\n        resolve(await promise);\n      } catch (error) {\n        reject(error);\n      }\n    })();\n  });\n  const cancelablePromise = wrappedPromise.finally(() => {\n    cancelablePromise.clear();\n  });\n  cancelablePromise.clear = () => {\n    customTimers.clearTimeout.call(undefined, timer);\n    timer = undefined;\n  };\n  return cancelablePromise;\n}","map":{"version":3,"names":["TimeoutError","Error","constructor","message","name","AbortError","getDOMException","errorMessage","globalThis","DOMException","undefined","getAbortedReason","signal","reason","pTimeout","promise","options","milliseconds","fallback","customTimers","setTimeout","clearTimeout","timer","wrappedPromise","Promise","resolve","reject","Math","sign","TypeError","aborted","addEventListener","Number","POSITIVE_INFINITY","then","timeoutError","call","error","cancel","cancelablePromise","finally","clear"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/p-timeout@6.1.2/node_modules/p-timeout/index.js"],"sourcesContent":["export class TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined\n\t? new AbortError(errorMessage)\n\t: new DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined\n\t\t? getDOMException('This operation was aborted.')\n\t\t: signal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default function pTimeout(promise, options) {\n\tconst {\n\t\tmilliseconds,\n\t\tfallback,\n\t\tmessage,\n\t\tcustomTimers = {setTimeout, clearTimeout},\n\t} = options;\n\n\tlet timer;\n\n\tconst wrappedPromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (options.signal) {\n\t\t\tconst {signal} = options;\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t});\n\t\t}\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\tpromise.then(resolve, reject);\n\t\t\treturn;\n\t\t}\n\n\t\t// We create the error outside of `setTimeout` to preserve the stack trace.\n\t\tconst timeoutError = new TimeoutError();\n\n\t\ttimer = customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (fallback) {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\tif (message === false) {\n\t\t\t\tresolve();\n\t\t\t} else if (message instanceof Error) {\n\t\t\t\treject(message);\n\t\t\t} else {\n\t\t\t\ttimeoutError.message = message ?? `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\t\treject(timeoutError);\n\t\t\t}\n\t\t}, milliseconds);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tresolve(await promise);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t})();\n\t});\n\n\tconst cancelablePromise = wrappedPromise.finally(() => {\n\t\tcancelablePromise.clear();\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\tcustomTimers.clearTimeout.call(undefined, timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}