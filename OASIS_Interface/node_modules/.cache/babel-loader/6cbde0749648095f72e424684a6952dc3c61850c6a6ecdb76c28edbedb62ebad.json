{"ast":null,"code":"import { CodeError } from '@libp2p/interfaces/errors';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\n/**\n * Select the best record out of the given records\n */\nexport function bestRecord(selectors, k, records) {\n  if (records.length === 0) {\n    const errMsg = 'No records given';\n    throw new CodeError(errMsg, 'ERR_NO_RECORDS_RECEIVED');\n  }\n  const kStr = uint8ArrayToString(k);\n  const parts = kStr.split('/');\n  if (parts.length < 3) {\n    const errMsg = 'Record key does not have a selector function';\n    throw new CodeError(errMsg, 'ERR_NO_SELECTOR_FUNCTION_FOR_RECORD_KEY');\n  }\n  const selector = selectors[parts[1].toString()];\n  if (selector == null) {\n    const errMsg = `Unrecognized key prefix: ${parts[1]}`;\n    throw new CodeError(errMsg, 'ERR_UNRECOGNIZED_KEY_PREFIX');\n  }\n  if (records.length === 1) {\n    return 0;\n  }\n  return selector(k, records);\n}\n/**\n * Best record selector, for public key records.\n * Simply returns the first record, as all valid public key\n * records are equal\n */\nfunction publickKey(k, records) {\n  return 0;\n}\nexport const selectors = {\n  pk: publickKey\n};","map":{"version":3,"names":["CodeError","toString","uint8ArrayToString","bestRecord","selectors","k","records","length","errMsg","kStr","parts","split","selector","publickKey","pk"],"sources":["../../src/selectors.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,SAAS,QAAQ,2BAA2B;AACrD,SAASC,QAAQ,IAAIC,kBAAkB,QAAQ,uBAAuB;AAGtE;;;AAGA,OAAM,SAAUC,UAAUA,CAAEC,SAAoB,EAAEC,CAAa,EAAEC,OAAqB;EACpF,IAAIA,OAAO,CAACC,MAAM,KAAK,CAAC,EAAE;IACxB,MAAMC,MAAM,GAAG,kBAAkB;IAEjC,MAAM,IAAIR,SAAS,CAACQ,MAAM,EAAE,yBAAyB,CAAC;;EAGxD,MAAMC,IAAI,GAAGP,kBAAkB,CAACG,CAAC,CAAC;EAClC,MAAMK,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC;EAE7B,IAAID,KAAK,CAACH,MAAM,GAAG,CAAC,EAAE;IACpB,MAAMC,MAAM,GAAG,8CAA8C;IAE7D,MAAM,IAAIR,SAAS,CAACQ,MAAM,EAAE,yCAAyC,CAAC;;EAGxE,MAAMI,QAAQ,GAAGR,SAAS,CAACM,KAAK,CAAC,CAAC,CAAC,CAACT,QAAQ,EAAE,CAAC;EAE/C,IAAIW,QAAQ,IAAI,IAAI,EAAE;IACpB,MAAMJ,MAAM,GAAG,4BAA4BE,KAAK,CAAC,CAAC,CAAC,EAAE;IAErD,MAAM,IAAIV,SAAS,CAACQ,MAAM,EAAE,6BAA6B,CAAC;;EAG5D,IAAIF,OAAO,CAACC,MAAM,KAAK,CAAC,EAAE;IACxB,OAAO,CAAC;;EAGV,OAAOK,QAAQ,CAACP,CAAC,EAAEC,OAAO,CAAC;AAC7B;AAEA;;;;;AAKA,SAASO,UAAUA,CAAER,CAAa,EAAEC,OAAqB;EACvD,OAAO,CAAC;AACV;AAEA,OAAO,MAAMF,SAAS,GAAc;EAClCU,EAAE,EAAED;CACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}