{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { asUint8Array } from './util/as-uint8array.js';\n/**\n * Returns a `Uint8Array` of the requested size. Referenced memory will\n * be initialized to 0.\n */\nexport function alloc(size = 0) {\n  if (globalThis.Buffer?.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\n/**\n * Where possible returns a Uint8Array of the requested size that references\n * uninitialized memory. Only use if you are certain you will immediately\n * overwrite every value in the returned `Uint8Array`.\n */\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer?.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}","map":{"version":3,"names":["asUint8Array","alloc","size","globalThis","Buffer","Uint8Array","allocUnsafe"],"sources":["../../src/alloc.ts"],"sourcesContent":[null],"mappings":";;;AAAA,SAASA,YAAY,QAAQ,yBAAyB;AAEtD;;;;AAIA,OAAM,SAAUC,KAAKA,CAAEC,IAAA,GAAe,CAAC;EACrC,IAAIC,UAAU,CAACC,MAAM,EAAEH,KAAK,IAAI,IAAI,EAAE;IACpC,OAAOD,YAAY,CAACG,UAAU,CAACC,MAAM,CAACH,KAAK,CAACC,IAAI,CAAC,CAAC;;EAGpD,OAAO,IAAIG,UAAU,CAACH,IAAI,CAAC;AAC7B;AAEA;;;;;AAKA,OAAM,SAAUI,WAAWA,CAAEJ,IAAA,GAAe,CAAC;EAC3C,IAAIC,UAAU,CAACC,MAAM,EAAEE,WAAW,IAAI,IAAI,EAAE;IAC1C,OAAON,YAAY,CAACG,UAAU,CAACC,MAAM,CAACE,WAAW,CAACJ,IAAI,CAAC,CAAC;;EAG1D,OAAO,IAAIG,UAAU,CAACH,IAAI,CAAC;AAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}