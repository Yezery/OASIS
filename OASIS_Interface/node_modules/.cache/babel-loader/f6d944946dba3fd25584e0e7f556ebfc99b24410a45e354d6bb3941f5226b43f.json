{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { multiaddr } from '@multiformats/multiaddr';\nimport { P2P } from '@multiformats/mafmt';\nimport { CustomEvent, EventEmitter } from '@libp2p/interfaces/events';\nimport { logger } from '@libp2p/logger';\nimport { peerIdFromString } from '@libp2p/peer-id';\nimport { symbol } from '@libp2p/interface-peer-discovery';\nconst log = logger('libp2p:bootstrap');\nconst DEFAULT_BOOTSTRAP_TAG_NAME = 'bootstrap';\nconst DEFAULT_BOOTSTRAP_TAG_VALUE = 50;\nconst DEFAULT_BOOTSTRAP_TAG_TTL = 120000;\nconst DEFAULT_BOOTSTRAP_DISCOVERY_TIMEOUT = 1000;\n/**\n * Emits 'peer' events on a regular interval for each peer in the provided list.\n */\nclass Bootstrap extends EventEmitter {\n  constructor(components, options = {\n    list: []\n  }) {\n    if (options.list == null || options.list.length === 0) {\n      throw new Error('Bootstrap requires a list of peer addresses');\n    }\n    super();\n    this.components = components;\n    this.timeout = options.timeout ?? DEFAULT_BOOTSTRAP_DISCOVERY_TIMEOUT;\n    this.list = [];\n    for (const candidate of options.list) {\n      if (!P2P.matches(candidate)) {\n        log.error('Invalid multiaddr');\n        continue;\n      }\n      const ma = multiaddr(candidate);\n      const peerIdStr = ma.getPeerId();\n      if (peerIdStr == null) {\n        log.error('Invalid bootstrap multiaddr without peer id');\n        continue;\n      }\n      const peerData = {\n        id: peerIdFromString(peerIdStr),\n        multiaddrs: [ma],\n        protocols: []\n      };\n      this.list.push(peerData);\n    }\n    this._init = options;\n  }\n  get [symbol]() {\n    return true;\n  }\n  get [Symbol.toStringTag]() {\n    return '@libp2p/bootstrap';\n  }\n  isStarted() {\n    return Boolean(this.timer);\n  }\n  /**\n   * Start emitting events\n   */\n  start() {\n    if (this.isStarted()) {\n      return;\n    }\n    log('Starting bootstrap node discovery, discovering peers after %s ms', this.timeout);\n    this.timer = setTimeout(() => {\n      void this._discoverBootstrapPeers().catch(err => {\n        log.error(err);\n      });\n    }, this.timeout);\n  }\n  /**\n   * Emit each address in the list as a PeerInfo\n   */\n  async _discoverBootstrapPeers() {\n    if (this.timer == null) {\n      return;\n    }\n    for (const peerData of this.list) {\n      await this.components.peerStore.tagPeer(peerData.id, this._init.tagName ?? DEFAULT_BOOTSTRAP_TAG_NAME, {\n        value: this._init.tagValue ?? DEFAULT_BOOTSTRAP_TAG_VALUE,\n        ttl: this._init.tagTTL ?? DEFAULT_BOOTSTRAP_TAG_TTL\n      });\n      // check we are still running\n      if (this.timer == null) {\n        return;\n      }\n      this.dispatchEvent(new CustomEvent('peer', {\n        detail: peerData\n      }));\n    }\n  }\n  /**\n   * Stop emitting events\n   */\n  stop() {\n    if (this.timer != null) {\n      clearTimeout(this.timer);\n    }\n    this.timer = undefined;\n  }\n}\nBootstrap.tag = 'bootstrap';\nexport function bootstrap(init) {\n  return components => new Bootstrap(components, init);\n}","map":{"version":3,"names":["multiaddr","P2P","CustomEvent","EventEmitter","logger","peerIdFromString","symbol","log","DEFAULT_BOOTSTRAP_TAG_NAME","DEFAULT_BOOTSTRAP_TAG_VALUE","DEFAULT_BOOTSTRAP_TAG_TTL","DEFAULT_BOOTSTRAP_DISCOVERY_TIMEOUT","Bootstrap","constructor","components","options","list","length","Error","timeout","candidate","matches","error","ma","peerIdStr","getPeerId","peerData","id","multiaddrs","protocols","push","_init","Symbol","toStringTag","isStarted","Boolean","timer","start","setTimeout","_discoverBootstrapPeers","catch","err","peerStore","tagPeer","tagName","value","tagValue","ttl","tagTTL","dispatchEvent","detail","stop","clearTimeout","undefined","tag","bootstrap","init"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}