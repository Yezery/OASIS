{"ast":null,"code":"import { search } from '@/api/axios/ownerContractLIst';\nexport default {\n  data() {\n    return {\n      SearchVo: {\n        key: \"\"\n      },\n      results: [],\n      timeout: null\n    };\n  },\n  mounted() {},\n  methods: {\n    async loadAll() {\n      await search(this.SearchVo).then(re => {\n        this.restaurants = re.data.data;\n        console.log(re.data.data);\n      });\n    },\n    querySearchAsync(queryString, cb) {\n      // 声明一个变量restaurants，用于存储餐厅列表\n      // var restaurants = this.restaurants;\n      // 声明一个变量results，用于存储过滤后的餐厅列表\n      // var results = queryString ? restaurants.filter(this.createStateFilter(queryString)) : restaurants;\n\n      // // 清除超时定时器\n      // clearTimeout(this.timeout);\n      // // 重新设置超时定时器，以防止每次输入搜索字符串时，都会触发超时回调函数\n      // this.timeout = setTimeout(() => {\n      //   cb(results);\n      // }, 3000 * Math.random());\n    },\n    createStateFilter(queryString) {\n      return state => {\n        return state.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    handleSelect(item) {\n      console.log(item);\n    }\n  }\n};","map":{"version":3,"names":["search","data","SearchVo","key","results","timeout","mounted","methods","loadAll","then","re","restaurants","console","log","querySearchAsync","queryString","cb","createStateFilter","state","value","toLowerCase","indexOf","handleSelect","item"],"sources":["src/views/topMenu/oasisSearch.vue"],"sourcesContent":["<template>\n  <div class=\"searchBox \">\n    <el-autocomplete\n      class=\"search\"\n      v-model=\"SearchVo.key\"\n      :fetch-suggestions=\"querySearchAsync\"\n      placeholder=\"Search any collection\"\n\n      @keydown.enter.prevent.stop=\"handleSelect\"\n      :clearable=\"true\"\n    />\n    <!-- @select=\"handleSelect\" -->\n  </div>\n</template>\n\n<script>\nimport { search } from '@/api/axios/ownerContractLIst';\n  export default {\n    data() {\n      return {\n        SearchVo: {\n          key:\"\"\n        },\n        results: [],\n        timeout:  null\n      };\n  },\n  mounted() {\n  },\n  methods: {\n     async loadAll() {\n      await search(this.SearchVo).then(re => { this.restaurants = re.data.data; console.log(re.data.data);})\n    },\n      \n     querySearchAsync(queryString, cb) {\n        // 声明一个变量restaurants，用于存储餐厅列表\n        // var restaurants = this.restaurants;\n        // 声明一个变量results，用于存储过滤后的餐厅列表\n        // var results = queryString ? restaurants.filter(this.createStateFilter(queryString)) : restaurants;\n\n        // // 清除超时定时器\n        // clearTimeout(this.timeout);\n        // // 重新设置超时定时器，以防止每次输入搜索字符串时，都会触发超时回调函数\n        // this.timeout = setTimeout(() => {\n        //   cb(results);\n        // }, 3000 * Math.random());\n      },\n      createStateFilter(queryString) {\n        return (state) => {\n          return (state.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);\n        };\n      },\n      handleSelect(item) {\n        console.log(item);\n      }\n    },\n  };\n</script>\n<style lang=\"scss\" scoped>\n@import \"@/style/topMenu/search.scss\";\n</style>\n"],"mappings":"AAgBA,SAAAA,MAAA;AACA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,GAAA;MACA;MACAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA,GACA;EACAC,OAAA;IACA,MAAAC,QAAA;MACA,MAAAR,MAAA,MAAAE,QAAA,EAAAO,IAAA,CAAAC,EAAA;QAAA,KAAAC,WAAA,GAAAD,EAAA,CAAAT,IAAA,CAAAA,IAAA;QAAAW,OAAA,CAAAC,GAAA,CAAAH,EAAA,CAAAT,IAAA,CAAAA,IAAA;MAAA;IACA;IAEAa,iBAAAC,WAAA,EAAAC,EAAA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;IAAA,CACA;IACAC,kBAAAF,WAAA;MACA,OAAAG,KAAA;QACA,OAAAA,KAAA,CAAAC,KAAA,CAAAC,WAAA,GAAAC,OAAA,CAAAN,WAAA,CAAAK,WAAA;MACA;IACA;IACAE,aAAAC,IAAA;MACAX,OAAA,CAAAC,GAAA,CAAAU,IAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}