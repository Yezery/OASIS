{"ast":null,"code":"import { CodeError } from '@libp2p/interfaces/errors';\nconst CIPHER_MODES = {\n  16: 'aes-128-ctr',\n  32: 'aes-256-ctr'\n};\nexport function cipherMode(key) {\n  if (key.length === 16 || key.length === 32) {\n    return CIPHER_MODES[key.length];\n  }\n  const modes = Object.entries(CIPHER_MODES).map(([k, v]) => `${k} (${v})`).join(' / ');\n  throw new CodeError(`Invalid key length ${key.length} bytes. Must be ${modes}`, 'ERR_INVALID_KEY_LENGTH');\n}","map":{"version":3,"names":["CodeError","CIPHER_MODES","cipherMode","key","length","modes","Object","entries","map","k","v","join"],"sources":["../../../src/aes/cipher-mode.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,SAAS,QAAQ,2BAA2B;AAErD,MAAMC,YAAY,GAAG;EACnB,EAAE,EAAE,aAAa;EACjB,EAAE,EAAE;CACL;AAED,OAAM,SAAUC,UAAUA,CAAEC,GAAe;EACzC,IAAIA,GAAG,CAACC,MAAM,KAAK,EAAE,IAAID,GAAG,CAACC,MAAM,KAAK,EAAE,EAAE;IAC1C,OAAOH,YAAY,CAACE,GAAG,CAACC,MAAM,CAAC;;EAGjC,MAAMC,KAAK,GAAGC,MAAM,CAACC,OAAO,CAACN,YAAY,CAAC,CAACO,GAAG,CAAC,CAAC,CAACC,CAAC,EAAEC,CAAC,CAAC,KAAK,GAAGD,CAAC,KAAKC,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;EACrF,MAAM,IAAIX,SAAS,CAAC,sBAAsBG,GAAG,CAACC,MAAM,mBAAmBC,KAAK,EAAE,EAAE,wBAAwB,CAAC;AAC3G"},"metadata":{},"sourceType":"module","externalDependencies":[]}