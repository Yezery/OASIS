{"ast":null,"code":"import debug from 'debug';\nimport { base32 } from 'multiformats/bases/base32';\nimport { base58btc } from 'multiformats/bases/base58';\nimport { base64 } from 'multiformats/bases/base64';\n// Add a formatter for converting to a base58 string\ndebug.formatters.b = v => {\n  return v == null ? 'undefined' : base58btc.baseEncode(v);\n};\n// Add a formatter for converting to a base32 string\ndebug.formatters.t = v => {\n  return v == null ? 'undefined' : base32.baseEncode(v);\n};\n// Add a formatter for converting to a base64 string\ndebug.formatters.m = v => {\n  return v == null ? 'undefined' : base64.baseEncode(v);\n};\n// Add a formatter for stringifying peer ids\ndebug.formatters.p = v => {\n  return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying CIDs\ndebug.formatters.c = v => {\n  return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Datastore keys\ndebug.formatters.k = v => {\n  return v == null ? 'undefined' : v.toString();\n};\n// Add a formatter for stringifying Multiaddrs\ndebug.formatters.a = v => {\n  return v == null ? 'undefined' : v.toString();\n};\nfunction createDisabledLogger(namespace) {\n  const logger = () => {};\n  logger.enabled = false;\n  logger.color = '';\n  logger.diff = 0;\n  logger.log = () => {};\n  logger.namespace = namespace;\n  logger.destroy = () => true;\n  logger.extend = () => logger;\n  return logger;\n}\nexport function logger(name) {\n  // trace logging is a no-op by default\n  let trace = createDisabledLogger(`${name}:trace`);\n  // look at all the debug names and see if trace logging has explicitly been enabled\n  if (debug.enabled(`${name}:trace`) && debug.names.map(r => r.toString()).find(n => n.includes(':trace')) != null) {\n    trace = debug(`${name}:trace`);\n  }\n  return Object.assign(debug(name), {\n    error: debug(`${name}:error`),\n    trace\n  });\n}\nexport function disable() {\n  debug.disable();\n}\nexport function enable(namespaces) {\n  debug.enable(namespaces);\n}\nexport function enabled(namespaces) {\n  return debug.enabled(namespaces);\n}","map":{"version":3,"names":["debug","base32","base58btc","base64","formatters","b","v","baseEncode","t","m","p","toString","c","k","a","createDisabledLogger","namespace","logger","enabled","color","diff","log","destroy","extend","name","trace","names","map","r","find","n","includes","Object","assign","error","disable","enable","namespaces"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}