{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createLocal({\n  repo\n}) {\n  /**\n   * @type {import('ipfs-core-types/src/refs').API<{}>[\"local\"]}\n   */\n  async function* refsLocal(options = {}) {\n    for await (const cid of repo.blocks.queryKeys({}, {\n      signal: options.signal\n    })) {\n      yield {\n        ref: cid.toString()\n      };\n    }\n  }\n  return withTimeoutOption(refsLocal);\n}","map":{"version":3,"names":["withTimeoutOption","createLocal","repo","refsLocal","options","cid","blocks","queryKeys","signal","ref","toString"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-core@0.18.1/node_modules/ipfs-core/src/components/refs/local.js"],"sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createLocal ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/refs').API<{}>[\"local\"]}\n   */\n  async function * refsLocal (options = {}) {\n    for await (const cid of repo.blocks.queryKeys({}, { signal: options.signal })) {\n      yield { ref: cid.toString() }\n    }\n  }\n\n  return withTimeoutOption(refsLocal)\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,qCAAqC;;AAEvE;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAAE;EAAEC;AAAK,CAAC,EAAE;EACrC;AACF;AACA;EACE,gBAAiBC,SAASA,CAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACxC,WAAW,MAAMC,GAAG,IAAIH,IAAI,CAACI,MAAM,CAACC,SAAS,CAAC,CAAC,CAAC,EAAE;MAAEC,MAAM,EAAEJ,OAAO,CAACI;IAAO,CAAC,CAAC,EAAE;MAC7E,MAAM;QAAEC,GAAG,EAAEJ,GAAG,CAACK,QAAQ,CAAC;MAAE,CAAC;IAC/B;EACF;EAEA,OAAOV,iBAAiB,CAACG,SAAS,CAAC;AACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}