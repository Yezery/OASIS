{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { logger } from '@libp2p/logger';\nimport { CodeError } from '@libp2p/interfaces/errors';\nimport merge from 'it-merge';\nimport { queryErrorEvent } from './query/events.js';\nimport { EventEmitter, CustomEvent } from '@libp2p/interfaces/events';\nimport { symbol } from '@libp2p/interface-peer-discovery';\nconst log = logger('libp2p:kad-dht');\n/**\n * A DHT implementation modelled after Kademlia with S/Kademlia modifications.\n * Original implementation in go: https://github.com/libp2p/go-libp2p-kad-dht.\n */\nexport class DualKadDHT extends EventEmitter {\n  constructor(components, wan, lan) {\n    super();\n    this.components = components;\n    this.wan = wan;\n    this.lan = lan;\n    // handle peers being discovered during processing of DHT messages\n    this.wan.addEventListener('peer', evt => {\n      this.dispatchEvent(new CustomEvent('peer', {\n        detail: evt.detail\n      }));\n    });\n    this.lan.addEventListener('peer', evt => {\n      this.dispatchEvent(new CustomEvent('peer', {\n        detail: evt.detail\n      }));\n    });\n  }\n  get [symbol]() {\n    return true;\n  }\n  get [Symbol.toStringTag]() {\n    return '@libp2p/dual-kad-dht';\n  }\n  /**\n   * Is this DHT running.\n   */\n  isStarted() {\n    return this.wan.isStarted() && this.lan.isStarted();\n  }\n  /**\n   * If 'server' this node will respond to DHT queries, if 'client' this node will not\n   */\n  async getMode() {\n    return await this.wan.getMode();\n  }\n  /**\n   * If 'server' this node will respond to DHT queries, if 'client' this node will not\n   */\n  async setMode(mode) {\n    await this.wan.setMode(mode);\n  }\n  /**\n   * Start listening to incoming connections.\n   */\n  async start() {\n    await Promise.all([this.lan.start(), this.wan.start()]);\n  }\n  /**\n   * Stop accepting incoming connections and sending outgoing\n   * messages.\n   */\n  async stop() {\n    await Promise.all([this.lan.stop(), this.wan.stop()]);\n  }\n  /**\n   * Store the given key/value pair in the DHT\n   */\n  async *put(key, value, options = {}) {\n    for await (const event of merge(this.lan.put(key, value, options), this.wan.put(key, value, options))) {\n      yield event;\n    }\n  }\n  /**\n   * Get the value that corresponds to the passed key\n   */\n  async *get(key, options = {}) {\n    let queriedPeers = false;\n    let foundValue = false;\n    for await (const event of merge(this.lan.get(key, options), this.wan.get(key, options))) {\n      yield event;\n      if (event.name === 'DIALING_PEER') {\n        queriedPeers = true;\n      }\n      if (event.name === 'VALUE') {\n        queriedPeers = true;\n        if (event.value != null) {\n          foundValue = true;\n        }\n      }\n      if (event.name === 'SENDING_QUERY') {\n        queriedPeers = true;\n      }\n    }\n    if (!queriedPeers) {\n      throw new CodeError('No peers found in routing table!', 'ERR_NO_PEERS_IN_ROUTING_TABLE');\n    }\n    if (!foundValue) {\n      yield queryErrorEvent({\n        from: this.components.peerId,\n        error: new CodeError('Not found', 'ERR_NOT_FOUND')\n      });\n    }\n  }\n  // ----------- Content Routing\n  /**\n   * Announce to the network that we can provide given key's value\n   */\n  async *provide(key, options = {}) {\n    let sent = 0;\n    let success = 0;\n    const errors = [];\n    const dhts = [this.lan];\n    // only run provide on the wan if we are in server mode\n    if ((await this.wan.getMode()) === 'server') {\n      dhts.push(this.wan);\n    }\n    for await (const event of merge(...dhts.map(dht => dht.provide(key, options)))) {\n      yield event;\n      if (event.name === 'SENDING_QUERY') {\n        sent++;\n      }\n      if (event.name === 'QUERY_ERROR') {\n        errors.push(event.error);\n      }\n      if (event.name === 'PEER_RESPONSE' && event.messageName === 'ADD_PROVIDER') {\n        log('sent provider record for %s to %p', key, event.from);\n        success++;\n      }\n    }\n    if (success === 0) {\n      if (errors.length > 0) {\n        // if all sends failed, throw an error to inform the caller\n        throw new CodeError(`Failed to provide to ${errors.length} of ${sent} peers`, 'ERR_PROVIDES_FAILED', {\n          errors\n        });\n      }\n      throw new CodeError('Failed to provide - no peers found', 'ERR_PROVIDES_FAILED');\n    }\n  }\n  /**\n   * Search the dht for up to `K` providers of the given CID\n   */\n  async *findProviders(key, options = {}) {\n    yield* merge(this.lan.findProviders(key, options), this.wan.findProviders(key, options));\n  }\n  // ----------- Peer Routing -----------\n  /**\n   * Search for a peer with the given ID\n   */\n  async *findPeer(id, options = {}) {\n    let queriedPeers = false;\n    for await (const event of merge(this.lan.findPeer(id, options), this.wan.findPeer(id, options))) {\n      yield event;\n      if (event.name === 'SENDING_QUERY' || event.name === 'FINAL_PEER') {\n        queriedPeers = true;\n      }\n    }\n    if (!queriedPeers) {\n      throw new CodeError('Peer lookup failed', 'ERR_LOOKUP_FAILED');\n    }\n  }\n  /**\n   * Kademlia 'node lookup' operation\n   */\n  async *getClosestPeers(key, options = {}) {\n    yield* merge(this.lan.getClosestPeers(key, options), this.wan.getClosestPeers(key, options));\n  }\n  async refreshRoutingTable() {\n    await Promise.all([this.lan.refreshRoutingTable(), this.wan.refreshRoutingTable()]);\n  }\n}","map":{"version":3,"names":["logger","CodeError","merge","queryErrorEvent","EventEmitter","CustomEvent","symbol","log","DualKadDHT","constructor","components","wan","lan","addEventListener","evt","dispatchEvent","detail","Symbol","toStringTag","isStarted","getMode","setMode","mode","start","Promise","all","stop","put","key","value","options","event","get","queriedPeers","foundValue","name","from","peerId","error","provide","sent","success","errors","dhts","push","map","dht","messageName","length","findProviders","findPeer","id","getClosestPeers","refreshRoutingTable"],"sources":["../../src/dual-kad-dht.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}