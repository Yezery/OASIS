{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\nimport { encodeMessage, decodeMessage, message, enumeration } from 'protons-runtime';\nexport var FetchRequest;\n(function (FetchRequest) {\n  let _codec;\n  FetchRequest.codec = () => {\n    if (_codec == null) {\n      _codec = message((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork();\n        }\n        if (opts.writeDefaults === true || obj.identifier !== '') {\n          w.uint32(10);\n          w.string(obj.identifier);\n        }\n        if (opts.lengthDelimited !== false) {\n          w.ldelim();\n        }\n      }, (reader, length) => {\n        const obj = {\n          identifier: ''\n        };\n        const end = length == null ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n          const tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              obj.identifier = reader.string();\n              break;\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return obj;\n      });\n    }\n    return _codec;\n  };\n  FetchRequest.encode = obj => {\n    return encodeMessage(obj, FetchRequest.codec());\n  };\n  FetchRequest.decode = buf => {\n    return decodeMessage(buf, FetchRequest.codec());\n  };\n})(FetchRequest || (FetchRequest = {}));\nexport var FetchResponse;\n(function (FetchResponse) {\n  let StatusCode;\n  (function (StatusCode) {\n    StatusCode[\"OK\"] = \"OK\";\n    StatusCode[\"NOT_FOUND\"] = \"NOT_FOUND\";\n    StatusCode[\"ERROR\"] = \"ERROR\";\n  })(StatusCode = FetchResponse.StatusCode || (FetchResponse.StatusCode = {}));\n  let __StatusCodeValues;\n  (function (__StatusCodeValues) {\n    __StatusCodeValues[__StatusCodeValues[\"OK\"] = 0] = \"OK\";\n    __StatusCodeValues[__StatusCodeValues[\"NOT_FOUND\"] = 1] = \"NOT_FOUND\";\n    __StatusCodeValues[__StatusCodeValues[\"ERROR\"] = 2] = \"ERROR\";\n  })(__StatusCodeValues || (__StatusCodeValues = {}));\n  (function (StatusCode) {\n    StatusCode.codec = () => {\n      return enumeration(__StatusCodeValues);\n    };\n  })(StatusCode = FetchResponse.StatusCode || (FetchResponse.StatusCode = {}));\n  let _codec;\n  FetchResponse.codec = () => {\n    if (_codec == null) {\n      _codec = message((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork();\n        }\n        if (opts.writeDefaults === true || obj.status != null && __StatusCodeValues[obj.status] !== 0) {\n          w.uint32(8);\n          FetchResponse.StatusCode.codec().encode(obj.status, w);\n        }\n        if (opts.writeDefaults === true || obj.data != null && obj.data.byteLength > 0) {\n          w.uint32(18);\n          w.bytes(obj.data);\n        }\n        if (opts.lengthDelimited !== false) {\n          w.ldelim();\n        }\n      }, (reader, length) => {\n        const obj = {\n          status: StatusCode.OK,\n          data: new Uint8Array(0)\n        };\n        const end = length == null ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n          const tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              obj.status = FetchResponse.StatusCode.codec().decode(reader);\n              break;\n            case 2:\n              obj.data = reader.bytes();\n              break;\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return obj;\n      });\n    }\n    return _codec;\n  };\n  FetchResponse.encode = obj => {\n    return encodeMessage(obj, FetchResponse.codec());\n  };\n  FetchResponse.decode = buf => {\n    return decodeMessage(buf, FetchResponse.codec());\n  };\n})(FetchResponse || (FetchResponse = {}));","map":{"version":3,"names":["encodeMessage","decodeMessage","message","enumeration","FetchRequest","_codec","codec","obj","w","opts","lengthDelimited","fork","writeDefaults","identifier","uint32","string","ldelim","reader","length","end","len","pos","tag","skipType","encode","decode","buf","FetchResponse","StatusCode","__StatusCodeValues","status","data","byteLength","bytes","OK","Uint8Array"],"sources":["../../../../src/fetch/pb/proto.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}