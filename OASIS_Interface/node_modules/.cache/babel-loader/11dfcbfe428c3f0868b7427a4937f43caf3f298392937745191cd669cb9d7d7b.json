{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader,\n  $Writer = $protobuf.Writer,\n  $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\nexport const Protocols = $root.Protocols = (() => {\n  /**\n   * Properties of a Protocols.\n   * @exports IProtocols\n   * @interface IProtocols\n   * @property {Array.<string>|null} [protocols] Protocols protocols\n   */\n\n  /**\n   * Constructs a new Protocols.\n   * @exports Protocols\n   * @classdesc Represents a Protocols.\n   * @implements IProtocols\n   * @constructor\n   * @param {IProtocols=} [p] Properties to set\n   */\n  function Protocols(p) {\n    this.protocols = [];\n    if (p) for (var ks = Object.keys(p), i = 0; i < ks.length; ++i) if (p[ks[i]] != null) this[ks[i]] = p[ks[i]];\n  }\n\n  /**\n   * Protocols protocols.\n   * @member {Array.<string>} protocols\n   * @memberof Protocols\n   * @instance\n   */\n  Protocols.prototype.protocols = $util.emptyArray;\n\n  /**\n   * Encodes the specified Protocols message. Does not implicitly {@link Protocols.verify|verify} messages.\n   * @function encode\n   * @memberof Protocols\n   * @static\n   * @param {IProtocols} m Protocols message or plain object to encode\n   * @param {$protobuf.Writer} [w] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n  Protocols.encode = function encode(m, w) {\n    if (!w) w = $Writer.create();\n    if (m.protocols != null && m.protocols.length) {\n      for (var i = 0; i < m.protocols.length; ++i) w.uint32(10).string(m.protocols[i]);\n    }\n    return w;\n  };\n\n  /**\n   * Decodes a Protocols message from the specified reader or buffer.\n   * @function decode\n   * @memberof Protocols\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n   * @param {number} [l] Message length if known beforehand\n   * @returns {Protocols} Protocols\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n  Protocols.decode = function decode(r, l) {\n    if (!(r instanceof $Reader)) r = $Reader.create(r);\n    var c = l === undefined ? r.len : r.pos + l,\n      m = new $root.Protocols();\n    while (r.pos < c) {\n      var t = r.uint32();\n      switch (t >>> 3) {\n        case 1:\n          if (!(m.protocols && m.protocols.length)) m.protocols = [];\n          m.protocols.push(r.string());\n          break;\n        default:\n          r.skipType(t & 7);\n          break;\n      }\n    }\n    return m;\n  };\n\n  /**\n   * Creates a Protocols message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof Protocols\n   * @static\n   * @param {Object.<string,*>} d Plain object\n   * @returns {Protocols} Protocols\n   */\n  Protocols.fromObject = function fromObject(d) {\n    if (d instanceof $root.Protocols) return d;\n    var m = new $root.Protocols();\n    if (d.protocols) {\n      if (!Array.isArray(d.protocols)) throw TypeError(\".Protocols.protocols: array expected\");\n      m.protocols = [];\n      for (var i = 0; i < d.protocols.length; ++i) {\n        m.protocols[i] = String(d.protocols[i]);\n      }\n    }\n    return m;\n  };\n\n  /**\n   * Creates a plain object from a Protocols message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof Protocols\n   * @static\n   * @param {Protocols} m Protocols\n   * @param {$protobuf.IConversionOptions} [o] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n  Protocols.toObject = function toObject(m, o) {\n    if (!o) o = {};\n    var d = {};\n    if (o.arrays || o.defaults) {\n      d.protocols = [];\n    }\n    if (m.protocols && m.protocols.length) {\n      d.protocols = [];\n      for (var j = 0; j < m.protocols.length; ++j) {\n        d.protocols[j] = m.protocols[j];\n      }\n    }\n    return d;\n  };\n\n  /**\n   * Converts this Protocols to JSON.\n   * @function toJSON\n   * @memberof Protocols\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n  Protocols.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n  return Protocols;\n})();\nexport { $root as default };","map":{"version":3,"names":["$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Protocols","p","protocols","ks","Object","keys","i","length","prototype","emptyArray","encode","m","w","create","uint32","string","decode","r","l","c","undefined","len","pos","t","push","skipType","fromObject","d","Array","isArray","TypeError","String","toObject","o","arrays","defaults","j","toJSON","constructor","toJSONOptions","default"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-repo-migrations@15.0.0/node_modules/ipfs-repo-migrations/src/migrations/migration-12/pb/proto-book.js"],"sourcesContent":["/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const Protocols = $root.Protocols = (() => {\n\n    /**\n     * Properties of a Protocols.\n     * @exports IProtocols\n     * @interface IProtocols\n     * @property {Array.<string>|null} [protocols] Protocols protocols\n     */\n\n    /**\n     * Constructs a new Protocols.\n     * @exports Protocols\n     * @classdesc Represents a Protocols.\n     * @implements IProtocols\n     * @constructor\n     * @param {IProtocols=} [p] Properties to set\n     */\n    function Protocols(p) {\n        this.protocols = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Protocols protocols.\n     * @member {Array.<string>} protocols\n     * @memberof Protocols\n     * @instance\n     */\n    Protocols.prototype.protocols = $util.emptyArray;\n\n    /**\n     * Encodes the specified Protocols message. Does not implicitly {@link Protocols.verify|verify} messages.\n     * @function encode\n     * @memberof Protocols\n     * @static\n     * @param {IProtocols} m Protocols message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Protocols.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.protocols != null && m.protocols.length) {\n            for (var i = 0; i < m.protocols.length; ++i)\n                w.uint32(10).string(m.protocols[i]);\n        }\n        return w;\n    };\n\n    /**\n     * Decodes a Protocols message from the specified reader or buffer.\n     * @function decode\n     * @memberof Protocols\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Protocols} Protocols\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Protocols.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Protocols();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                if (!(m.protocols && m.protocols.length))\n                    m.protocols = [];\n                m.protocols.push(r.string());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Protocols message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Protocols\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Protocols} Protocols\n     */\n    Protocols.fromObject = function fromObject(d) {\n        if (d instanceof $root.Protocols)\n            return d;\n        var m = new $root.Protocols();\n        if (d.protocols) {\n            if (!Array.isArray(d.protocols))\n                throw TypeError(\".Protocols.protocols: array expected\");\n            m.protocols = [];\n            for (var i = 0; i < d.protocols.length; ++i) {\n                m.protocols[i] = String(d.protocols[i]);\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Protocols message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Protocols\n     * @static\n     * @param {Protocols} m Protocols\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Protocols.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.protocols = [];\n        }\n        if (m.protocols && m.protocols.length) {\n            d.protocols = [];\n            for (var j = 0; j < m.protocols.length; ++j) {\n                d.protocols[j] = m.protocols[j];\n            }\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Protocols to JSON.\n     * @function toJSON\n     * @memberof Protocols\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Protocols.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Protocols;\n})();\n\nexport { $root as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}