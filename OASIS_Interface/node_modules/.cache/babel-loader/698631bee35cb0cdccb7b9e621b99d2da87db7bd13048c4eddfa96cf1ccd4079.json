{"ast":null,"code":"import { nanoid } from 'nanoid';\nimport { WORKER_REQUEST_READ_LOCK, WORKER_RELEASE_READ_LOCK, MASTER_GRANT_READ_LOCK, WORKER_REQUEST_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK } from './constants.js';\nimport observer from 'observable-webworkers';\nconst handleWorkerLockRequest = (emitter, masterEvent, requestType, releaseType, grantType) => {\n  return (worker, event) => {\n    if (event.data.type !== requestType) {\n      return;\n    }\n    const requestEvent = {\n      type: event.data.type,\n      name: event.data.name,\n      identifier: event.data.identifier\n    };\n    emitter.dispatchEvent(new MessageEvent(masterEvent, {\n      data: {\n        name: requestEvent.name,\n        handler: async () => {\n          // grant lock to worker\n          worker.postMessage({\n            type: grantType,\n            name: requestEvent.name,\n            identifier: requestEvent.identifier\n          });\n          // wait for worker to finish\n          return await new Promise(resolve => {\n            const releaseEventListener = event => {\n              if (event == null || event.data == null) {\n                return;\n              }\n              const releaseEvent = {\n                type: event.data.type,\n                name: event.data.name,\n                identifier: event.data.identifier\n              };\n              if (releaseEvent.type === releaseType && releaseEvent.identifier === requestEvent.identifier) {\n                worker.removeEventListener('message', releaseEventListener);\n                resolve();\n              }\n            };\n            worker.addEventListener('message', releaseEventListener);\n          });\n        }\n      }\n    }));\n  };\n};\nconst makeWorkerLockRequest = (name, requestType, grantType, releaseType) => {\n  return async () => {\n    const id = nanoid();\n    globalThis.postMessage({\n      type: requestType,\n      identifier: id,\n      name\n    });\n    return await new Promise(resolve => {\n      const listener = event => {\n        if (event == null || event.data == null) {\n          return;\n        }\n        const responseEvent = {\n          type: event.data.type,\n          identifier: event.data.identifier\n        };\n        if (responseEvent.type === grantType && responseEvent.identifier === id) {\n          globalThis.removeEventListener('message', listener);\n          // grant lock\n          resolve(() => {\n            // release lock\n            globalThis.postMessage({\n              type: releaseType,\n              identifier: id,\n              name\n            });\n          });\n        }\n      };\n      globalThis.addEventListener('message', listener);\n    });\n  };\n};\nconst defaultOptions = {\n  singleProcess: false\n};\nexport default (options => {\n  options = Object.assign({}, defaultOptions, options);\n  const isPrimary = Boolean(globalThis.document) || options.singleProcess;\n  if (isPrimary) {\n    const emitter = new EventTarget();\n    observer.addEventListener('message', handleWorkerLockRequest(emitter, 'requestReadLock', WORKER_REQUEST_READ_LOCK, WORKER_RELEASE_READ_LOCK, MASTER_GRANT_READ_LOCK));\n    observer.addEventListener('message', handleWorkerLockRequest(emitter, 'requestWriteLock', WORKER_REQUEST_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK));\n    return emitter;\n  }\n  return {\n    isWorker: true,\n    readLock: name => makeWorkerLockRequest(name, WORKER_REQUEST_READ_LOCK, MASTER_GRANT_READ_LOCK, WORKER_RELEASE_READ_LOCK),\n    writeLock: name => makeWorkerLockRequest(name, WORKER_REQUEST_WRITE_LOCK, MASTER_GRANT_WRITE_LOCK, WORKER_RELEASE_WRITE_LOCK)\n  };\n});","map":{"version":3,"names":["nanoid","WORKER_REQUEST_READ_LOCK","WORKER_RELEASE_READ_LOCK","MASTER_GRANT_READ_LOCK","WORKER_REQUEST_WRITE_LOCK","WORKER_RELEASE_WRITE_LOCK","MASTER_GRANT_WRITE_LOCK","observer","handleWorkerLockRequest","emitter","masterEvent","requestType","releaseType","grantType","worker","event","data","type","requestEvent","name","identifier","dispatchEvent","MessageEvent","handler","postMessage","Promise","resolve","releaseEventListener","releaseEvent","removeEventListener","addEventListener","makeWorkerLockRequest","id","globalThis","listener","responseEvent","defaultOptions","singleProcess","options","Object","assign","isPrimary","Boolean","document","EventTarget","isWorker","readLock","writeLock"],"sources":["../../src/browser.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}