{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getSaleListByContractAddress } from \"@/api/axios/Sale\";\nimport { getNFTStruct, Buy } from \"@/api/axios/contract\";\nexport default {\n  name: \"NFTInf\",\n  data() {\n    return {\n      NFTInf: null,\n      NFTMetaData: null,\n      NFTContract: null,\n      NFTContractAddress: null,\n      NFTSaleId: 0,\n      NFTTokenId: 0,\n      NFTPrice: 0,\n      NFTSeller: \"\",\n      NFTIsActive: false,\n      NFTImage: \"#\",\n      NFTName: \"\",\n      supplyer: \"\",\n      symbol: null,\n      NFTSeries: \"\",\n      description: \"\",\n      maxmums: 0,\n      currentId: 0,\n      activeTab: \"first\",\n      seriesNFTArrays: [],\n      sale: {},\n      bought: false,\n      MessageShow: false,\n      changeNFT: {},\n      opt: 0,\n      isChanging: false\n    };\n  },\n  watch: {},\n  mounted() {\n    this.init();\n  },\n  methods: {\n    async init() {\n      try {\n        this.NFTInf = this.$store.state.marketNFTInf;\n        console.log(this.NFTInf);\n        this.NFTImage = JSON.parse(this.NFTInf.tokenURI).image;\n        this.NFTContractAddress = this.NFTInf.nftContract;\n        this.NFTSaleId = this.NFTInf.saleId;\n        this.NFTSeller = this.NFTInf.seller;\n        this.NFTTokenId = this.NFTInf.tokenId;\n        this.NFTPrice = this.NFTInf.price;\n        this.NFTName = JSON.parse(this.NFTInf.tokenURI).name;\n        this.NFTIsActive = this.NFTInf.isActive;\n        this.supplyer = `${this.NFTInf.seller.slice(0, 5)}...${this.NFTInf.seller.slice(37)}`;\n        this.description = this.NFTInf.description;\n        this.NFTSeries = this.NFTInf.seriesName;\n        this.maxmums = this.NFTInf.maxmums;\n        this.symbol = this.NFTInf.symbol;\n        await this.getThisSeriesNFT();\n        await getNFTStruct(this.NFTContractAddress).then(re => {\n          this.NFTContract = re;\n        });\n        await this.NFTContract.methods._currentId().call().then(re => {\n          this.currentId = re;\n        });\n        await this.NFTContract.methods.symbol().call().then(re => {\n          this.symbol = re;\n        });\n        await this.NFTContract.methods.name().call().then(re => {\n          this.NFTSeries = re;\n        });\n        await this.NFTContract.methods._maximums().call().then(re => {\n          this.maxmums = re;\n        });\n        this.makeSale();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    OpenMessageBox(NFT) {\n      this.changeNFT = NFT;\n      this.MessageShow = true;\n    },\n    CloseMessageBox(opt) {\n      this.MessageShow = false;\n      this.changeNFT = {};\n      if (opt == 1) {\n        this.$notify({\n          title: `ÊÇ®Â∑≤ÂèñÊ∂àË¥≠‰π∞`,\n          type: \"warning\",\n          position: \"top-left\",\n          offset: 200\n        });\n      }\n    },\n    makeSale() {\n      this.sale = {\n        isActive: true,\n        nftAddress: this.NFTContractAddress,\n        price: this.$store.state.Web3.utils.fromWei(this.NFTPrice, \"ether\"),\n        saleId: Number(this.NFTSaleId),\n        ownerAddress: this.NFTSeller,\n        tokenId: Number(this.NFTTokenId)\n      };\n    },\n    async getThisSeriesNFT() {\n      var NFTDto = {\n        nftAddress: this.NFTContractAddress\n      };\n      await getSaleListByContractAddress(NFTDto).then(re => {\n        this.seriesNFTArrays = re.data.data;\n        console.log(re);\n      });\n    },\n    async Buy() {\n      try {\n        this.changeNFT.symbol = this.symbol;\n        this.changeNFT.image = this.NFTImage;\n        let isSuccess = false;\n        this.isChanging = true;\n        await Buy(this.changeNFT).then(re => {\n          isSuccess = re;\n        });\n        if (isSuccess) {\n          this.isChanging = false;\n          this.$notify({\n            title: \"üíñ ÊÑüË∞¢Ë¥≠‰π∞\",\n            type: \"success\",\n            position: \"top-left\",\n            offset: 200\n          });\n          this.bought = true;\n          this.CloseMessageBox(2);\n        } else {\n          this.isChanging = false;\n          this.$notify({\n            title: \"ÊÇ®Â∑≤ÂèñÊ∂àË¥≠‰π∞\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200\n          });\n          this.CloseMessageBox(2);\n        }\n      } catch (error) {\n        this.isChanging = false;\n        this.$notify.error({\n          title: \"Ë¥≠‰π∞Â§±Ë¥•\",\n          position: \"top-left\",\n          offset: 200\n        });\n      }\n    },\n    toMarketMain() {\n      this.$router.push(\"/\");\n      this.$store.commit(\"setIsSearch\", false);\n    }\n  }\n};","map":{"version":3,"names":["getSaleListByContractAddress","getNFTStruct","Buy","name","data","NFTInf","NFTMetaData","NFTContract","NFTContractAddress","NFTSaleId","NFTTokenId","NFTPrice","NFTSeller","NFTIsActive","NFTImage","NFTName","supplyer","symbol","NFTSeries","description","maxmums","currentId","activeTab","seriesNFTArrays","sale","bought","MessageShow","changeNFT","opt","isChanging","watch","mounted","init","methods","$store","state","marketNFTInf","console","log","JSON","parse","tokenURI","image","nftContract","saleId","seller","tokenId","price","isActive","slice","seriesName","getThisSeriesNFT","then","re","_currentId","call","_maximums","makeSale","error","OpenMessageBox","NFT","CloseMessageBox","$notify","title","type","position","offset","nftAddress","Web3","utils","fromWei","Number","ownerAddress","NFTDto","isSuccess","toMarketMain","$router","push","commit"],"sources":["src/views/market/NFTInf.vue"],"sourcesContent":["<template>\n  <div\n    class=\"NFTInfMainBox animate__animated animate__fadeInDown\"\n    v-loading.fullscreen.lock=\"isChanging\"\n    element-loading-text=\"‰∫§ÊòìËøõË°å‰∏≠\"\n    element-loading-spinner=\"el-icon-loading\"\n    element-loading-background=\"rgba(0, 0, 0, 0.8)\"\n  >\n    <div class=\"NFTInfMain\">\n      <div class=\"NFTInfBackground\">\n        <router-link :to=\"{ name: 'MarketShop' }\">\n          <span class=\"toMarketmain\">\n            <i\n              class=\"el-icon-arrow-left\"\n              style=\"font-size: 3vw;\"\n            />\n          </span>\n        </router-link>\n      </div>\n      <div class=\"NFTInfContextBox\">\n        <div class=\"NFTInfBox\">\n          <div class=\"AvatarBox\">\n            <div class=\"AvatarBorder\">\n              <img\n                :src=\"NFTImage\"\n                alt=\"\"\n              >\n            </div>\n\n            <div class=\"Inf\">\n              <div class=\"NFTName\">\n                <h1>{{ NFTName }}</h1>\n              </div>\n              <div class=\"NFTContract\">\n                <div class=\"NFTSupplyer\">\n                  Áî± <span style=\"font-weight: 800;font-size: 1.2vw;\">{{ supplyer }}</span>\n                </div>\n                <div class=\"NFTInf\">\n                  <div class=\"NFTCounts\">\n                    Á≥ªÂàó<span style=\"font-weight: 800;\">{{ NFTSeries }}</span> ¬∑\n                    ‰ª£Â∏ÅÁ¨¶Âè∑<span style=\"font-weight: 800;\">{{ symbol }}</span> ¬∑\n                    ÈôêÈáèÈì∏ÈÄ†<span style=\"font-weight: 800;\">{{ maxmums }}</span> ¬∑\n                    ÁõÆÂâçÂ∑≤Èì∏ÈÄ†Êï∞Èáè<span style=\"font-weight: 800;\">{{ currentId }}</span>\n                  </div>\n                  <div class=\"NFTdescription\">\n                    {{ description }}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <el-button\n            type=\"success\"\n            plain\n            class=\"Buy\"\n            @click=\"OpenMessageBox(sale, opt)\"\n            :disabled=\"!$store.state.isconnect || NFTSeller.toUpperCase() == $store.state.currentAddress.toUpperCase() || bought || !NFTIsActive\"\n          >\n            {{ bought?\"Â∑≤Ë¥≠ÂÖ•\":\"Ë¥≠ÂÖ•\" }}\n          </el-button>\n        </div>\n        <div class=\"selectBox\">\n          <div class=\"selectBox-Button\">\n            <el-tabs v-model=\"activeTab\">\n              <el-tab-pane\n                label=\"Ê≠£Âú®ÂîÆÂçñ\"\n                name=\"first\"\n              >\n                <div class=\"SeriesNFT\">\n                  <div\n                    style=\"margin-top: 10%;margin-bottom: 10%;font-weight: 800;font-size: 1vw;\"\n                    v-if=\"seriesNFTArrays.filter(inf => inf.isActive && inf.ipfsPath !== NFTImage).length == 0\"\n                  >\n                    <el-empty description=\"Êó†Âú®ÂîÆ\" />\n                  </div>\n                  <div\n                    class=\"NFTInf\"\n                    v-for=\"inf in seriesNFTArrays.filter(inf => inf.isActive && inf.ipfsPath !== NFTImage)\"\n                    :key=\"inf.image\"\n                  >\n                    <div class=\"imageBox\">\n                      <img\n                        class=\"NFTImage\"\n                        :src=\"inf.ipfsPath\"\n                        alt=\"\"\n                      >\n                    </div>\n                    <div class=\"Inf\">\n                      <div class=\"NFTName\">\n                        {{ inf.nftName }}\n                      </div>\n                      <div class=\"ownerAndToSell\">\n                        <div class=\"ToSellBox\">\n                          #{{ inf.tokenId }}\n                        </div>\n                        <div style=\"margin-left: 2%;\">\n                          <span style=\"font-weight: 800;font-size: 2vw;\">{{ $store.state.Web3.utils.fromWei(inf.price, 'ether') }} </span> ETH\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </el-tab-pane>\n              <el-tab-pane\n                label=\"ÊöÇÊú™ÂèëÂîÆ\"\n                name=\"second\"\n              >\n                <div class=\"SeriesNFT\">\n                  <div\n                    style=\"margin-top: 10%;margin-bottom: 10%;font-weight: 800;font-size: 1vw;\"\n                    v-if=\"seriesNFTArrays.filter(inf => !inf.isActive).length == 0\"\n                  >\n                    <el-empty description=\"Êó†Êï∞ÊçÆ\" />\n                  </div>\n                  <template v-else>\n                    <div\n                      class=\"NFTInf\"\n                      v-for=\"inf in seriesNFTArrays.filter(inf => !inf.isActive)\"\n                      :key=\"inf.image\"\n                    >\n                      <div class=\"imageBox\">\n                        <img\n                          class=\"NFTImage\"\n                          :src=\"inf.image\"\n                          alt=\"\"\n                        >\n                      </div>\n                      <div class=\"Inf\">\n                        <div class=\"NFTName\">\n                          {{ inf.name }}\n                        </div>\n                        <div class=\"ownerAndToSell\">\n                          <div class=\"ToSellBox\" />\n                        </div>\n                      </div>\n                    </div>\n                  </template>\n                </div>\n              </el-tab-pane>\n              <el-tab-pane\n                label=\"Á≥ªÂàóNFT\"\n                name=\"third\"\n              >\n                <div class=\"SeriesNFT\">\n                  <div\n                    style=\"margin-top: 10%;margin-bottom: 10%;font-weight: 800;font-size: 1vw;\"\n                    v-if=\"seriesNFTArrays.length == 0\"\n                  >\n                    <el-empty description=\"Êó†Êï∞ÊçÆ\" />\n                  </div>\n                  <div\n                    class=\"NFTInf\"\n                    v-for=\"inf in seriesNFTArrays\"\n                    :key=\"inf.image\"\n                  >\n                    <div class=\"imageBox\">\n                      <img\n                        class=\"NFTImage\"\n                        :src=\"inf.ipfsPath\"\n                        alt=\"\"\n                      >\n                    </div>\n                    <div class=\"Inf\">\n                      <div class=\"NFTName\">\n                        {{ inf.nftName }}\n                      </div>\n                      <div class=\"ownerAndToSell\">\n                        <div class=\"ToSellBox\">\n                          #{{ inf.tokenId }}\n                        </div>\n                        <div style=\"margin-left: 2%;\">\n                          <span style=\"font-weight: 800;font-size: 2vw;\">{{ $store.state.Web3.utils.fromWei(inf.price, 'ether') }} </span> ETH\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </el-tab-pane>\n            </el-tabs>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div\n      class=\"MessageMask\"\n      v-if=\"MessageShow\"\n    >\n      <div class=\"Message animate__animated animate__fadeInUp\">\n        <div class=\"MessageLeft\">\n          <div class=\"imageBox\">\n            <img\n              :src=\"NFTImage\"\n              alt=\"\"\n            >\n          </div>\n        </div>\n        <div class=\"MessageRight\">\n          <div class=\"select\">\n            <div class=\"tipsBox\">\n              <div class=\"tipsTitle\">\n                Á≥ªÂàóÂêç <span class=\"tipshelp\">Series Name</span>\n              </div>\n              <div class=\"tipsTitle2\">\n                {{ NFTSeries }}\n              </div>\n            </div>\n          </div>\n          <div class=\"select\">\n            <div class=\"tipsBox\">\n              <div class=\"tipsTitle\">\n                ‰ª£Â∏ÅÁ¨¶Âè∑ <span class=\"tipshelp\">Symbol</span>\n              </div>\n              <div class=\"tipsTitle2\">\n                {{ symbol }}\n              </div>\n            </div>\n          </div>\n          <div class=\"select\">\n            <div class=\"tipsBox\">\n              <div class=\"tipsTitle\">\n                ÂêçÁß∞ <span class=\"tipshelp\">NFT Name</span>\n              </div>\n              <div class=\"tipsTitle2\">\n                {{ NFTName }}\n              </div>\n            </div>\n          </div>\n          <div class=\"select\">\n            <div class=\"tipsBox\">\n              <div class=\"tipsTitle\">\n                Â∫èÂè∑ <span class=\"tipshelp\">Token ID</span>\n              </div>\n              <div class=\"tipsTitle2\">\n                #{{ NFTTokenId }}\n              </div>\n            </div>\n          </div>\n          <div class=\"select\">\n            <div class=\"tipsBox\">\n              <div class=\"tipsTitle2\">\n                <el-divider />\n              </div>\n            </div>\n          </div>\n          <div class=\"select\">\n            <div class=\"tipsBox\">\n              <div class=\"tipsTitle\">\n                ‰ª∑Ê†º <span class=\"tipshelp\">Price</span>\n              </div>\n              <div class=\"tipsTitle2\">\n                <span style=\"font-size: 30px;\"> {{ $store.state.Web3.utils.fromWei(NFTPrice, 'ether') }} </span>ETH\n              </div>\n            </div>\n          </div>\n          <div class=\"select\">\n            <div class=\"sumbitBox\">\n              <el-button\n                @click=\"CloseMessageBox(1)\"\n                class=\"createButton\"\n                type=\"primary\"\n                plain\n              >\n                ÂèñÊ∂à\n              </el-button>\n              <el-button\n                @click=\"Buy\"\n                class=\"createButton\"\n                type=\"success\"\n                plain\n              >\n                Ë¥≠‰π∞\n              </el-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\n  import { getSaleListByContractAddress } from \"@/api/axios/Sale\";\n  import { getNFTStruct, Buy } from \"@/api/axios/contract\";\n  export default {\n    name: \"NFTInf\",\n    data() {\n      return {\n        NFTInf: null,\n        NFTMetaData: null,\n        NFTContract: null,\n        NFTContractAddress: null,\n        NFTSaleId: 0,\n        NFTTokenId: 0,\n        NFTPrice: 0,\n        NFTSeller: \"\",\n        NFTIsActive: false,\n        NFTImage: \"#\",\n        NFTName: \"\",\n\n        supplyer: \"\",\n        symbol: null,\n        NFTSeries: \"\",\n        description: \"\",\n        maxmums: 0,\n        currentId: 0,\n        activeTab: \"first\",\n        seriesNFTArrays: [],\n        sale: {},\n        bought: false,\n\n        MessageShow: false,\n        changeNFT: {},\n        opt: 0,\n        isChanging:false\n      };\n    },\n    watch: {},\n    mounted() {\n      this.init();\n    },\n    methods: {\n      async init() {\n        try {\n          this.NFTInf = this.$store.state.marketNFTInf;\n          console.log(this.NFTInf);\n          this.NFTImage = JSON.parse(this.NFTInf.tokenURI).image;\n          this.NFTContractAddress = this.NFTInf.nftContract;\n          this.NFTSaleId = this.NFTInf.saleId;\n          this.NFTSeller = this.NFTInf.seller;\n          this.NFTTokenId = this.NFTInf.tokenId;\n          this.NFTPrice = this.NFTInf.price;\n          this.NFTName = JSON.parse(this.NFTInf.tokenURI).name;\n          this.NFTIsActive = this.NFTInf.isActive;\n          this.supplyer = `${this.NFTInf.seller.slice(\n            0,\n            5\n          )}...${this.NFTInf.seller.slice(37)}`;\n          this.description = this.NFTInf.description\n          this.NFTSeries = this.NFTInf.seriesName;\n          this.maxmums = this.NFTInf.maxmums;\n          this.symbol = this.NFTInf.symbol\n          await this.getThisSeriesNFT();\n          await getNFTStruct(this.NFTContractAddress).then((re) => {\n            this.NFTContract = re;\n          });\n          await this.NFTContract.methods\n            ._currentId()\n            .call()\n            .then((re) => {\n              this.currentId = re;\n            });\n            await this.NFTContract.methods\n            .symbol()\n            .call()\n            .then((re) => {\n              this.symbol = re;\n            });\n            await this.NFTContract.methods\n            .name()\n            .call()\n            .then((re) => {\n              this.NFTSeries = re;\n            });\n            await this.NFTContract.methods\n            ._maximums()\n            .call()\n            .then((re) => {\n              this.maxmums = re;\n            });\n          this.makeSale();\n        } catch (error) {\n          console.log(error);\n        }\n      },\n      OpenMessageBox(NFT) {\n        this.changeNFT = NFT;\n        this.MessageShow = true;\n      },\n      CloseMessageBox(opt) {\n        this.MessageShow = false;\n        this.changeNFT = {};\n        if (opt == 1) {\n          this.$notify({\n            title: `ÊÇ®Â∑≤ÂèñÊ∂àË¥≠‰π∞`,\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200,\n          });\n        }\n      },\n      makeSale() {\n        this.sale = {\n          isActive: true,\n          nftAddress: this.NFTContractAddress,\n          price: this.$store.state.Web3.utils.fromWei(this.NFTPrice, \"ether\"),\n          saleId: Number(this.NFTSaleId),\n          ownerAddress: this.NFTSeller,\n          tokenId: Number(this.NFTTokenId),\n        };\n      },\n      async getThisSeriesNFT() {\n        var NFTDto = {\n          nftAddress: this.NFTContractAddress,\n        };\n        await getSaleListByContractAddress(NFTDto).then((re) => {\n          this.seriesNFTArrays = re.data.data;\n          console.log(re);\n        });\n      },\n      async Buy() {\n        try {\n          this.changeNFT.symbol = this.symbol;\n          this.changeNFT.image = this.NFTImage;\n          let isSuccess=false\n          this.isChanging =true\n          await Buy(this.changeNFT).then(re =>{isSuccess = re} )\n          if (isSuccess) {\n            this.isChanging =false\n            this.$notify({\n              title: \"üíñ ÊÑüË∞¢Ë¥≠‰π∞\",\n              type: \"success\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            this.bought = true;\n            this.CloseMessageBox(2);\n          } else {\n            this.isChanging = false\n            this.$notify({\n              title: \"ÊÇ®Â∑≤ÂèñÊ∂àË¥≠‰π∞\",\n              type: \"warning\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            this.CloseMessageBox(2);\n          }\n        } catch (error) {\n          this.isChanging =false\n          this.$notify.error({\n            title: \"Ë¥≠‰π∞Â§±Ë¥•\",\n            position: \"top-left\",\n            offset: 200,\n          });\n        }\n      },\n      toMarketMain() {\n        this.$router.push(\"/\");\n        this.$store.commit(\"setIsSearch\", false);\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n.NFTInfMainBox {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  .NFTInfMain {\n    font-family: Arial, Helvetica, sans-serif;\n    min-width: min-content;\n    width: 95%;\n    height: 100%;\n    overflow: auto;\n    .NFTInfBackground {\n      width: 100%;\n      height: 270px;\n      background-image: url(\"@/assets/webAssets/logoGreen.png\");\n      background-size: contain;\n      text-align: left;\n      position: relative;\n      .toMarketmain {\n        position: absolute;\n        top: 5%;\n        left: 1%;\n        margin-top: 20px;\n        color: white;\n        cursor: pointer;\n      }\n    }\n    .NFTInfContextBox {\n      width: 100%;\n      display: flex;\n      fled\n      color: var(--Dark--);\n      .selectBox {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        height: fit-content;\n        padding-top: 2%;\n        background-color: var(--White--);\n\n        /deep/ .selectBox-Button {\n          width: 95%;\n          .SeriesNFT {\n            height: 100%;\n            text-align: center;\n            width: 100%;\n            font-family: Arial, Helvetica, sans-serif;\n            .NFTInf {\n              margin: 2%;\n              background-color: white;\n              border-radius: 30px;\n              width: 325px;\n              height: 400px;\n              display: inline-block;\n              overflow: hidden;\n              margin-bottom: 10%;\n              box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px,\n                rgba(14, 30, 37, 0.32) 0px 2px 16px 0px;\n            }\n            .imageBox {\n              width: 100%;\n              height: 63%;\n              border-radius: 30px;\n\n              z-index: 1;\n              overflow: hidden;\n            }\n            .NFTImage {\n              object-fit: contain;\n              height: 100%;\n              width: 100%;\n              transition: all 0.6s;\n              cursor: pointer;\n\n              overflow: hidden;\n              &:hover {\n                transform: scale(1.1);\n\n                transition: all 0.6s;\n              }\n            }\n            .NFTName {\n              display: inline-block;\n              color: black;\n              font-weight: 800;\n              text-align: left;\n              margin-top: 20px;\n              font-size: 25px;\n            }\n            .ownerAndToSell {\n              width: 100%;\n              display: flex;\n              margin-top: 18px;\n              justify-content: space-evenly;\n              align-items: center;\n            }\n            .ToSellBox {\n              font-size: 1.3vw;\n              width: 100px;\n              padding: 15px 0px 15px 0px;\n              border-radius: 10px;\n              transition: all 0.3s ease-in-out;\n              background-color: rgba(85, 201, 96, 0.12);\n              color: #55c960;\n            }\n\n            .ToSellinnerBox {\n              margin: 2%;\n              width: 82.79px;\n              padding: 8px 0px 8px 0px;\n              color: #55c960;\n              background-color: rgba(85, 201, 96, 0.12);\n              border-radius: 10px;\n              cursor: pointer;\n              transition: all 0.3s ease-in-out;\n              &:hover {\n                background-color: rgba(85, 201, 96, 0.24);\n                transition: all 0.3s ease-in-out;\n              }\n            }\n            .downSale {\n              @extend .ToSellinnerBox;\n              background-color: #d63131e5;\n              color: white;\n              &:hover {\n                background-color: rgb(255, 0, 0);\n                transition: all 0.3s ease-in-out;\n              }\n            }\n            .apporve {\n              font-size: 12px;\n              font-weight: 800;\n            }\n            .ToSellHeader {\n              display: flex;\n              justify-content: space-between;\n              width: 95%;\n              height: 10%;\n              font-size: 25px;\n              margin-top: 3%;\n              border-radius: 30px;\n              padding: 3.5% 0;\n              font-weight: 800;\n              color: var(--Dark--);\n            }\n            .ToSellHeaderBox {\n              width: 100%;\n              text-align: center;\n              display: flex;\n              justify-content: center;\n              align-items: center;\n            }\n          }\n          .el-tabs__nav {\n            height: 60px;\n          }\n          .el-tabs {\n            color: #000;\n            border-radius: 20px;\n            left: 0px;\n            top: 0px;\n            position: relative;\n          }\n          /* ÂéªÈô§ÁÅ∞Ëâ≤Ê®™Êù° */\n          .el-tabs__nav-wrap::after {\n            position: static !important;\n          }\n          /* ËÆæÁΩÆÊªëÂùóÈ¢úËâ≤ */\n          .el-tabs__active-bar {\n            background-color: var(--Dark--);\n            border: 1px solid white;\n          }\n          /* ËÆæÁΩÆÊªëÂùóÂÅúÊ≠¢‰ΩçÁΩÆ */\n          .el-tabs__active-bar.is-top {\n            height: 100%;\n            width: 104px !important;\n            border-radius: 17px;\n            top: 0px !important;\n            left: -15px !important;\n            position: absolute !important;\n            z-index: 1;\n          }\n          /* ËÆæÁΩÆÂΩìÂâçÈÄâ‰∏≠Ê†∑Âºè */\n          .el-tabs__item.is-active {\n            background-color: transparent;\n            color: var(--White--) !important;\n\n            z-index: 2;\n          }\n          /* ËÆæÁΩÆÊú™Ë¢´ÈÄâ‰∏≠Ê†∑Âºè */\n          .el-tabs__item {\n            padding: 10px 20px !important;\n            width: auto;\n            font-size: 18px;\n            font-weight: 800;\n            box-sizing: border-box;\n            display: inline-block;\n            position: relative !important;\n            color: var(--Dark--) !important;\n            z-index: 2;\n          }\n\n          .selectBox-Active {\n            border: none;\n            font-size: 1vw;\n            border-radius: 20px;\n            transition: all 0.3s ease-in-out;\n            font-weight: 800;\n            border: none;\n            background-color: rgb(246, 246, 246);\n            &:hover {\n              background-color: rgb(246, 246, 246);\n              transition: all 0.3s ease-in-out;\n              color: white;\n            }\n          }\n          .selectBox-NOActive {\n            @extend .selectBox-Active;\n          }\n          .el-tabs__content {\n            height: 100%;\n            background-color: var(--White--);\n          }\n        }\n      }\n      .NFTInfBox {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        height:auto;\n        background-color: var(--White--);\n        .AvatarBox {\n          width: 90%;\n          height: 100%;\n\n          position: relative;\n          .Inf {\n            line-height: 35px;\n            position: absolute;\n            left: 5%;\n            top: 25%;\n            height: 30%;\n            .NFTName {\n              width: 100%;\n              height: auto;\n              font-weight: 800;\n              text-align: left;\n              font-size: 2vw;\n            }\n            .NFTContract {\n              margin-top: 4%;\n            }\n            .NFTSupplyer {\n              text-align: left;\n              font-size: 1.1vw;\n            }\n            .NFTInf {\n              float: left;\n              .NFTCounts {\n                margin-top: 2%;\n                text-align: left;\n                font-size: 1.1vw;\n                span {\n                  margin-left: 5px;\n                  margin-right: 10px;\n                }\n              }\n              .NFTdescription {\n                text-align: left;\n                margin-top: 1.5%;\n                font-size: 1vw;\n              }\n            }\n          }\n          .AvatarBorder {\n            border: 4px solid white;\n            width: 10vw;\n            height: 10vw;\n            max-height: 20vw;\n            position: absolute;\n            left: 5%;\n            top: -9vw;\n            border-radius: 16px;\n            overflow: hidden;\n            box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 5px 0px,\n              rgba(0, 0, 0, 0.1) 0px 0px 1px 0px;\n            img {\n              object-fit: contain;\n              min-width: 100%;\n              height: 100%;\n              border-radius: 20px;\n              transition: all 0.6s;\n              &:hover {\n                transform: scale(1.1);\n                transition: all 0.6s;\n              }\n            }\n          }\n        }\n        .Buy {\n          border-radius: 15px;\n          padding: 2% 3% 2% 3%;\n          margin-right: 20%;\n          transition: all 0.3s ease-in-out;\n          font-size: 1.3vw;\n          font-weight: 800;\n          &:hover {\n            transition: all 0.3s ease-in-out;\n          }\n        }\n      }\n      .MoreNFTInfBox {\n        width: 100%;\n        height: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        .seriesNFTBox {\n          background-color: var(--White--);\n          width: 100%;\n          height: 100%;\n        }\n      }\n    }\n  }\n  .MessageMask {\n    z-index: 200;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .Message {\n      transition: all 0.3s ease-in-out;\n      overflow: hidden;\n      width: 90%;\n      height: 70%;\n      border-radius: 30px;\n      background-color: white;\n      display: flex;\n      box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\n        rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\n      .MessageLeft {\n        flex: 1;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding-right: 10%;\n        .imageBox {\n          width: 75%;\n          height: 75%;\n          border-radius: 30px;\n          overflow: hidden;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          background-color: transparent;\n          img {\n            object-fit: contain;\n            width: 100%;\n            height: 100%;\n          }\n        }\n      }\n      .MessageRight {\n        position: relative;\n        flex: 1;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n        /deep/ .select {\n          width: 100%;\n          text-align: left;\n          margin-bottom: 20px;\n          .tipsBox {\n            width: 100%;\n            color: rgb(105, 105, 105);\n            text-align: left;\n            transition: all 0.3s ease-in-out;\n            .tipsTitle2 {\n              margin-top: 2%;\n              margin-bottom: 1%;\n              font-size: 15px;\n              font-weight: 800;\n              color: black;\n              transition: all 0.3s ease-in-out;\n              width: 300px;\n            }\n            .tipsTitle {\n              font-size: 20px;\n              color: black;\n              .tipshelp {\n                color: rgb(105, 105, 105);\n                font-size: 15px;\n              }\n            }\n          }\n          .sumbitBox {\n            text-align: left;\n            margin-top: 3%;\n            .createButton {\n              padding: 20px 35px 18px 35px;\n              font-size: 17px;\n              border-radius: 15px;\n              transition: all 0.3s ease-in-out;\n              font-family: \"Transformers_Movie\";\n            }\n          }\n        }\n        .colseButton {\n          margin-right: 10%;\n        }\n      }\n    }\n  }\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}