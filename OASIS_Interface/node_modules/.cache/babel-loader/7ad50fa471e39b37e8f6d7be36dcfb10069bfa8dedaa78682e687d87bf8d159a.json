{"ast":null,"code":"'use strict';\n\nconst intervals = new Map();\nconst _generateId = () => `${Date.now()}:${Math.floor(Math.random() * 1000000)}`;\n\n/**\n * Run a given task each {interval} ms\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {string} id\n */\nasync function _runPeriodically(task, interval, id) {\n  while (intervals.get(id)) {\n    try {\n      await task();\n    } catch (err) {\n      // Throw global context error if handler throws\n      setTimeout(() => {\n        throw err;\n      }, 1);\n      break;\n    }\n    if (!intervals.get(id)) {\n      break;\n    }\n    await new Promise(resolve => {\n      const _timeout = setTimeout(resolve, interval);\n      intervals.set(id, _timeout);\n    });\n  }\n}\n\n/**\n * Asynchronous setInterval that is properly delayed using promises and can be delayed on boot.\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {number} [delay = interval]\n * @returns {string}\n */\nfunction setDelayedInterval(task, interval, delay) {\n  delay = delay || interval;\n  const id = _generateId();\n  const _timeout = setTimeout(() => {\n    _runPeriodically(task, interval, id);\n  }, delay);\n  intervals.set(id, _timeout);\n  return id;\n}\n\n/**\n * Clear delayed interval.\n *\n * @param {string} id\n */\nfunction clearDelayedInterval(id) {\n  const _timeout = intervals.get(id);\n  if (_timeout) {\n    clearTimeout(_timeout);\n    intervals.delete(id);\n  }\n}\nmodule.exports = {\n  setDelayedInterval,\n  clearDelayedInterval\n};","map":{"version":3,"names":["intervals","Map","_generateId","Date","now","Math","floor","random","_runPeriodically","task","interval","id","get","err","setTimeout","Promise","resolve","_timeout","set","setDelayedInterval","delay","clearDelayedInterval","clearTimeout","delete","module","exports"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/set-delayed-interval@1.0.0/node_modules/set-delayed-interval/src/index.js"],"sourcesContent":["'use strict'\n\nconst intervals = new Map()\n\nconst _generateId = () => `${Date.now()}:${Math.floor(Math.random() * 1000000)}`\n\n/**\n * Run a given task each {interval} ms\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {string} id\n */\nasync function _runPeriodically (task, interval, id) {\n  while (intervals.get(id)) {\n    try {\n      await task()\n    } catch (err) {\n      // Throw global context error if handler throws\n      setTimeout(() => { throw err }, 1)\n      break\n    }\n\n    if (!intervals.get(id)) {\n      break\n    }\n\n    await new Promise(resolve => {\n      const _timeout = setTimeout(resolve, interval)\n\n      intervals.set(id, _timeout)\n    })\n  }\n}\n\n/**\n * Asynchronous setInterval that is properly delayed using promises and can be delayed on boot.\n *\n * @param {() => Promise} task\n * @param {number} interval\n * @param {number} [delay = interval]\n * @returns {string}\n */\nfunction setDelayedInterval (task, interval, delay) {\n  delay = delay || interval\n\n  const id = _generateId()\n  const _timeout = setTimeout(() => {\n    _runPeriodically(task, interval, id)\n  }, delay)\n\n  intervals.set(id, _timeout)\n\n  return id\n}\n\n/**\n * Clear delayed interval.\n *\n * @param {string} id\n */\nfunction clearDelayedInterval (id) {\n  const _timeout = intervals.get(id)\n\n  if (_timeout) {\n    clearTimeout(_timeout)\n    intervals.delete(id)\n  }\n}\n\nmodule.exports = {\n  setDelayedInterval,\n  clearDelayedInterval\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAO,GAAEC,IAAI,CAACC,GAAG,CAAC,CAAE,IAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,OAAO,CAAE,EAAC;;AAEhF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeC,gBAAgBA,CAAEC,IAAI,EAAEC,QAAQ,EAAEC,EAAE,EAAE;EACnD,OAAOX,SAAS,CAACY,GAAG,CAACD,EAAE,CAAC,EAAE;IACxB,IAAI;MACF,MAAMF,IAAI,CAAC,CAAC;IACd,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZ;MACAC,UAAU,CAAC,MAAM;QAAE,MAAMD,GAAG;MAAC,CAAC,EAAE,CAAC,CAAC;MAClC;IACF;IAEA,IAAI,CAACb,SAAS,CAACY,GAAG,CAACD,EAAE,CAAC,EAAE;MACtB;IACF;IAEA,MAAM,IAAII,OAAO,CAACC,OAAO,IAAI;MAC3B,MAAMC,QAAQ,GAAGH,UAAU,CAACE,OAAO,EAAEN,QAAQ,CAAC;MAE9CV,SAAS,CAACkB,GAAG,CAACP,EAAE,EAAEM,QAAQ,CAAC;IAC7B,CAAC,CAAC;EACJ;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,kBAAkBA,CAAEV,IAAI,EAAEC,QAAQ,EAAEU,KAAK,EAAE;EAClDA,KAAK,GAAGA,KAAK,IAAIV,QAAQ;EAEzB,MAAMC,EAAE,GAAGT,WAAW,CAAC,CAAC;EACxB,MAAMe,QAAQ,GAAGH,UAAU,CAAC,MAAM;IAChCN,gBAAgB,CAACC,IAAI,EAAEC,QAAQ,EAAEC,EAAE,CAAC;EACtC,CAAC,EAAES,KAAK,CAAC;EAETpB,SAAS,CAACkB,GAAG,CAACP,EAAE,EAAEM,QAAQ,CAAC;EAE3B,OAAON,EAAE;AACX;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASU,oBAAoBA,CAAEV,EAAE,EAAE;EACjC,MAAMM,QAAQ,GAAGjB,SAAS,CAACY,GAAG,CAACD,EAAE,CAAC;EAElC,IAAIM,QAAQ,EAAE;IACZK,YAAY,CAACL,QAAQ,CAAC;IACtBjB,SAAS,CAACuB,MAAM,CAACZ,EAAE,CAAC;EACtB;AACF;AAEAa,MAAM,CAACC,OAAO,GAAG;EACfN,kBAAkB;EAClBE;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}