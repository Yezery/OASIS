{"ast":null,"code":"import { LongBits } from 'longbits';\nimport { allocUnsafe } from 'uint8arrays/alloc';\nconst N1 = Math.pow(2, 7);\nconst N2 = Math.pow(2, 14);\nconst N3 = Math.pow(2, 21);\nconst N4 = Math.pow(2, 28);\nconst N5 = Math.pow(2, 35);\nconst N6 = Math.pow(2, 42);\nconst N7 = Math.pow(2, 49);\nconst N8 = Math.pow(2, 56);\nconst N9 = Math.pow(2, 63);\nexport const unsigned = {\n  encodingLength(value) {\n    if (value < N1) {\n      return 1;\n    }\n    if (value < N2) {\n      return 2;\n    }\n    if (value < N3) {\n      return 3;\n    }\n    if (value < N4) {\n      return 4;\n    }\n    if (value < N5) {\n      return 5;\n    }\n    if (value < N6) {\n      return 6;\n    }\n    if (value < N7) {\n      return 7;\n    }\n    if (value < N8) {\n      return 8;\n    }\n    if (value < N9) {\n      return 9;\n    }\n    return 10;\n  },\n  encode(value, buf, offset = 0) {\n    if (Number.MAX_SAFE_INTEGER != null && value > Number.MAX_SAFE_INTEGER) {\n      throw new RangeError('Could not encode varint');\n    }\n    if (buf == null) {\n      buf = allocUnsafe(unsigned.encodingLength(value));\n    }\n    LongBits.fromNumber(value).toBytes(buf, offset);\n    return buf;\n  },\n  decode(buf, offset = 0) {\n    return LongBits.fromBytes(buf, offset).toNumber(true);\n  }\n};\nexport const signed = {\n  encodingLength(value) {\n    if (value < 0) {\n      return 10; // 10 bytes per spec - https://developers.google.com/protocol-buffers/docs/encoding#signed-ints\n    }\n\n    return unsigned.encodingLength(value);\n  },\n  encode(value, buf, offset) {\n    if (buf == null) {\n      buf = allocUnsafe(signed.encodingLength(value));\n    }\n    if (value < 0) {\n      LongBits.fromNumber(value).toBytes(buf, offset);\n      return buf;\n    }\n    return unsigned.encode(value, buf, offset);\n  },\n  decode(buf, offset = 0) {\n    return LongBits.fromBytes(buf, offset).toNumber(false);\n  }\n};\nexport const zigzag = {\n  encodingLength(value) {\n    return unsigned.encodingLength(value >= 0 ? value * 2 : value * -2 - 1);\n  },\n  // @ts-expect-error types are wrong\n  encode(value, buf, offset) {\n    value = value >= 0 ? value * 2 : value * -2 - 1;\n    return unsigned.encode(value, buf, offset);\n  },\n  decode(buf, offset = 0) {\n    const value = unsigned.decode(buf, offset);\n    return (value & 1) !== 0 ? (value + 1) / -2 : value / 2;\n  }\n};","map":{"version":3,"names":["LongBits","allocUnsafe","N1","Math","pow","N2","N3","N4","N5","N6","N7","N8","N9","unsigned","encodingLength","value","encode","buf","offset","Number","MAX_SAFE_INTEGER","RangeError","fromNumber","toBytes","decode","fromBytes","toNumber","signed","zigzag"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}