{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport function computeScoreWeights(peer, pstats, params, peerIPs, topicStrToLabel) {\n  let score = 0;\n  const byTopic = new Map();\n  // topic stores\n  Object.entries(pstats.topics).forEach(([topic, tstats]) => {\n    // the topic parameters\n    // Aggregate by known topicLabel or throw to 'unknown'. This prevent too high cardinality\n    const topicLabel = topicStrToLabel.get(topic) ?? 'unknown';\n    const topicParams = params.topics[topic];\n    if (topicParams === undefined) {\n      // we are not scoring this topic\n      return;\n    }\n    let topicScores = byTopic.get(topicLabel);\n    if (!topicScores) {\n      topicScores = {\n        p1w: 0,\n        p2w: 0,\n        p3w: 0,\n        p3bw: 0,\n        p4w: 0\n      };\n      byTopic.set(topicLabel, topicScores);\n    }\n    let p1w = 0;\n    let p2w = 0;\n    let p3w = 0;\n    let p3bw = 0;\n    let p4w = 0;\n    // P1: time in Mesh\n    if (tstats.inMesh) {\n      const p1 = Math.max(tstats.meshTime / topicParams.timeInMeshQuantum, topicParams.timeInMeshCap);\n      p1w += p1 * topicParams.timeInMeshWeight;\n    }\n    // P2: first message deliveries\n    let p2 = tstats.firstMessageDeliveries;\n    if (p2 > topicParams.firstMessageDeliveriesCap) {\n      p2 = topicParams.firstMessageDeliveriesCap;\n    }\n    p2w += p2 * topicParams.firstMessageDeliveriesWeight;\n    // P3: mesh message deliveries\n    if (tstats.meshMessageDeliveriesActive && tstats.meshMessageDeliveries < topicParams.meshMessageDeliveriesThreshold) {\n      const deficit = topicParams.meshMessageDeliveriesThreshold - tstats.meshMessageDeliveries;\n      const p3 = deficit * deficit;\n      p3w += p3 * topicParams.meshMessageDeliveriesWeight;\n    }\n    // P3b:\n    // NOTE: the weight of P3b is negative (validated in validateTopicScoreParams) so this detracts\n    const p3b = tstats.meshFailurePenalty;\n    p3bw += p3b * topicParams.meshFailurePenaltyWeight;\n    // P4: invalid messages\n    // NOTE: the weight of P4 is negative (validated in validateTopicScoreParams) so this detracts\n    const p4 = tstats.invalidMessageDeliveries * tstats.invalidMessageDeliveries;\n    p4w += p4 * topicParams.invalidMessageDeliveriesWeight;\n    // update score, mixing with topic weight\n    score += (p1w + p2w + p3w + p3bw + p4w) * topicParams.topicWeight;\n    topicScores.p1w += p1w;\n    topicScores.p2w += p2w;\n    topicScores.p3w += p3w;\n    topicScores.p3bw += p3bw;\n    topicScores.p4w += p4w;\n  });\n  // apply the topic score cap, if any\n  if (params.topicScoreCap > 0 && score > params.topicScoreCap) {\n    score = params.topicScoreCap;\n    // Proportionally apply cap to all individual contributions\n    const capF = params.topicScoreCap / score;\n    for (const ws of byTopic.values()) {\n      ws.p1w *= capF;\n      ws.p2w *= capF;\n      ws.p3w *= capF;\n      ws.p3bw *= capF;\n      ws.p4w *= capF;\n    }\n  }\n  let p5w = 0;\n  let p6w = 0;\n  let p7w = 0;\n  // P5: application-specific score\n  const p5 = params.appSpecificScore(peer);\n  p5w += p5 * params.appSpecificWeight;\n  // P6: IP colocation factor\n  pstats.knownIPs.forEach(ip => {\n    if (params.IPColocationFactorWhitelist.has(ip)) {\n      return;\n    }\n    // P6 has a cliff (IPColocationFactorThreshold)\n    // It's only applied if at least that many peers are connected to us from that source IP addr.\n    // It is quadratic, and the weight is negative (validated in validatePeerScoreParams)\n    const peersInIP = peerIPs.get(ip);\n    const numPeersInIP = peersInIP ? peersInIP.size : 0;\n    if (numPeersInIP > params.IPColocationFactorThreshold) {\n      const surplus = numPeersInIP - params.IPColocationFactorThreshold;\n      const p6 = surplus * surplus;\n      p6w += p6 * params.IPColocationFactorWeight;\n    }\n  });\n  // P7: behavioural pattern penalty\n  const p7 = pstats.behaviourPenalty * pstats.behaviourPenalty;\n  p7w += p7 * params.behaviourPenaltyWeight;\n  score += p5w + p6w + p7w;\n  return {\n    byTopic,\n    p5w,\n    p6w,\n    p7w,\n    score\n  };\n}\nexport function computeAllPeersScoreWeights(peerIdStrs, peerStats, params, peerIPs, topicStrToLabel) {\n  const sw = {\n    byTopic: new Map(),\n    p5w: [],\n    p6w: [],\n    p7w: [],\n    score: []\n  };\n  for (const peerIdStr of peerIdStrs) {\n    const pstats = peerStats.get(peerIdStr);\n    if (pstats) {\n      const swPeer = computeScoreWeights(peerIdStr, pstats, params, peerIPs, topicStrToLabel);\n      for (const [topic, swPeerTopic] of swPeer.byTopic) {\n        let swTopic = sw.byTopic.get(topic);\n        if (!swTopic) {\n          swTopic = {\n            p1w: [],\n            p2w: [],\n            p3w: [],\n            p3bw: [],\n            p4w: []\n          };\n          sw.byTopic.set(topic, swTopic);\n        }\n        swTopic.p1w.push(swPeerTopic.p1w);\n        swTopic.p2w.push(swPeerTopic.p2w);\n        swTopic.p3w.push(swPeerTopic.p3w);\n        swTopic.p3bw.push(swPeerTopic.p3bw);\n        swTopic.p4w.push(swPeerTopic.p4w);\n      }\n      sw.p5w.push(swPeer.p5w);\n      sw.p6w.push(swPeer.p6w);\n      sw.p7w.push(swPeer.p7w);\n      sw.score.push(swPeer.score);\n    } else {\n      sw.p5w.push(0);\n      sw.p6w.push(0);\n      sw.p7w.push(0);\n      sw.score.push(0);\n    }\n  }\n  return sw;\n}","map":{"version":3,"names":["computeScoreWeights","peer","pstats","params","peerIPs","topicStrToLabel","score","byTopic","Map","Object","entries","topics","forEach","topic","tstats","topicLabel","get","topicParams","undefined","topicScores","p1w","p2w","p3w","p3bw","p4w","set","inMesh","p1","Math","max","meshTime","timeInMeshQuantum","timeInMeshCap","timeInMeshWeight","p2","firstMessageDeliveries","firstMessageDeliveriesCap","firstMessageDeliveriesWeight","meshMessageDeliveriesActive","meshMessageDeliveries","meshMessageDeliveriesThreshold","deficit","p3","meshMessageDeliveriesWeight","p3b","meshFailurePenalty","meshFailurePenaltyWeight","p4","invalidMessageDeliveries","invalidMessageDeliveriesWeight","topicWeight","topicScoreCap","capF","ws","values","p5w","p6w","p7w","p5","appSpecificScore","appSpecificWeight","knownIPs","ip","IPColocationFactorWhitelist","has","peersInIP","numPeersInIP","size","IPColocationFactorThreshold","surplus","p6","IPColocationFactorWeight","p7","behaviourPenalty","behaviourPenaltyWeight","computeAllPeersScoreWeights","peerIdStrs","peerStats","sw","peerIdStr","swPeer","swPeerTopic","swTopic","push"],"sources":["../../../src/score/scoreMetrics.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}