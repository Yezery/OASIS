{"ast":null,"code":"import { process } from \"@/utils/nsfwjs\";\nimport { MakeNFT } from \"@/api/axios/contract\";\nexport default {\n  data() {\n    return {\n      imageUrl: \"\",\n      fileList: [],\n      dialogImageUrl: \"\",\n      dialogVisible: false,\n      disabled: false,\n      Name: \"\",\n      Symbol: \"\",\n      FirstNFTName: \"\",\n      Description: \"\",\n      Maxmums: 1,\n      active: 1,\n      sumitEnable: true,\n      isRepeatClick: true,\n      isProcess: false,\n      processLoading: false,\n      noProcess: false,\n      isChanging: false,\n      isUpload: false\n    };\n  },\n  mounted() {},\n  computed: {\n    canSubmit() {\n      if (this.Name == \"\" || this.Symbol == \"\" || this.$refs.pictureUpload.uploadFiles.length == 0 || this.FirstNFTName == \"\" || !this.isProcess || this.Description == \"3D\" || this.$refs.pictureUpload.uploadFiles[0].size / 1024 / 1024 > 50) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n  watch: {\n    Description(newData) {\n      if (newData == \"3D\") {\n        this.$notify({\n          title: \"不能为关键字\",\n          type: \"warning\",\n          position: \"top-left\",\n          offset: 200\n        });\n        this.Description = \"\";\n      }\n    }\n  },\n  methods: {\n    async setPicture() {\n      this.isUpload = true;\n      this.processLoading = true;\n      let prix = this.getFileExtendingName(this.$refs.pictureUpload.uploadFiles[0].raw.name);\n      if (prix == \".jepg\" || prix == \".png\" || prix == \".jpg\") {\n        setTimeout(async () => {\n          try {\n            await process(this.$refs.realPicture).then(re => {\n              this.processLoading = false;\n              if (re[0].className == \"Neutral\" || re[0].className == \"Drawing\") {\n                this.isProcess = true;\n              } else {\n                this.handleRemove();\n                this.isProcess = false;\n                this.noProcess = true;\n                this.isUpload = false;\n              }\n            });\n          } catch (error) {\n            this.$notify.error({\n              title: \"系统异常\",\n              position: \"top-left\",\n              offset: 200\n            });\n            this.isProcess = false;\n            this.processLoading = false;\n            this.noProcess = false;\n            console.error(error);\n          }\n        }, 100);\n      } else {\n        if (this.$refs.pictureUpload.uploadFiles[0].size / 1024 / 1024 > 50) {\n          this.$notify.error({\n            title: `图片超出大小 ${this.$refs.pictureUpload.uploadFiles[0].size / 1024 / 1024 - 50}`,\n            position: \"top-left\",\n            offset: 200\n          });\n          this.isProcess = false;\n          this.processLoading = false;\n          this.noProcess = false;\n          this.handleRemove();\n          return;\n        }\n        if (prix == \".gif\") {\n          this.isProcess = true;\n          this.processLoading = false;\n          this.noProcess = false;\n        } else {\n          this.$notify.error({\n            title: \"不支持格式\",\n            position: \"top-left\",\n            offset: 200\n          });\n          this.isProcess = false;\n          this.processLoading = false;\n          this.noProcess = false;\n          this.handleRemove();\n        }\n      }\n    },\n    getFileExtendingName(filename) {\n      // 文件扩展名匹配正则\n      var reg = /.[^.]+$/;\n      var matches = reg.exec(filename);\n      if (matches) {\n        return matches[0];\n      }\n      return \"\";\n    },\n    async createNFT() {\n      if (this.isRepeatClick) {\n        this.isRepeatClick = false;\n        try {\n          this.isChanging = true;\n          await MakeNFT(this.Name, this.Symbol, this.$refs.pictureUpload.uploadFiles, this.Maxmums, this.FirstNFTName, this.Description);\n          this.isChanging = false;\n          this.$notify({\n            title: \"创造成功\",\n            type: \"success\",\n            position: \"top-left\",\n            offset: 200\n          });\n          this.fileList = [];\n          this.Name = \"\";\n          this.Symbol = \"\";\n          this.Maxmums = 1;\n          this.FirstNFTName = \"\";\n          this.Description = \"\";\n        } catch (error) {\n          this.isChanging = false;\n          this.$notify.error({\n            title: \"创造失败\",\n            position: \"top-left\",\n            offset: 200\n          });\n          return;\n        }\n      } else {\n        this.$notify({\n          title: \"请勿操作频繁\",\n          type: \"warning\",\n          position: \"top-left\",\n          offset: 200\n        });\n      }\n      setTimeout(() => {\n        this.isRepeatClick = true;\n      }, 5000);\n    },\n    handleRemove() {\n      // let uploadFiles = this.$refs.pictureUpload.uploadFiles;\n      // for (var i = 0; i < uploadFiles.length; i++) {\n      //   if (uploadFiles[i][\"url\"] == file.url) {\n      //     uploadFiles.splice(i, 1);\n      //   }\n      // }\n      console.log();\n      this.$refs.pictureUpload.clearFiles();\n      this.isProcess = false;\n      this.noProcess = false;\n    }\n  }\n};","map":{"version":3,"names":["process","MakeNFT","data","imageUrl","fileList","dialogImageUrl","dialogVisible","disabled","Name","Symbol","FirstNFTName","Description","Maxmums","active","sumitEnable","isRepeatClick","isProcess","processLoading","noProcess","isChanging","isUpload","mounted","computed","canSubmit","$refs","pictureUpload","uploadFiles","length","size","watch","newData","$notify","title","type","position","offset","methods","setPicture","prix","getFileExtendingName","raw","name","setTimeout","realPicture","then","re","className","handleRemove","error","console","filename","reg","matches","exec","createNFT","log","clearFiles"],"sources":["src/views/main/mint/mintNFT.vue"],"sourcesContent":["<template>\n  <div\n    class=\"MainWindow animate__animated animate__fadeInRight\"\n    v-loading.fullscreen.lock=\"isChanging\"\n    element-loading-text=\"交易进行中\"\n    element-loading-spinner=\"el-icon-loading\"\n    element-loading-background=\"rgba(0, 0, 0, 0.8)\"\n  >\n    <div class=\"mintNFTFrame \">\n      <div class=\"mintNFTFrameTop\">\n        <div class=\"mintTitle\">\n          Create an NFT\n        </div>\n        <div class=\"mintNFTFrameTop_tipsBox\">\n          铸造NFT\n        </div>\n      </div>\n      <div class=\"mintNFTFrameMain\">\n        <div class=\"mintNFTFrameMain_left\">\n          <div style=\"text-align: left;margin-bottom: 2%;\">\n            <span\n              style=\"color: var(--Dark--);font-weight: 800;font-size: 1vw;\"\n              v-if=\"processLoading\"\n            ><i class=\"el-icon-loading\" />审核中...</span>\n            <span\n              style=\"color: rgb(1, 169, 1);font-weight: 800;font-size: 1vw;\"\n              v-if=\"isProcess&&!processLoading\"\n            ><i class=\"el-icon-success\" /> 图片合规</span>\n            <span\n              style=\"color: red;font-weight: 800;font-size: 1vw;\"\n              v-else-if=\"!isProcess&&!processLoading&&noProcess\"\n            ><i class=\"el-icon-error\" /> 图片不合规</span>\n          </div>\n          <div class=\"imageUpLoad\">\n            <el-upload\n              action=\"#\"\n              list-type=\"picture-card\"\n              ref=\"pictureUpload\"\n              :file-list=\"fileList\"\n              :on-change=\"setPicture\"\n              :auto-upload=\"false\"\n            >\n             <div class=\"innerBox\" v-if=\"!isProcess\">\n              <i\n              \n                class=\"el-icon-upload2\"\n                style=\"\n              font-size: 3vw;\n              color: var(--Dark--);\n              transition: all 0.3s ease-in-out;\n              margin-bottom:15px;\n            \"\n              />\n              <div style=\"color: var(--Dark--);font-weight: 800;font-size: 1.2vw;\">\n                将文件拖到此处，或</div>\n                <div style=\"color: #2081E2;font-weight: 800;font-size: 1.2vw;\">\n                点击浏览文件上传</div>\n                <div style=\"color: #B3B3B3;font-weight: 300;font-size: 1vw;\">\n                Max size: 50MB</div>\n               <div style=\"color: #B3B3B3;font-weight: 300;font-size: 1vw;\">\n                JPG,PNG,JEPG,GIF</div>\n            </div> \n              <div\n                slot=\"file\"\n                slot-scope=\"{ file }\"\n              >\n                <img\n                  class=\"el-upload-list__item-thumbnail\"\n                  :src=\"file.url\"\n                  alt=\"\"\n                  ref=\"realPicture\"\n                >\n                <span class=\"el-upload-list__item-actions\">\n                  <span\n                    v-if=\"!disabled\"\n                    class=\"el-upload-list__item-delete\"\n                    @click=\"handleRemove(file)\"\n                  >\n                    <i class=\"el-icon-delete\" />\n                  </span>\n                </span>\n              </div>\n            </el-upload>\n          </div>\n        </div>\n        <div class=\"mintNFTFrameMain_right\">\n          <div class=\"selectBox\">\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  Name *\n                </div>\n                <div class=\"tipsTitle2\">\n                  NFT系列名\n                </div>\n              </div>\n              <el-input\n                v-model=\"Name\"\n                placeholder=\"Please enter a series name\"\n              />\n            </div>\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  Symbol *\n                </div>\n                <div class=\"tipsTitle2\">\n                  该系列NFT代币符号 (要求字符长度不超过11个)\n                </div>\n              </div>\n              <el-input\n                v-model=\"Symbol\"\n                placeholder=\"Please enter the token symbol\"\n                maxlength=\"11\"\n              />\n            </div>\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  Genesis NFT Name *\n                </div>\n                <div class=\"tipsTitle2\">\n                  该系列的一号NFT\n                </div>\n              </div>\n              <el-input\n                v-model=\"FirstNFTName\"\n                placeholder=\"Please enter the name of Genesis NFT\"\n              />\n            </div>\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  Description\n                </div>\n                <div class=\"tipsTitle2\">\n                  描述将包含在商品详情页面上图片下方 <span style=\"color: red\">(不能为关键字 '3D' )</span>\n                </div>\n              </div>\n              <el-input\n                type=\"textarea\"\n                v-model=\"Description\"\n                placeholder=\"Please add a description\"\n              />\n            </div>\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  Supply *\n                </div>\n                <div class=\"tipsTitle2\">\n                  可以铸造的物品数量。\n                </div>\n              </div>\n              <div class=\"input_number\">\n                <el-input-number\n                  v-model=\"Maxmums\"\n                  :min=\"1\"\n                />\n              </div>\n            </div>\n            <div class=\"select\">\n              <div class=\"sumbitBox\">\n                <el-button\n                  @click=\"createNFT\"\n                  :disabled=\"!canSubmit\"\n                  class=\"createButton\"\n                >\n                  创造\n                </el-button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { process } from \"@/utils/nsfwjs\";\n  import { MakeNFT } from \"@/api/axios/contract\";\n  export default {\n    data() {\n      return {\n        imageUrl: \"\",\n        fileList: [],\n        dialogImageUrl: \"\",\n        dialogVisible: false,\n        disabled: false,\n        Name: \"\",\n        Symbol: \"\",\n        FirstNFTName: \"\",\n        Description: \"\",\n        Maxmums: 1,\n        active: 1,\n        sumitEnable: true,\n        isRepeatClick: true,\n\n        isProcess: false,\n        processLoading: false,\n        noProcess: false,\n        isChanging: false,\n        isUpload:false\n      };\n    },\n    mounted() {},\n    computed: {\n      canSubmit() {\n        if (\n          this.Name == \"\" ||\n          this.Symbol == \"\" ||\n          this.$refs.pictureUpload.uploadFiles.length == 0 ||\n          this.FirstNFTName == \"\" ||\n          !this.isProcess ||\n          this.Description == \"3D\" ||\n          this.$refs.pictureUpload.uploadFiles[0].size/1024/1024>50\n        ) {\n          return false;\n        } else {\n          return true;\n        }\n      },\n    },\n    watch: {\n      Description(newData) {\n        if (newData == \"3D\") {\n          this.$notify({\n            title: \"不能为关键字\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200,\n          });\n          this.Description = \"\";\n        }\n      },\n    },\n    methods: {\n      async setPicture() {\n        this.isUpload=true\n        this.processLoading = true;\n        let prix = this.getFileExtendingName(\n          this.$refs.pictureUpload.uploadFiles[0].raw.name\n        );\n        if (prix == \".jepg\" || prix == \".png\" || prix == \".jpg\") {\n          setTimeout(async () => {\n            try {\n              await process(this.$refs.realPicture).then((re) => {\n                this.processLoading = false;\n                if (\n                  re[0].className == \"Neutral\" ||\n                  re[0].className == \"Drawing\"\n                ) {\n                  this.isProcess = true;\n                } else {\n                  this.handleRemove();\n                  this.isProcess = false;\n                  this.noProcess = true;\n                  this.isUpload=false\n                  \n                }\n              });\n            } catch (error) {\n              this.$notify.error({\n                title: \"系统异常\",\n                position: \"top-left\",\n                offset: 200,\n              });\n              this.isProcess = false;\n              this.processLoading = false;\n              this.noProcess = false;\n              console.error(error);\n            }\n          }, 100);\n        } else {\n          if (this.$refs.pictureUpload.uploadFiles[0].size/1024/1024>50) {\n            this.$notify.error({\n              title:`图片超出大小 ${this.$refs.pictureUpload.uploadFiles[0].size/1024/1024-50}`,\n              position: \"top-left\",\n              offset: 200,\n            });\n            this.isProcess = false;\n            this.processLoading = false;\n            this.noProcess = false;\n            this.handleRemove();\n            return\n          }\n          if (prix == \".gif\") {\n            this.isProcess = true;\n            this.processLoading = false;\n            this.noProcess = false;\n          } else {\n            this.$notify.error({\n              title: \"不支持格式\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            this.isProcess = false;\n            this.processLoading = false;\n            this.noProcess = false;\n            this.handleRemove();\n          }\n        }\n      },\n      getFileExtendingName(filename) {\n        // 文件扩展名匹配正则\n        var reg = /.[^.]+$/;\n        var matches = reg.exec(filename);\n        if (matches) {\n          return matches[0];\n        }\n        return \"\";\n      },\n      async createNFT() {\n        if (this.isRepeatClick) {\n          this.isRepeatClick = false;\n          try {\n            this.isChanging = true;\n            await MakeNFT(\n              this.Name,\n              this.Symbol,\n              this.$refs.pictureUpload.uploadFiles,\n              this.Maxmums,\n              this.FirstNFTName,\n              this.Description\n            );\n            this.isChanging = false;\n            this.$notify({\n              title: \"创造成功\",\n              type: \"success\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            this.fileList = [];\n            this.Name = \"\";\n            this.Symbol = \"\";\n            this.Maxmums = 1;\n            this.FirstNFTName = \"\";\n            this.Description = \"\";\n          } catch (error) {\n            this.isChanging = false;\n            this.$notify.error({\n              title: \"创造失败\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            return;\n          }\n        } else {\n          this.$notify({\n            title: \"请勿操作频繁\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200,\n          });\n        }\n\n        setTimeout(() => {\n          this.isRepeatClick = true;\n        }, 5000);\n      },\n      handleRemove() {\n        // let uploadFiles = this.$refs.pictureUpload.uploadFiles;\n        // for (var i = 0; i < uploadFiles.length; i++) {\n        //   if (uploadFiles[i][\"url\"] == file.url) {\n        //     uploadFiles.splice(i, 1);\n        //   }\n        // }\n        console.log();\n        this.$refs.pictureUpload.clearFiles();\n        this.isProcess = false;\n        this.noProcess = false;\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n@import  \"@/style/mintPage/mintNFT.scss\";\n\n// .NFTImageSelectBox {\n//   width: 76%;\n//   text-align: left;\n//   height: 100%;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   transition: all 0.3s ease-in-out;\n// }\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}