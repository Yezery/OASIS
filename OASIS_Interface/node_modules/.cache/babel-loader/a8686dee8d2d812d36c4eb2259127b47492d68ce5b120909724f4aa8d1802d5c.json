{"ast":null,"code":"import { postOwnerContractList } from \"@/api/axios/ownerContractLIst\";\nimport { getToken, setMnemonic, checkUserExist, setAuthenticationMetaInformation, forgetMnemonic, resetMnemonic } from \"@/api/axios/user\";\nimport CryptoJS from \"crypto-js\";\nexport default {\n  data() {\n    return {\n      //****聊天栏******//\n      isOpen: false,\n      UserImageList: [],\n      avatar: \"\",\n      //*********************//\n      //方法\n      echartChange: null,\n      //连接钱包\n      user: {\n        encryptedPassword: \"\"\n      },\n      changeingAccount: false,\n      anmiate1: true,\n      animate2: false,\n      animate3: false,\n      animate4: false,\n      animate5: false,\n      EmpowerSignForm: {\n        sp1: \"\",\n        sp2: \"\",\n        sp3: \"\"\n      },\n      isGetToken: false,\n      newMnemonic: \"\",\n      isUnlocked: false\n    };\n  },\n  computed: {\n    listenGetToken() {\n      return this.$store.state.isEmpower;\n    }\n  },\n  watch: {\n    listenGetToken() {\n      this.isGetToken = this.$store.state.isEmpower;\n    }\n  },\n  async mounted() {\n    if (window.ethereum != undefined) {\n      await window.ethereum._metamask.isUnlocked().then(re => this.isUnlocked = re);\n      window.ethereum.on(\"accountsChanged\", async () => {\n        window.location.reload();\n      });\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n        this.$notify({\n          title: \"已切换链\",\n          type: \"warning\",\n          position: \"top-left\",\n          offset: 200\n        });\n      });\n      if (!this.$store.state.isconnect && this.isUnlocked) {\n        try {\n          await this.connectWallet();\n          this.isGetToken = true;\n          setTimeout(async () => {\n            this.anmiate1 = false;\n            await checkUserExist({\n              userAddress: this.$store.state.currentAddress\n            }).then(async re => {\n              if (re.data.data == \"\") {\n                this.animate3 = true;\n              } else {\n                this.animate2 = true;\n              }\n            });\n          }, 2000);\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    }\n  },\n  methods: {\n    async connectWallet() {\n      if (localStorage.getItem[\"token\"] == null || !this.$store.state.isconnect) {\n        try {\n          // 请求用户授权\n          await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          }).then(async handleAccountsChanged => {\n            this.$store.commit(\"setcurrentAddress\", handleAccountsChanged[0]);\n            this.$store.commit(\"setAvatar\", handleAccountsChanged[0]);\n            this.user.userAddress = handleAccountsChanged[0];\n          }).catch(error => {\n            this.$store.commit(\"setConnection\", false);\n            if (error.code === 4001) {\n              // EIP-1193 userRejectedRequest error\n              console.log(\"Please connect to MetaMask.\");\n            } else {\n              console.error(error);\n            }\n          });\n        } catch (error) {\n          console.error(error);\n          this.$notify.error({\n            title: \"连接失败\",\n            position: \"top-left\",\n            offset: 200\n          });\n        }\n      }\n    },\n    async checkEmpower() {\n      this.user.encryptedPassword = CryptoJS.SHA256(this.user.encryptedPassword).toString();\n      await getToken(this.user).then(re => {\n        localStorage.clear();\n        if (re.data.data == null) {\n          this.$notify({\n            title: \"授权码错误\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200\n          });\n        } else {\n          let currentAddress = {\n            ownerAddress: this.$store.state.currentAddress\n          };\n          postOwnerContractList(currentAddress).then(re => {\n            this.$store.commit(\"setOwnerNFTList\", re.data.data);\n          });\n          localStorage.setItem(\"token\", re.data.data);\n          this.$store.commit(\"setEmpower\", true);\n          // this.$store.commit(\"setConnection\", true);\n          // this.giveChatInitToWalletConnect();\n          this.$notify({\n            title: \"🎉 连接成功\",\n            position: \"top-left\",\n            offset: 200\n          });\n        }\n      });\n    },\n    openEmpower() {\n      if (this.$store.state.isEmpower || window.ethereum == undefined) {\n        return;\n      }\n      if (!this.isUnlocked) {\n        this.$notify({\n          title: \"钱包未解锁\",\n          type: \"warning\",\n          position: \"top-left\",\n          offset: 200\n        });\n        return;\n      } else {\n        this.isGetToken = true;\n      }\n    },\n    viewControl(opt) {\n      switch (opt) {\n        case 1:\n          this.animate2 = false;\n          this.animate4 = true;\n          break;\n        case 2:\n          this.animate2 = true;\n          this.animate4 = false;\n          break;\n        case 3:\n          this.animate2 = true;\n          this.animate5 = false;\n          break;\n        default:\n          this.animate2 = false;\n          this.isGetToken = true;\n          this.anmiate1 = false;\n          this.animate4 = true;\n          this.user.encryptedPassword = \"\";\n          break;\n      }\n    },\n    // =====\n    async empower(opt) {\n      if (opt == 2) {\n        if (this.EmpowerSignForm.sp1 == \"\" || this.EmpowerSignForm.sp2 == \"\" || this.EmpowerSignForm.sp3 == \"\" || this.EmpowerSignForm.sp4 == \"\" || this.EmpowerSignForm.sp5 == \"\" || this.user.encryptedPassword == \"\") {\n          this.$notify({\n            title: \"信息不能为空\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200\n          });\n          return;\n        }\n      }\n      this.user.encryptedPassword = CryptoJS.SHA256(this.user.encryptedPassword).toString();\n      await setMnemonic(this.user);\n      this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n      await setAuthenticationMetaInformation(this.EmpowerSignForm);\n      await getToken(this.user).then(async re => {\n        localStorage.clear();\n        if (re.data.data == null) {\n          this.$notify({\n            title: \"密码错误\",\n            type: \"waring\",\n            position: \"top-left\",\n            offset: 200\n          });\n        } else {\n          localStorage.setItem(\"token\", re.data.data);\n          let currentAddress = {\n            ownerAddress: this.EmpowerSignForm.userAddress\n          };\n          await postOwnerContractList(currentAddress).then(re => {\n            this.$store.commit(\"setOwnerNFTList\", re.data.data);\n          });\n          this.giveChatInitToWalletConnect();\n          this.$store.commit(\"setConnection\", true);\n          this.$store.commit(\"setEmpower\", true);\n          this.isGetToken = false;\n          this.$notify({\n            title: \"🎉 连接成功\",\n            position: \"top-left\",\n            offset: 200\n          });\n        }\n      });\n    },\n    canacelEmpover() {\n      this.isGetToken = false;\n      this.$store.commit(\"setConnection\", false);\n      localStorage.clear();\n    },\n    // =====\n    async backPassword() {\n      this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n      forgetMnemonic(this.EmpowerSignForm).then(re => {\n        if (re.data.data) {\n          this.animate5 = true;\n          this.animate4 = false;\n          this.$notify({\n            title: \"密保正确\",\n            type: \"success\",\n            position: \"top-left\",\n            offset: 200\n          });\n        } else {\n          this.$notify({\n            title: \"密保错误\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200\n          });\n        }\n      });\n    },\n    async resetMnemonic() {\n      this.EmpowerSignForm.newMnemonic = CryptoJS.SHA256(this.newMnemonic).toString();\n      this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n      await checkUserExist(this.EmpowerSignForm).then(re => {\n        if (re.data.data == this.EmpowerSignForm.encryptedPassword) {\n          this.$notify({\n            title: \"不能与旧密码重复\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200\n          });\n          return;\n        } else {\n          resetMnemonic(this.EmpowerSignForm).then(re => {\n            if (re.data.data == null) {\n              this.$notify.error({\n                title: \"系统异常\",\n                position: \"top-left\",\n                offset: 200\n              });\n            }\n            this.$notify({\n              title: \"🎉 重设成功\",\n              position: \"top-left\",\n              offset: 200\n            });\n            this.animate2 = true;\n            this.animate5 = false;\n          });\n        }\n      });\n    },\n    GETHashAvatar() {\n      if (this.$store.state.isconnect) {\n        this.avatar = \"data:image/png;base64,\" + new this.Identicon(this.$store.state.currentAddress, 120).toString();\n        this.$refs.avatar.width = 60;\n        this.$refs.avatar.height = 60;\n      } else {\n        this.avatar = require(\"@/assets/webAssets/MetaMask.png\");\n        this.$refs.avatar.width = 40;\n        this.$refs.avatar.height = 40;\n      }\n    }\n    // giveChatInitToWalletConnect() {\n    //   console.log(\"聊天栏正初始化.......\");\n    //   this.$refs.ChatMemu.init();\n    // },\n  }\n};","map":{"version":3,"names":["postOwnerContractList","getToken","setMnemonic","checkUserExist","setAuthenticationMetaInformation","forgetMnemonic","resetMnemonic","CryptoJS","data","isOpen","UserImageList","avatar","echartChange","user","encryptedPassword","changeingAccount","anmiate1","animate2","animate3","animate4","animate5","EmpowerSignForm","sp1","sp2","sp3","isGetToken","newMnemonic","isUnlocked","computed","listenGetToken","$store","state","isEmpower","watch","mounted","window","ethereum","undefined","_metamask","then","re","on","location","reload","$notify","title","type","position","offset","isconnect","connectWallet","setTimeout","userAddress","currentAddress","error","console","log","methods","localStorage","getItem","request","method","handleAccountsChanged","commit","catch","code","checkEmpower","SHA256","toString","clear","ownerAddress","setItem","openEmpower","viewControl","opt","empower","sp4","sp5","giveChatInitToWalletConnect","canacelEmpover","backPassword","GETHashAvatar","Identicon","$refs","width","height","require"],"sources":["src/views/user/userEmpower.vue"],"sourcesContent":["<template>\n  <transition\n    enter-active-class=\"animate__animated animate__fadeIn\"\n    leave-active-class=\"animate__animated animate__fadeOut\"\n  >\n    <div\n      class=\"EmpowerMask \"\n      v-if=\"isGetToken\"\n    >\n      <div class=\"EmpowerBox animate__animated animate__flipInX\">\n        <div class=\"EmpowerUserInfbox\">\n          <div\n            class=\"animate1 \"\n            v-if=\"anmiate1\"\n          >\n            <span\n              style=\"font-weight: 800;\n            font-size: 1.2vw;padding-right:4% ;\"\n            >正在连接到 </span>\n            <div class=\"EmpowerUserInf\">\n              <img\n                class=\"UserImage\"\n                :src=\"$store.state.avatar\"\n                alt=\"\"\n                ref=\"avatar\"\n                slot=\"reference\"\n              >\n            </div>\n            <div class=\"EmpowerUserAddress\">\n              {{ `${$store.state.currentAddress.slice(\n                0,\n                5\n              )}...${$store.state.currentAddress.slice(37)}` }}\n            </div>\n          </div>\n          <div\n            class=\"animate2 animate__animated animate__fadeIn\"\n            v-if=\"animate2\"\n          >\n            <div class=\"EmpowerUserInf\">\n              <img\n                class=\"UserImage\"\n                :src=\"$store.state.avatar\"\n                alt=\"\"\n                ref=\"avatar\"\n                slot=\"reference\"\n              >\n            </div>\n            <div class=\"EmpowerUserAddress\">\n              {{ `${$store.state.currentAddress.slice(\n                0,\n                5\n              )}...${$store.state.currentAddress.slice(37)}` }}\n            </div>\n            <div class=\"EmpowerPasswordBox\">\n              <div class=\"EmpowerPasswordBoxTop\">\n                <el-form label-width=\"80px\">\n                  <el-form-item>\n                    <template slot=\"label\">\n                      <i class=\"el-icon-lock\" />\n                    </template>\n                    <el-input\n                      clearable\n                      class=\"EmpowerPassword\"\n                      type=\"password\"\n                      v-model=\"user.encryptedPassword\"\n                      placeholder=\"请输入授权码\"\n                      @keydown.enter.prevent.native=\"checkEmpower\"\n                      ref=\"password\"\n                    />\n                  </el-form-item>\n                </el-form>\n              </div>\n              <div class=\"EmpowerPasswordBoxBottom\">\n                <div class=\"EmpowerPasswordOpt\">\n                  <span\n                    style=\"margin-right: 5%;\"\n                    @click=\"viewControl(1)\"\n                  >忘记授权码</span>\n                  <span\n                    style=\"margin-left: 5%;\"\n                    @click=\"canacelEmpover\"\n                  >不授权直接进入</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            class=\"animate3 animate__animated animate__fadeInLeft\"\n            v-if=\"animate3\"\n          >\n            <div class=\"SignTop\">\n              <div class=\"SignUserInf\">\n                <img\n                  class=\"SignUserImage\"\n                  :src=\"$store.state.avatar\"\n                  alt=\"\"\n                  ref=\"avatar\"\n                  slot=\"reference\"\n                >\n              </div>\n              <div class=\"SignUserAddress\">\n                {{ `${$store.state.currentAddress.slice(\n                  0,\n                  5\n                )}...${$store.state.currentAddress.slice(37)}` }} 请设置授权信息和密保\n              </div>\n              <div />\n            </div>\n            <div class=\"SignForm\">\n              <el-form\n                label-position=\"top\"\n                label-width=\"80px\"\n                :model=\"EmpowerSignForm\"\n              >\n                <el-form-item label=\"授权码:\">\n                  <el-input\n                    type=\"password\"\n                    v-model=\"user.encryptedPassword\"\n                    placeholder=\"请输入授权码\"\n                  />\n                </el-form-item>\n                <el-divider />\n                <el-form-item label=\"你喜欢看的电影:\">\n                  <el-input\n                    v-model=\"EmpowerSignForm.sp1\"\n                    placeholder=\"请输入密保1\"\n                  />\n                </el-form-item>\n                <el-form-item label=\"你喜欢听的音乐:\">\n                  <el-input\n                    v-model=\"EmpowerSignForm.sp2\"\n                    placeholder=\"请输入密保2\"\n                  />\n                </el-form-item>\n                <el-form-item label=\"你喜欢的运动:\">\n                  <el-input\n                    v-model=\"EmpowerSignForm.sp3\"\n                    placeholder=\"请输入密保3\"\n                  />\n                </el-form-item>\n              </el-form>\n              <div class=\"SignSubmitBox\">\n                <el-button\n                  type=\"danger\"\n                  @click=\"isGetToken=false\"\n                >\n                  取消\n                </el-button>\n                <el-button\n                  type=\"primary\"\n                  @click=\"empower(2)\"\n                >\n                  授权\n                </el-button>\n              </div>\n            </div>\n          </div>\n          <div\n            class=\"animate4 animate__animated animate__fadeInLeft\"\n            v-if=\"animate4\"\n          >\n            <div class=\"SignTop\">\n              <div class=\"SignUserInf\">\n                <img\n                  class=\"SignUserImage\"\n                  :src=\"$store.state.avatar\"\n                  alt=\"\"\n                  ref=\"avatar\"\n                  slot=\"reference\"\n                >\n              </div>\n              <div class=\"SignUserAddress\">\n                {{ `${$store.state.currentAddress.slice(\n                  0,\n                  5\n                )}...${$store.state.currentAddress.slice(37)}` }} 找回密码\n              </div>\n              <div />\n            </div>\n            <div class=\"SignForm\">\n              <el-form\n                label-position=\"top\"\n                label-width=\"80px\"\n                :model=\"EmpowerSignForm\"\n              >\n                <el-form-item label=\"你喜欢看的电影:\">\n                  <el-input\n                    v-model=\"EmpowerSignForm.sp1\"\n                    placeholder=\"请输入密保1\"\n                  />\n                </el-form-item>\n                <el-form-item label=\"你喜欢听的音乐:\">\n                  <el-input\n                    v-model=\"EmpowerSignForm.sp2\"\n                    placeholder=\"请输入密保2\"\n                  />\n                </el-form-item>\n                <el-form-item label=\"你喜欢的运动:\">\n                  <el-input\n                    v-model=\"EmpowerSignForm.sp3\"\n                    placeholder=\"请输入密保3\"\n                  />\n                </el-form-item>\n              </el-form>\n              <div class=\"SignSubmitBox\">\n                <el-button\n                  type=\"danger\"\n                  @click=\"viewControl(2)\n                  \"\n                >\n                  返回\n                </el-button>\n                <el-button\n                  type=\"primary\"\n                  @click=\"backPassword\"\n                >\n                  找回\n                </el-button>\n              </div>\n            </div>\n          </div>\n          <div\n            class=\"animate5\"\n            v-if=\"animate5\"\n          >\n            <div style=\"margin-bottom: 20px;font-size: 1vw;\">\n              请设置新的授权码\n            </div>\n            <el-input\n              v-model=\"newMnemonic\"\n              placeholder=\"请设置新的授权码\"\n            />\n            <el-button\n              type=\"danger\"\n              @click=\"viewControl(3)\"\n              style=\"margin-top: 20px;\"\n            >\n              取消\n            </el-button>\n            <el-button\n              type=\"primary\"\n              @click=\"resetMnemonic\"\n              style=\"margin-top: 20px;\"\n            >\n              重设\n            </el-button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\n  import { postOwnerContractList } from \"@/api/axios/ownerContractLIst\";\n  import {\n    getToken,\n    setMnemonic,\n    checkUserExist,\n    setAuthenticationMetaInformation,\n    forgetMnemonic,\n    resetMnemonic,\n  } from \"@/api/axios/user\";\n  import CryptoJS from \"crypto-js\";\n  export default {\n    data() {\n      return {\n        //****聊天栏******//\n        isOpen: false,\n        UserImageList: [],\n        avatar: \"\",\n        //*********************//\n        //方法\n        echartChange: null,\n        //连接钱包\n        user: {\n          encryptedPassword: \"\",\n        },\n        changeingAccount: false,\n        anmiate1: true,\n        animate2: false,\n        animate3: false,\n        animate4: false,\n        animate5: false,\n        EmpowerSignForm: {\n          sp1: \"\",\n          sp2: \"\",\n          sp3: \"\",\n        },\n        isGetToken: false,\n        newMnemonic: \"\",\n        isUnlocked: false,\n      };\n    },\n    computed:{\n\t\tlistenGetToken() {\n\t\t\treturn this.$store.state.isEmpower;\n\t\t}\n  },\n  watch:{\n    listenGetToken(){\n      this.isGetToken=this.$store.state.isEmpower\n    }\n    },\n    async mounted() {\n      if (window.ethereum != undefined) {\n        await window.ethereum._metamask\n          .isUnlocked()\n          .then((re) => (this.isUnlocked = re));\n        window.ethereum.on(\"accountsChanged\", async () => {\n          window.location.reload();\n        });\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n          this.$notify({\n            title: \"已切换链\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200,\n          });\n        });\n        if (!this.$store.state.isconnect && this.isUnlocked) {\n          try {\n            await this.connectWallet();\n            this.isGetToken = true;\n            setTimeout(async () => {\n              this.anmiate1 = false;\n              await checkUserExist({\n                userAddress: this.$store.state.currentAddress,\n              }).then(async (re) => {\n                if (re.data.data == \"\") {\n                  this.animate3 = true;\n                } else {\n                  this.animate2 = true;\n                }\n              });\n            }, 2000);\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      }\n    },\n    methods: {\n      async connectWallet() {\n        if (\n          localStorage.getItem[\"token\"] == null ||\n          !this.$store.state.isconnect\n        ) {\n          try {\n            // 请求用户授权\n            await window.ethereum\n              .request({ method: \"eth_requestAccounts\" })\n              .then(async (handleAccountsChanged) => {\n                this.$store.commit(\"setcurrentAddress\", handleAccountsChanged[0]);\n                this.$store.commit(\"setAvatar\", handleAccountsChanged[0]);\n                this.user.userAddress = handleAccountsChanged[0];\n              })\n              .catch((error) => {\n                this.$store.commit(\"setConnection\", false);\n                if (error.code === 4001) {\n                  // EIP-1193 userRejectedRequest error\n                  console.log(\"Please connect to MetaMask.\");\n                } else {\n                  console.error(error);\n                }\n              });\n          } catch (error) {\n            console.error(error);\n            this.$notify.error({\n              title: \"连接失败\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          }\n        }\n      },\n      async checkEmpower() {\n        this.user.encryptedPassword = CryptoJS.SHA256(\n          this.user.encryptedPassword\n        ).toString();\n        await getToken(this.user).then((re) => {\n          localStorage.clear();\n          if (re.data.data == null) {\n            this.$notify({\n              title: \"授权码错误\",\n              type: \"warning\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          } else {\n            let currentAddress = {\n              ownerAddress: this.$store.state.currentAddress,\n            };\n            postOwnerContractList(currentAddress).then((re) => {\n              this.$store.commit(\"setOwnerNFTList\", re.data.data);\n            });\n            localStorage.setItem(\"token\", re.data.data);\n            this.$store.commit(\"setEmpower\", true);\n            // this.$store.commit(\"setConnection\", true);\n            // this.giveChatInitToWalletConnect();\n            this.$notify({\n              title: \"🎉 连接成功\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          }\n        });\n      },\n      openEmpower() {\n        if (this.$store.state.isEmpower || window.ethereum == undefined) {\n          return;\n        }\n        if (!this.isUnlocked) {\n          this.$notify({\n            title: \"钱包未解锁\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200,\n          });\n          return;\n        } else {\n          this.isGetToken = true;\n        }\n      },\n      viewControl(opt) {\n        switch (opt) {\n          case 1:\n            this.animate2 = false;\n            this.animate4 = true;\n            break;\n          case 2:\n            this.animate2 = true;\n            this.animate4 = false;\n            break;\n          case 3:\n            this.animate2 = true;\n            this.animate5 = false;\n            break;\n          default:\n            this.animate2 = false;\n            this.isGetToken = true;\n            this.anmiate1 = false;\n            this.animate4 = true;\n            this.user.encryptedPassword = \"\";\n            break;\n        }\n      },\n      // =====\n      async empower(opt) {\n        if (opt == 2) {\n          if (\n            this.EmpowerSignForm.sp1 == \"\" ||\n            this.EmpowerSignForm.sp2 == \"\" ||\n            this.EmpowerSignForm.sp3 == \"\" ||\n            this.EmpowerSignForm.sp4 == \"\" ||\n            this.EmpowerSignForm.sp5 == \"\" ||\n            this.user.encryptedPassword == \"\"\n          ) {\n            this.$notify({\n              title: \"信息不能为空\",\n              type: \"warning\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            return;\n          }\n        }\n        this.user.encryptedPassword = CryptoJS.SHA256(\n          this.user.encryptedPassword\n        ).toString();\n        await setMnemonic(this.user);\n        this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n        await setAuthenticationMetaInformation(this.EmpowerSignForm);\n        await getToken(this.user).then(async (re) => {\n          localStorage.clear();\n          if (re.data.data == null) {\n            this.$notify({\n              title: \"密码错误\",\n              type: \"waring\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          } else {\n            localStorage.setItem(\"token\", re.data.data);\n            let currentAddress = {\n              ownerAddress: this.EmpowerSignForm.userAddress,\n            };\n            await postOwnerContractList(currentAddress).then((re) => {\n              this.$store.commit(\"setOwnerNFTList\", re.data.data);\n            });\n            this.giveChatInitToWalletConnect();\n            this.$store.commit(\"setConnection\", true);\n            this.$store.commit(\"setEmpower\", true);\n            this.isGetToken = false;\n            this.$notify({\n              title: \"🎉 连接成功\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          }\n        });\n      },\n      canacelEmpover() {\n        this.isGetToken = false;\n        this.$store.commit(\"setConnection\", false);\n        localStorage.clear();\n      },\n      // =====\n      async backPassword() {\n        this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n        forgetMnemonic(this.EmpowerSignForm).then((re) => {\n          if (re.data.data) {\n            this.animate5 = true;\n            this.animate4 = false;\n            this.$notify({\n              title: \"密保正确\",\n              type: \"success\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          } else {\n            this.$notify({\n              title: \"密保错误\",\n              type: \"warning\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          }\n        });\n      },\n      async resetMnemonic() {\n        this.EmpowerSignForm.newMnemonic = CryptoJS.SHA256(\n          this.newMnemonic\n        ).toString();\n        this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n        await checkUserExist(this.EmpowerSignForm).then((re) => {\n          if (re.data.data == this.EmpowerSignForm.encryptedPassword) {\n            this.$notify({\n              title: \"不能与旧密码重复\",\n              type: \"warning\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            return;\n          } else {\n            resetMnemonic(this.EmpowerSignForm).then((re) => {\n              if (re.data.data == null) {\n                this.$notify.error({\n                  title: \"系统异常\",\n                  position: \"top-left\",\n                  offset: 200,\n                });\n              }\n              this.$notify({\n                title: \"🎉 重设成功\",\n                position: \"top-left\",\n                offset: 200,\n              });\n              this.animate2 = true;\n              this.animate5 = false;\n            });\n          }\n        });\n      },\n      GETHashAvatar() {\n        if (this.$store.state.isconnect) {\n          this.avatar =\n            \"data:image/png;base64,\" +\n            new this.Identicon(this.$store.state.currentAddress, 120).toString();\n          this.$refs.avatar.width = 60;\n          this.$refs.avatar.height = 60;\n        } else {\n          this.avatar = require(\"@/assets/webAssets/MetaMask.png\");\n          this.$refs.avatar.width = 40;\n          this.$refs.avatar.height = 40;\n        }\n      },\n      // giveChatInitToWalletConnect() {\n      //   console.log(\"聊天栏正初始化.......\");\n      //   this.$refs.ChatMemu.init();\n      // },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/style/layout/userEmpower.scss\";\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}