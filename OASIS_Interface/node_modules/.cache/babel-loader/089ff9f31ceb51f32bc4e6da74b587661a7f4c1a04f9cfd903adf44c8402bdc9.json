{"ast":null,"code":"import debug from 'debug';\nimport { CONFIG_KEY, VERSION_KEY } from '../utils.js';\nimport { MissingRepoOptionsError } from '../errors.js';\nconst log = debug('ipfs:repo:migrator:repo:init');\n\n/**\n * @param {import('../types').Backends} backends\n */\nexport async function isRepoInitialized(backends) {\n  if (!backends) {\n    throw new MissingRepoOptionsError('Please pass repo options when trying to open a repo');\n  }\n  const root = backends.root;\n  try {\n    await root.open();\n    const versionCheck = await root.has(VERSION_KEY);\n    const configCheck = await root.has(CONFIG_KEY);\n    if (!versionCheck || !configCheck) {\n      log(`Version entry present: ${versionCheck}`);\n      log(`Config entry present: ${configCheck}`);\n      return false;\n    }\n    return true;\n  } catch ( /** @type {any} */e) {\n    log('While checking if repo is initialized error was thrown: ' + e.message);\n    return false;\n  } finally {\n    if (root !== undefined) {\n      try {\n        await root.close();\n      } catch {}\n    }\n  }\n}","map":{"version":3,"names":["debug","CONFIG_KEY","VERSION_KEY","MissingRepoOptionsError","log","isRepoInitialized","backends","root","open","versionCheck","has","configCheck","e","message","undefined","close"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-repo-migrations@15.0.0/node_modules/ipfs-repo-migrations/src/repo/init.js"],"sourcesContent":["\nimport debug from 'debug'\nimport { CONFIG_KEY, VERSION_KEY } from '../utils.js'\nimport { MissingRepoOptionsError } from '../errors.js'\n\nconst log = debug('ipfs:repo:migrator:repo:init')\n\n/**\n * @param {import('../types').Backends} backends\n */\nexport async function isRepoInitialized (backends) {\n  if (!backends) {\n    throw new MissingRepoOptionsError('Please pass repo options when trying to open a repo')\n  }\n\n  const root = backends.root\n\n  try {\n    await root.open()\n    const versionCheck = await root.has(VERSION_KEY)\n    const configCheck = await root.has(CONFIG_KEY)\n    if (!versionCheck || !configCheck) {\n      log(`Version entry present: ${versionCheck}`)\n      log(`Config entry present: ${configCheck}`)\n      return false\n    }\n\n    return true\n  } catch (/** @type {any} */ e) {\n    log('While checking if repo is initialized error was thrown: ' + e.message)\n    return false\n  } finally {\n    if (root !== undefined) {\n      try {\n        await root.close()\n      } catch {}\n    }\n  }\n}\n"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,WAAW,QAAQ,aAAa;AACrD,SAASC,uBAAuB,QAAQ,cAAc;AAEtD,MAAMC,GAAG,GAAGJ,KAAK,CAAC,8BAA8B,CAAC;;AAEjD;AACA;AACA;AACA,OAAO,eAAeK,iBAAiBA,CAAEC,QAAQ,EAAE;EACjD,IAAI,CAACA,QAAQ,EAAE;IACb,MAAM,IAAIH,uBAAuB,CAAC,qDAAqD,CAAC;EAC1F;EAEA,MAAMI,IAAI,GAAGD,QAAQ,CAACC,IAAI;EAE1B,IAAI;IACF,MAAMA,IAAI,CAACC,IAAI,CAAC,CAAC;IACjB,MAAMC,YAAY,GAAG,MAAMF,IAAI,CAACG,GAAG,CAACR,WAAW,CAAC;IAChD,MAAMS,WAAW,GAAG,MAAMJ,IAAI,CAACG,GAAG,CAACT,UAAU,CAAC;IAC9C,IAAI,CAACQ,YAAY,IAAI,CAACE,WAAW,EAAE;MACjCP,GAAG,CAAE,0BAAyBK,YAAa,EAAC,CAAC;MAC7CL,GAAG,CAAE,yBAAwBO,WAAY,EAAC,CAAC;MAC3C,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb,CAAC,CAAC,QAAO,kBAAmBC,CAAC,EAAE;IAC7BR,GAAG,CAAC,0DAA0D,GAAGQ,CAAC,CAACC,OAAO,CAAC;IAC3E,OAAO,KAAK;EACd,CAAC,SAAS;IACR,IAAIN,IAAI,KAAKO,SAAS,EAAE;MACtB,IAAI;QACF,MAAMP,IAAI,CAACQ,KAAK,CAAC,CAAC;MACpB,CAAC,CAAC,MAAM,CAAC;IACX;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}