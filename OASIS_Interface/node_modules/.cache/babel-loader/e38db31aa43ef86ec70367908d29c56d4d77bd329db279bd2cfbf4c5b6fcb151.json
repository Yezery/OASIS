{"ast":null,"code":"import { bufferToRecordKey } from '../../utils.js';\nimport { CodeError } from '@libp2p/interfaces/errors';\nimport { verifyRecord } from '@libp2p/record/validators';\nimport { logger } from '@libp2p/logger';\nexport class PutValueHandler {\n  constructor(components, init) {\n    const {\n      validators\n    } = init;\n    this.components = components;\n    this.log = logger('libp2p:kad-dht:rpc:handlers:put-value');\n    this.validators = validators;\n  }\n  async handle(peerId, msg) {\n    const key = msg.key;\n    this.log('%p asked us to store value for key %b', peerId, key);\n    const record = msg.record;\n    if (record == null) {\n      const errMsg = `Empty record from: ${peerId.toString()}`;\n      this.log.error(errMsg);\n      throw new CodeError(errMsg, 'ERR_EMPTY_RECORD');\n    }\n    try {\n      await verifyRecord(this.validators, record);\n      record.timeReceived = new Date();\n      const recordKey = bufferToRecordKey(record.key);\n      await this.components.datastore.put(recordKey, record.serialize().subarray());\n      this.log('put record for %b into datastore under key %k', key, recordKey);\n    } catch (err) {\n      this.log('did not put record for key %b into datastore %o', key, err);\n    }\n    return msg;\n  }\n}","map":{"version":3,"names":["bufferToRecordKey","CodeError","verifyRecord","logger","PutValueHandler","constructor","components","init","validators","log","handle","peerId","msg","key","record","errMsg","toString","error","timeReceived","Date","recordKey","datastore","put","serialize","subarray","err"],"sources":["../../../../src/rpc/handlers/put-value.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,gBAAgB;AAClD,SAASC,SAAS,QAAQ,2BAA2B;AACrD,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAAiBC,MAAM,QAAQ,gBAAgB;AAe/C,OAAM,MAAOC,eAAe;EAK1BC,YAAaC,UAAqC,EAAEC,IAAyB;IAC3E,MAAM;MAAEC;IAAU,CAAE,GAAGD,IAAI;IAE3B,IAAI,CAACD,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACG,GAAG,GAAGN,MAAM,CAAC,uCAAuC,CAAC;IAC1D,IAAI,CAACK,UAAU,GAAGA,UAAU;EAC9B;EAEA,MAAME,MAAMA,CAAEC,MAAc,EAAEC,GAAY;IACxC,MAAMC,GAAG,GAAGD,GAAG,CAACC,GAAG;IACnB,IAAI,CAACJ,GAAG,CAAC,uCAAuC,EAAEE,MAAM,EAAEE,GAAG,CAAC;IAE9D,MAAMC,MAAM,GAAGF,GAAG,CAACE,MAAM;IAEzB,IAAIA,MAAM,IAAI,IAAI,EAAE;MAClB,MAAMC,MAAM,GAAG,sBAAsBJ,MAAM,CAACK,QAAQ,EAAE,EAAE;MAExD,IAAI,CAACP,GAAG,CAACQ,KAAK,CAACF,MAAM,CAAC;MACtB,MAAM,IAAId,SAAS,CAACc,MAAM,EAAE,kBAAkB,CAAC;;IAGjD,IAAI;MACF,MAAMb,YAAY,CAAC,IAAI,CAACM,UAAU,EAAEM,MAAM,CAAC;MAE3CA,MAAM,CAACI,YAAY,GAAG,IAAIC,IAAI,EAAE;MAChC,MAAMC,SAAS,GAAGpB,iBAAiB,CAACc,MAAM,CAACD,GAAG,CAAC;MAC/C,MAAM,IAAI,CAACP,UAAU,CAACe,SAAS,CAACC,GAAG,CAACF,SAAS,EAAEN,MAAM,CAACS,SAAS,EAAE,CAACC,QAAQ,EAAE,CAAC;MAC7E,IAAI,CAACf,GAAG,CAAC,+CAA+C,EAAEI,GAAG,EAAEO,SAAS,CAAC;KAC1E,CAAC,OAAOK,GAAQ,EAAE;MACjB,IAAI,CAAChB,GAAG,CAAC,iDAAiD,EAAEI,GAAG,EAAEY,GAAG,CAAC;;IAGvE,OAAOb,GAAG;EACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}