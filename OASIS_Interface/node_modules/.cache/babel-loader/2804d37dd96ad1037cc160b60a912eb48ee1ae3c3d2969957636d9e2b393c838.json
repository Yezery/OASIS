{"ast":null,"code":"import _defineProperty from \"/Users/yezery/Oasis/OASIS/node_modules/.store/@babel+runtime@7.22.15/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nlet _Symbol$iterator;\nimport { peerIdFromString } from '@libp2p/peer-id';\nimport { mapIterable } from './util.js';\n/**\n * We can't use PeerIds as map keys because map keys are\n * compared using same-value-zero equality, so this is just\n * a map that stringifies the PeerIds before storing them.\n *\n * PeerIds cache stringified versions of themselves so this\n * should be a cheap operation.\n *\n * @example\n *\n * ```JavaScript\n * import { peerMap } from '@libp2p/peer-collections'\n *\n * const map = peerMap<string>()\n * map.set(peerId, 'value')\n * ```\n */\n_Symbol$iterator = Symbol.iterator;\nexport class PeerMap {\n  constructor(map) {\n    _defineProperty(this, \"map\", void 0);\n    this.map = new Map();\n    if (map != null) {\n      for (const [key, value] of map.entries()) {\n        this.map.set(key.toString(), value);\n      }\n    }\n  }\n  [_Symbol$iterator]() {\n    return this.entries();\n  }\n  clear() {\n    this.map.clear();\n  }\n  delete(peer) {\n    this.map.delete(peer.toString());\n  }\n  entries() {\n    return mapIterable(this.map.entries(), val => {\n      return [peerIdFromString(val[0]), val[1]];\n    });\n  }\n  forEach(fn) {\n    this.map.forEach((value, key) => {\n      fn(value, peerIdFromString(key), this);\n    });\n  }\n  get(peer) {\n    return this.map.get(peer.toString());\n  }\n  has(peer) {\n    return this.map.has(peer.toString());\n  }\n  set(peer, value) {\n    this.map.set(peer.toString(), value);\n  }\n  keys() {\n    return mapIterable(this.map.keys(), val => {\n      return peerIdFromString(val);\n    });\n  }\n  values() {\n    return this.map.values();\n  }\n  get size() {\n    return this.map.size;\n  }\n}","map":{"version":3,"names":["peerIdFromString","mapIterable","_Symbol$iterator","Symbol","iterator","PeerMap","constructor","map","_defineProperty","Map","key","value","entries","set","toString","clear","delete","peer","val","forEach","fn","get","has","keys","values","size"],"sources":["../../src/map.ts"],"sourcesContent":[null],"mappings":";;AAAA,SAASA,gBAAgB,QAAQ,iBAAiB;AAClD,SAASC,WAAW,QAAQ,WAAW;AAGvC;;;;;;;;;;;;;;;;;AAAAC,gBAAA,GA8BGC,MAAM,CAACC,QAAQ;AAblB,OAAM,MAAOC,OAAO;EAGlBC,YAAaC,GAAgB;IAAAC,eAAA;IAC3B,IAAI,CAACD,GAAG,GAAG,IAAIE,GAAG,EAAE;IAEpB,IAAIF,GAAG,IAAI,IAAI,EAAE;MACf,KAAK,MAAM,CAACG,GAAG,EAAEC,KAAK,CAAC,IAAIJ,GAAG,CAACK,OAAO,EAAE,EAAE;QACxC,IAAI,CAACL,GAAG,CAACM,GAAG,CAACH,GAAG,CAACI,QAAQ,EAAE,EAAEH,KAAK,CAAC;;;EAGzC;EAEA,CAAAT,gBAAA,IAAiB;IACf,OAAO,IAAI,CAACU,OAAO,EAAE;EACvB;EAEAG,KAAKA,CAAA;IACH,IAAI,CAACR,GAAG,CAACQ,KAAK,EAAE;EAClB;EAEAC,MAAMA,CAAEC,IAAY;IAClB,IAAI,CAACV,GAAG,CAACS,MAAM,CAACC,IAAI,CAACH,QAAQ,EAAE,CAAC;EAClC;EAEAF,OAAOA,CAAA;IACL,OAAOX,WAAW,CAChB,IAAI,CAACM,GAAG,CAACK,OAAO,EAAE,EACjBM,GAAG,IAAI;MACN,OAAO,CAAClB,gBAAgB,CAACkB,GAAG,CAAC,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC,CACF;EACH;EAEAC,OAAOA,CAAEC,EAAoD;IAC3D,IAAI,CAACb,GAAG,CAACY,OAAO,CAAC,CAACR,KAAK,EAAED,GAAG,KAAI;MAC9BU,EAAE,CAACT,KAAK,EAAEX,gBAAgB,CAACU,GAAG,CAAC,EAAE,IAAI,CAAC;IACxC,CAAC,CAAC;EACJ;EAEAW,GAAGA,CAAEJ,IAAY;IACf,OAAO,IAAI,CAACV,GAAG,CAACc,GAAG,CAACJ,IAAI,CAACH,QAAQ,EAAE,CAAC;EACtC;EAEAQ,GAAGA,CAAEL,IAAY;IACf,OAAO,IAAI,CAACV,GAAG,CAACe,GAAG,CAACL,IAAI,CAACH,QAAQ,EAAE,CAAC;EACtC;EAEAD,GAAGA,CAAEI,IAAY,EAAEN,KAAQ;IACzB,IAAI,CAACJ,GAAG,CAACM,GAAG,CAACI,IAAI,CAACH,QAAQ,EAAE,EAAEH,KAAK,CAAC;EACtC;EAEAY,IAAIA,CAAA;IACF,OAAOtB,WAAW,CAChB,IAAI,CAACM,GAAG,CAACgB,IAAI,EAAE,EACdL,GAAG,IAAI;MACN,OAAOlB,gBAAgB,CAACkB,GAAG,CAAC;IAC9B,CAAC,CACF;EACH;EAEAM,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACjB,GAAG,CAACiB,MAAM,EAAE;EAC1B;EAEA,IAAIC,IAAIA,CAAA;IACN,OAAO,IAAI,CAAClB,GAAG,CAACkB,IAAI;EACtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}