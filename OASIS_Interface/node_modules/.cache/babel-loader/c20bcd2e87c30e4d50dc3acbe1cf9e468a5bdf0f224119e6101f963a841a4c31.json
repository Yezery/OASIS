{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport * as varint from 'uint8-varint';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { allocUnsafe } from 'uint8arrays/alloc';\nimport { isAsyncIterable } from './utils.js';\nconst defaultEncoder = length => {\n  const lengthLength = varint.encodingLength(length);\n  const lengthBuf = allocUnsafe(lengthLength);\n  varint.encode(length, lengthBuf);\n  defaultEncoder.bytes = lengthLength;\n  return lengthBuf;\n};\ndefaultEncoder.bytes = 0;\nexport function encode(source, options) {\n  options = options ?? {};\n  const encodeLength = options.lengthEncoder ?? defaultEncoder;\n  function* maybeYield(chunk) {\n    // length + data\n    const length = encodeLength(chunk.byteLength);\n    // yield only Uint8Arrays\n    if (length instanceof Uint8Array) {\n      yield length;\n    } else {\n      yield* length;\n    }\n    // yield only Uint8Arrays\n    if (chunk instanceof Uint8Array) {\n      yield chunk;\n    } else {\n      yield* chunk;\n    }\n  }\n  if (isAsyncIterable(source)) {\n    return async function* () {\n      for await (const chunk of source) {\n        yield* maybeYield(chunk);\n      }\n    }();\n  }\n  return function* () {\n    for (const chunk of source) {\n      yield* maybeYield(chunk);\n    }\n  }();\n}\nencode.single = (chunk, options) => {\n  options = options ?? {};\n  const encodeLength = options.lengthEncoder ?? defaultEncoder;\n  return new Uint8ArrayList(encodeLength(chunk.byteLength), chunk);\n};","map":{"version":3,"names":["varint","Uint8ArrayList","allocUnsafe","isAsyncIterable","defaultEncoder","length","lengthLength","encodingLength","lengthBuf","encode","bytes","source","options","encodeLength","lengthEncoder","maybeYield","chunk","byteLength","Uint8Array","single"],"sources":["../../src/encode.ts"],"sourcesContent":[null],"mappings":";;;AAAA,OAAO,KAAKA,MAAM,MAAM,cAAc;AACtC,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,eAAe,QAAQ,YAAY;AAQ5C,MAAMC,cAAc,GAA2BC,MAAM,IAAI;EACvD,MAAMC,YAAY,GAAGN,MAAM,CAACO,cAAc,CAACF,MAAM,CAAC;EAClD,MAAMG,SAAS,GAAGN,WAAW,CAACI,YAAY,CAAC;EAE3CN,MAAM,CAACS,MAAM,CAACJ,MAAM,EAAEG,SAAS,CAAC;EAEhCJ,cAAc,CAACM,KAAK,GAAGJ,YAAY;EAEnC,OAAOE,SAAS;AAClB,CAAC;AACDJ,cAAc,CAACM,KAAK,GAAG,CAAC;AAIxB,OAAM,SAAUD,MAAMA,CAAEE,MAA2C,EAAEC,OAAwB;EAC3FA,OAAO,GAAGA,OAAO,IAAI,EAAE;EAEvB,MAAMC,YAAY,GAAGD,OAAO,CAACE,aAAa,IAAIV,cAAc;EAE5D,UAAWW,UAAUA,CAAEC,KAAkC;IACvD;IACA,MAAMX,MAAM,GAAGQ,YAAY,CAACG,KAAK,CAACC,UAAU,CAAC;IAE7C;IACA,IAAIZ,MAAM,YAAYa,UAAU,EAAE;MAChC,MAAMb,MAAM;KACb,MAAM;MACL,OAAQA,MAAM;;IAGhB;IACA,IAAIW,KAAK,YAAYE,UAAU,EAAE;MAC/B,MAAMF,KAAK;KACZ,MAAM;MACL,OAAQA,KAAK;;EAEjB;EAEA,IAAIb,eAAe,CAACQ,MAAM,CAAC,EAAE;IAC3B,OAAQ,mBAAgB;MACtB,WAAW,MAAMK,KAAK,IAAIL,MAAM,EAAE;QAChC,OAAQI,UAAU,CAACC,KAAK,CAAC;;IAE7B,CAAC,CAAC,CAAE;;EAGN,OAAQ,aAAU;IAChB,KAAK,MAAMA,KAAK,IAAIL,MAAM,EAAE;MAC1B,OAAQI,UAAU,CAACC,KAAK,CAAC;;EAE7B,CAAC,CAAC,CAAE;AACN;AAEAP,MAAM,CAACU,MAAM,GAAG,CAACH,KAAkC,EAAEJ,OAAwB,KAAI;EAC/EA,OAAO,GAAGA,OAAO,IAAI,EAAE;EACvB,MAAMC,YAAY,GAAGD,OAAO,CAACE,aAAa,IAAIV,cAAc;EAE5D,OAAO,IAAIH,cAAc,CACvBY,YAAY,CAACG,KAAK,CAACC,UAAU,CAAC,EAC9BD,KAAK,CACN;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}