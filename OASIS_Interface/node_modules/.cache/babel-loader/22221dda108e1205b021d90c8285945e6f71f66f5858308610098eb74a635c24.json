{"ast":null,"code":"export default function arrayShuffle(array) {\n  if (!Array.isArray(array)) {\n    throw new TypeError(`Expected an array, got ${typeof array}`);\n  }\n  array = [...array];\n  for (let index = array.length - 1; index > 0; index--) {\n    const newIndex = Math.floor(Math.random() * (index + 1));\n    [array[index], array[newIndex]] = [array[newIndex], array[index]];\n  }\n  return array;\n}","map":{"version":3,"names":["arrayShuffle","array","Array","isArray","TypeError","index","length","newIndex","Math","floor","random"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/array-shuffle@3.0.0/node_modules/array-shuffle/index.js"],"sourcesContent":["export default function arrayShuffle(array) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new TypeError(`Expected an array, got ${typeof array}`);\n\t}\n\n\tarray = [...array];\n\n\tfor (let index = array.length - 1; index > 0; index--) {\n\t\tconst newIndex = Math.floor(Math.random() * (index + 1));\n\t\t[array[index], array[newIndex]] = [array[newIndex], array[index]];\n\t}\n\n\treturn array;\n}\n"],"mappings":"AAAA,eAAe,SAASA,YAAYA,CAACC,KAAK,EAAE;EAC3C,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;IAC1B,MAAM,IAAIG,SAAS,CAAE,0BAAyB,OAAOH,KAAM,EAAC,CAAC;EAC9D;EAEAA,KAAK,GAAG,CAAC,GAAGA,KAAK,CAAC;EAElB,KAAK,IAAII,KAAK,GAAGJ,KAAK,CAACK,MAAM,GAAG,CAAC,EAAED,KAAK,GAAG,CAAC,EAAEA,KAAK,EAAE,EAAE;IACtD,MAAME,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,KAAK,GAAG,CAAC,CAAC,CAAC;IACxD,CAACJ,KAAK,CAACI,KAAK,CAAC,EAAEJ,KAAK,CAACM,QAAQ,CAAC,CAAC,GAAG,CAACN,KAAK,CAACM,QAAQ,CAAC,EAAEN,KAAK,CAACI,KAAK,CAAC,CAAC;EAClE;EAEA,OAAOJ,KAAK;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}