{"ast":null,"code":"'use strict';\n\nconst exp = Math.exp;\nexports = module.exports = function MovingAverage(timespan) {\n  if (typeof timespan !== 'number') {\n    throw new Error('must provide a timespan to the moving average constructor');\n  }\n  if (timespan <= 0) {\n    throw new Error('must provide a timespan > 0 to the moving average constructor');\n  }\n  let ma; // moving average\n  let v = 0; // variance\n  let d = 0; // deviation\n  let f = 0; // forecast\n\n  let previousTime;\n  let ret = {};\n  function alpha(t, pt) {\n    return 1 - exp(-(t - pt) / timespan);\n  }\n  ret.push = function push(time, value) {\n    if (previousTime) {\n      // calculate moving average\n      const a = alpha(time, previousTime);\n      const diff = value - ma;\n      const incr = a * diff;\n      ma = a * value + (1 - a) * ma;\n      // calculate variance & deviation\n      v = (1 - a) * (v + diff * incr);\n      d = Math.sqrt(v);\n      // calculate forecast\n      f = ma + a * diff;\n    } else {\n      ma = value;\n    }\n    previousTime = time;\n  };\n\n  // Exponential Moving Average\n\n  ret.movingAverage = function movingAverage() {\n    return ma;\n  };\n\n  // Variance\n  ret.variance = function variance() {\n    return v;\n  };\n  ret.deviation = function deviation() {\n    return d;\n  };\n  ret.forecast = function forecast() {\n    return f;\n  };\n  return ret;\n};","map":{"version":3,"names":["exp","Math","exports","module","MovingAverage","timespan","Error","ma","v","d","f","previousTime","ret","alpha","t","pt","push","time","value","a","diff","incr","sqrt","movingAverage","variance","deviation","forecast"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/@vascosantos+moving-average@1.1.0/node_modules/@vascosantos/moving-average/index.js"],"sourcesContent":["'use strict'\n\nconst exp = Math.exp\n\nexports =\nmodule.exports =\nfunction MovingAverage (timespan) {\n  if (typeof timespan !== 'number') { throw new Error('must provide a timespan to the moving average constructor') }\n\n  if (timespan <= 0) { throw new Error('must provide a timespan > 0 to the moving average constructor') }\n\n  let ma     // moving average\n  let v = 0  // variance\n  let d = 0  // deviation\n  let f = 0  // forecast\n\n  let previousTime\n\n  let ret = {}\n\n  function alpha (t, pt) {\n    return 1 - (exp(-(t - pt) / timespan))\n  }\n\n  ret.push =\n  function push (time, value) {\n    if (previousTime) {\n      // calculate moving average\n      const a = alpha(time, previousTime)\n      const diff = value - ma\n      const incr = a * diff\n      ma = a * value + (1 - a) * ma\n      // calculate variance & deviation\n      v = (1 - a) * (v + diff * incr)\n      d = Math.sqrt(v)\n      // calculate forecast\n      f = ma + a * diff\n    } else {\n      ma = value\n    }\n    previousTime = time\n  }\n\n  // Exponential Moving Average\n\n  ret.movingAverage =\n  function movingAverage () {\n    return ma\n  }\n\n  // Variance\n  ret.variance =\n  function variance () {\n    return v\n  }\n\n  ret.deviation =\n  function deviation () {\n    return d\n  }\n\n  ret.forecast =\n  function forecast () {\n    return f\n  }\n\n  return ret\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,GAAG,GAAGC,IAAI,CAACD,GAAG;AAEpBE,OAAO,GACPC,MAAM,CAACD,OAAO,GACd,SAASE,aAAaA,CAAEC,QAAQ,EAAE;EAChC,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAAE,MAAM,IAAIC,KAAK,CAAC,2DAA2D,CAAC;EAAC;EAEjH,IAAID,QAAQ,IAAI,CAAC,EAAE;IAAE,MAAM,IAAIC,KAAK,CAAC,+DAA+D,CAAC;EAAC;EAEtG,IAAIC,EAAE,EAAK;EACX,IAAIC,CAAC,GAAG,CAAC,EAAE;EACX,IAAIC,CAAC,GAAG,CAAC,EAAE;EACX,IAAIC,CAAC,GAAG,CAAC,EAAE;;EAEX,IAAIC,YAAY;EAEhB,IAAIC,GAAG,GAAG,CAAC,CAAC;EAEZ,SAASC,KAAKA,CAAEC,CAAC,EAAEC,EAAE,EAAE;IACrB,OAAO,CAAC,GAAIf,GAAG,CAAC,EAAEc,CAAC,GAAGC,EAAE,CAAC,GAAGV,QAAQ,CAAE;EACxC;EAEAO,GAAG,CAACI,IAAI,GACR,SAASA,IAAIA,CAAEC,IAAI,EAAEC,KAAK,EAAE;IAC1B,IAAIP,YAAY,EAAE;MAChB;MACA,MAAMQ,CAAC,GAAGN,KAAK,CAACI,IAAI,EAAEN,YAAY,CAAC;MACnC,MAAMS,IAAI,GAAGF,KAAK,GAAGX,EAAE;MACvB,MAAMc,IAAI,GAAGF,CAAC,GAAGC,IAAI;MACrBb,EAAE,GAAGY,CAAC,GAAGD,KAAK,GAAG,CAAC,CAAC,GAAGC,CAAC,IAAIZ,EAAE;MAC7B;MACAC,CAAC,GAAG,CAAC,CAAC,GAAGW,CAAC,KAAKX,CAAC,GAAGY,IAAI,GAAGC,IAAI,CAAC;MAC/BZ,CAAC,GAAGR,IAAI,CAACqB,IAAI,CAACd,CAAC,CAAC;MAChB;MACAE,CAAC,GAAGH,EAAE,GAAGY,CAAC,GAAGC,IAAI;IACnB,CAAC,MAAM;MACLb,EAAE,GAAGW,KAAK;IACZ;IACAP,YAAY,GAAGM,IAAI;EACrB,CAAC;;EAED;;EAEAL,GAAG,CAACW,aAAa,GACjB,SAASA,aAAaA,CAAA,EAAI;IACxB,OAAOhB,EAAE;EACX,CAAC;;EAED;EACAK,GAAG,CAACY,QAAQ,GACZ,SAASA,QAAQA,CAAA,EAAI;IACnB,OAAOhB,CAAC;EACV,CAAC;EAEDI,GAAG,CAACa,SAAS,GACb,SAASA,SAASA,CAAA,EAAI;IACpB,OAAOhB,CAAC;EACV,CAAC;EAEDG,GAAG,CAACc,QAAQ,GACZ,SAASA,QAAQA,CAAA,EAAI;IACnB,OAAOhB,CAAC;EACV,CAAC;EAED,OAAOE,GAAG;AACZ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}