{"ast":null,"code":"const START_MASKS = [0b11111111, 0b11111110, 0b11111100, 0b11111000, 0b11110000, 0b11100000, 0b11000000, 0b10000000];\nconst STOP_MASKS = [0b00000001, 0b00000011, 0b00000111, 0b00001111, 0b00011111, 0b00111111, 0b01111111, 0b11111111];\nexport class ConsumableBuffer {\n  constructor(value) {\n    this._value = value;\n    this._currentBytePos = value.length - 1;\n    this._currentBitPos = 7;\n  }\n  availableBits() {\n    return this._currentBitPos + 1 + this._currentBytePos * 8;\n  }\n  totalBits() {\n    return this._value.length * 8;\n  }\n  take(bits) {\n    let pendingBits = bits;\n    let result = 0;\n    while (pendingBits > 0 && this._haveBits()) {\n      const byte = this._value[this._currentBytePos];\n      const availableBits = this._currentBitPos + 1;\n      const taking = Math.min(availableBits, pendingBits);\n      const value = byteBitsToInt(byte, availableBits - taking, taking);\n      result = (result << taking) + value;\n      pendingBits -= taking;\n      this._currentBitPos -= taking;\n      if (this._currentBitPos < 0) {\n        this._currentBitPos = 7;\n        this._currentBytePos--;\n      }\n    }\n    return result;\n  }\n  untake(bits) {\n    this._currentBitPos += bits;\n    while (this._currentBitPos > 7) {\n      this._currentBitPos -= 8;\n      this._currentBytePos += 1;\n    }\n  }\n  _haveBits() {\n    return this._currentBytePos >= 0;\n  }\n}\nfunction byteBitsToInt(byte, start, length) {\n  const mask = maskFor(start, length);\n  return (byte & mask) >>> start;\n}\nfunction maskFor(start, length) {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)];\n}","map":{"version":3,"names":["START_MASKS","STOP_MASKS","ConsumableBuffer","constructor","value","_value","_currentBytePos","length","_currentBitPos","availableBits","totalBits","take","bits","pendingBits","result","_haveBits","byte","taking","Math","min","byteBitsToInt","untake","start","mask","maskFor"],"sources":["../../src/consumable-buffer.ts"],"sourcesContent":[null],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAClB,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,CACX;AAED,MAAMC,UAAU,GAAG,CACjB,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,EACV,UAAU,CACX;AAED,OAAM,MAAOC,gBAAgB;EAK3BC,YAAaC,KAAiB;IAC5B,IAAI,CAACC,MAAM,GAAGD,KAAK;IACnB,IAAI,CAACE,eAAe,GAAGF,KAAK,CAACG,MAAM,GAAG,CAAC;IACvC,IAAI,CAACC,cAAc,GAAG,CAAC;EACzB;EAEAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACD,cAAc,GAAG,CAAC,GAAG,IAAI,CAACF,eAAe,GAAG,CAAC;EAC3D;EAEAI,SAASA,CAAA;IACP,OAAO,IAAI,CAACL,MAAM,CAACE,MAAM,GAAG,CAAC;EAC/B;EAEAI,IAAIA,CAAEC,IAAY;IAChB,IAAIC,WAAW,GAAGD,IAAI;IACtB,IAAIE,MAAM,GAAG,CAAC;IACd,OAAOD,WAAW,GAAG,CAAC,IAAI,IAAI,CAACE,SAAS,EAAE,EAAE;MAC1C,MAAMC,IAAI,GAAG,IAAI,CAACX,MAAM,CAAC,IAAI,CAACC,eAAe,CAAC;MAC9C,MAAMG,aAAa,GAAG,IAAI,CAACD,cAAc,GAAG,CAAC;MAC7C,MAAMS,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACV,aAAa,EAAEI,WAAW,CAAC;MACnD,MAAMT,KAAK,GAAGgB,aAAa,CAACJ,IAAI,EAAEP,aAAa,GAAGQ,MAAM,EAAEA,MAAM,CAAC;MACjEH,MAAM,GAAG,CAACA,MAAM,IAAIG,MAAM,IAAIb,KAAK;MAEnCS,WAAW,IAAII,MAAM;MAErB,IAAI,CAACT,cAAc,IAAIS,MAAM;MAC7B,IAAI,IAAI,CAACT,cAAc,GAAG,CAAC,EAAE;QAC3B,IAAI,CAACA,cAAc,GAAG,CAAC;QACvB,IAAI,CAACF,eAAe,EAAE;;;IAI1B,OAAOQ,MAAM;EACf;EAEAO,MAAMA,CAAET,IAAY;IAClB,IAAI,CAACJ,cAAc,IAAII,IAAI;IAC3B,OAAO,IAAI,CAACJ,cAAc,GAAG,CAAC,EAAE;MAC9B,IAAI,CAACA,cAAc,IAAI,CAAC;MACxB,IAAI,CAACF,eAAe,IAAI,CAAC;;EAE7B;EAEAS,SAASA,CAAA;IACP,OAAO,IAAI,CAACT,eAAe,IAAI,CAAC;EAClC;;AAGF,SAASc,aAAaA,CAAEJ,IAAY,EAAEM,KAAa,EAAEf,MAAc;EACjE,MAAMgB,IAAI,GAAGC,OAAO,CAACF,KAAK,EAAEf,MAAM,CAAC;EACnC,OAAO,CAACS,IAAI,GAAGO,IAAI,MAAMD,KAAK;AAChC;AAEA,SAASE,OAAOA,CAAEF,KAAa,EAAEf,MAAc;EAC7C,OAAOP,WAAW,CAACsB,KAAK,CAAC,GAAGrB,UAAU,CAACiB,IAAI,CAACC,GAAG,CAACZ,MAAM,GAAGe,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AACzE"},"metadata":{},"sourceType":"module","externalDependencies":[]}