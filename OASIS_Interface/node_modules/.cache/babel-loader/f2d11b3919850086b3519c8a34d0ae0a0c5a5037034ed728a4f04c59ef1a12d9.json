{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { generateKeyPair, marshalPrivateKey, unmarshalPrivateKey, marshalPublicKey, unmarshalPublicKey } from '@libp2p/crypto/keys';\nimport { peerIdFromKeys, peerIdFromBytes } from '@libp2p/peer-id';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { PeerIdProto } from './proto.js';\nexport const createEd25519PeerId = async () => {\n  const key = await generateKeyPair('Ed25519');\n  const id = await createFromPrivKey(key);\n  if (id.type === 'Ed25519') {\n    return id;\n  }\n  throw new Error(`Generated unexpected PeerId type \"${id.type}\"`);\n};\nexport const createSecp256k1PeerId = async () => {\n  const key = await generateKeyPair('secp256k1');\n  const id = await createFromPrivKey(key);\n  if (id.type === 'secp256k1') {\n    return id;\n  }\n  throw new Error(`Generated unexpected PeerId type \"${id.type}\"`);\n};\nexport const createRSAPeerId = async opts => {\n  const key = await generateKeyPair('RSA', opts?.bits ?? 2048);\n  const id = await createFromPrivKey(key);\n  if (id.type === 'RSA') {\n    return id;\n  }\n  throw new Error(`Generated unexpected PeerId type \"${id.type}\"`);\n};\nexport async function createFromPubKey(publicKey) {\n  return peerIdFromKeys(marshalPublicKey(publicKey));\n}\nexport async function createFromPrivKey(privateKey) {\n  return peerIdFromKeys(marshalPublicKey(privateKey.public), marshalPrivateKey(privateKey));\n}\nexport function exportToProtobuf(peerId, excludePrivateKey) {\n  return PeerIdProto.encode({\n    id: peerId.multihash.bytes,\n    pubKey: peerId.publicKey,\n    privKey: excludePrivateKey === true || peerId.privateKey == null ? undefined : peerId.privateKey\n  });\n}\nexport async function createFromProtobuf(buf) {\n  const {\n    id,\n    privKey,\n    pubKey\n  } = PeerIdProto.decode(buf);\n  return createFromParts(id ?? new Uint8Array(0), privKey, pubKey);\n}\nexport async function createFromJSON(obj) {\n  return createFromParts(uint8ArrayFromString(obj.id, 'base58btc'), obj.privKey != null ? uint8ArrayFromString(obj.privKey, 'base64pad') : undefined, obj.pubKey != null ? uint8ArrayFromString(obj.pubKey, 'base64pad') : undefined);\n}\nasync function createFromParts(multihash, privKey, pubKey) {\n  if (privKey != null) {\n    const key = await unmarshalPrivateKey(privKey);\n    return createFromPrivKey(key);\n  } else if (pubKey != null) {\n    const key = unmarshalPublicKey(pubKey);\n    return createFromPubKey(key);\n  }\n  return peerIdFromBytes(multihash);\n}","map":{"version":3,"names":["generateKeyPair","marshalPrivateKey","unmarshalPrivateKey","marshalPublicKey","unmarshalPublicKey","peerIdFromKeys","peerIdFromBytes","fromString","uint8ArrayFromString","PeerIdProto","createEd25519PeerId","key","id","createFromPrivKey","type","Error","createSecp256k1PeerId","createRSAPeerId","opts","bits","createFromPubKey","publicKey","privateKey","public","exportToProtobuf","peerId","excludePrivateKey","encode","multihash","bytes","pubKey","privKey","undefined","createFromProtobuf","buf","decode","createFromParts","Uint8Array","createFromJSON","obj"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}