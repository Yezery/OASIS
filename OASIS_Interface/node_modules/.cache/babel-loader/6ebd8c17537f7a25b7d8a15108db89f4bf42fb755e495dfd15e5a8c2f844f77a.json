{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { scheduleDailySummary } from \"@/api/axios/Sale\";\nimport * as echarts from \"echarts\";\nexport default {\n  data() {\n    return {\n      title: \"\",\n      isOpen: false,\n      subtitle: \"\",\n      chartOptions: {\n        title: {\n          text: \"\",\n          subtext: \"{b}\",\n          left: \"center\",\n          top: \"10%\",\n          color: \"#A1A2AF\",\n          fontFamily: \"Gilroy-Medium\",\n          fontSize: 20,\n          lineHeight: 24,\n          fontWeight: \"bold\",\n          subtextStyle: {\n            color: \"#ffffff\",\n            fontSize: 28,\n            fontFamily: \"Gilroy-Bold\",\n            fontWeight: \"bold\",\n            lineHeight: 36\n          }\n        },\n        xAxis: {\n          type: \"category\",\n          data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          },\n          axisLabel: {\n            color: \"#ffffff\",\n            //坐标值得具体的颜色\n            fontSize: window.innerHeight * 0.0123 + \"\",\n            fontFamily: \"Gilroy-Medium\"\n          },\n          boundaryGap: false // 坐标轴两侧留白策略\n        },\n\n        yAxis: {\n          show: false\n        },\n        series: [{\n          type: \"line\",\n          smooth: true,\n          data: [],\n          itemStyle: {\n            color: \"#55C960\",\n            //改变折线点的颜色\n            lineStyle: {\n              width: 6\n            }\n          },\n          emphasis: {\n            itemStyle: {\n              color: \"white\"\n            },\n            label: {\n              show: true,\n              // 显示提示标签\n              padding: [15, 25, 15, 25],\n              // 标签内边距\n              formatter: \"{b} {c} ETH\",\n              // 标签内容格式\n              fontWeight: \"bolder\",\n              borderRadius: [10, 10, 10, 10],\n              // 设置\n              borderColor: \"white\",\n              backgroundColor: \"#1e1e2c\",\n              // 标签背景色\n              position: \"bottom\",\n              fontSize: 14,\n              color: \"white\"\n            }\n          },\n          symbol: \"emptyCircle\",\n          // 空心圆作为转折点标志\n          symbolSize: 12,\n          // 转折点标志大小\n          lineStyle: {\n            type: \"solid\" // 折线类型为实线\n          },\n\n          areaStyle: {\n            // 折线图区域填充样式\n            color: {\n              type: \"linear\",\n              x: 0,\n              y: 0,\n              x2: 0,\n              y2: 1,\n              colorStops: [{\n                offset: 0,\n                color: \"rgba(0, 255, 0, 0.3)\" // 折线图填充色的起始颜色和透明度\n              }, {\n                offset: 1,\n                color: \"rgba(0, 255, 0, 0)\" // 折线图填充色的结束颜色和透明度\n              }],\n\n              globalCoord: false // 缺省为 false\n            }\n          }\n        }]\n      }\n    };\n  },\n\n  created() {\n    this.$emit(\"echart-change\", this.echartsChang);\n  },\n  mounted() {\n    this.init();\n  },\n  computed: {\n    Theme() {\n      return this.$store.state.Theme;\n    }\n  },\n  watch: {\n    Theme() {\n      this.echartsChang();\n    }\n  },\n  methods: {\n    isDayLight() {\n      var currdate = new Date();\n      if (currdate.getHours() >= 18 || currdate.getHours() < 6) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    echartsChang() {\n      echarts.dispose(document.getElementById(\"EchartsShow\"));\n      if (this.isOpen) {\n        var sum = 0;\n        for (let index = 0; index < this.chartOptions.series[0].data.length; index++) {\n          sum += this.chartOptions.series[0].data[index];\n        }\n        this.title = `Balance`;\n        this.subtitle = `${Number(sum)} ETH`;\n      }\n      let myChart = echarts.init(document.getElementById(\"EchartsShow\"));\n      if (this.$store.state.Theme) {\n        this.chartOptions.title.text = this.title;\n        this.chartOptions.title.subtext = this.subtitle;\n        this.chartOptions.title.subtextStyle.color = \"#000000\";\n        this.chartOptions.xAxis.axisLabel.color = \"#000000\";\n      } else {\n        this.chartOptions.title.text = this.title;\n        this.chartOptions.title.subtext = this.subtitle;\n        this.chartOptions.title.subtextStyle.color = \"#ffffff\";\n        this.chartOptions.xAxis.axisLabel.color = \"#ffffff\";\n      }\n      myChart.setOption(this.chartOptions);\n    },\n    async init() {\n      await scheduleDailySummary().then(re => {\n        console.log(re);\n        for (let index = 0; index < re.data.data.length; index++) {\n          this.chartOptions.series[0].data.push(Number(re.data.data[index].TotalTurnover.toString().slice(0, 4)));\n        }\n        this.echartsChang();\n        this.$refs.EchartBox.addEventListener(\"dblclick\", () => {\n          this.$refs.EchartBox.style.height = \"100px\";\n          setTimeout(() => {\n            this.isOpen = false;\n            this.subtitle = '';\n            this.title = '';\n            this.echartsChang();\n          }, 300);\n        });\n        this.$refs.EchartBox.addEventListener(\"click\", () => {\n          this.$refs.EchartBox.style.height = \"300px\";\n          setTimeout(() => {\n            this.isOpen = true;\n            this.echartsChang();\n          }, 300);\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["scheduleDailySummary","echarts","data","title","isOpen","subtitle","chartOptions","text","subtext","left","top","color","fontFamily","fontSize","lineHeight","fontWeight","subtextStyle","xAxis","type","axisLine","show","axisTick","axisLabel","window","innerHeight","boundaryGap","yAxis","series","smooth","itemStyle","lineStyle","width","emphasis","label","padding","formatter","borderRadius","borderColor","backgroundColor","position","symbol","symbolSize","areaStyle","x","y","x2","y2","colorStops","offset","globalCoord","created","$emit","echartsChang","mounted","init","computed","Theme","$store","state","watch","methods","isDayLight","currdate","Date","getHours","dispose","document","getElementById","sum","index","length","Number","myChart","setOption","then","re","console","log","push","TotalTurnover","toString","slice","$refs","EchartBox","addEventListener","style","height","setTimeout"],"sources":["src/views/bar/balanceEchart.vue"],"sourcesContent":["<template>\n  <div\n    id=\"EchartBox\"\n    ref=\"EchartBox\"\n  >\n    <div id=\"EchartsShow\" />\n  </div>\n</template>\n\n<script>\nimport { scheduleDailySummary } from \"@/api/axios/Sale\";\n  import * as echarts from \"echarts\";\n  export default {\n    data() {\n      return {\n        title: \"\",\n        isOpen:false,\n        subtitle: \"\",\n        chartOptions: {\n          title: {\n            text: \"\",\n            subtext: \"{b}\",\n            left: \"center\",\n            top: \"10%\",\n            color: \"#A1A2AF\",\n            fontFamily: \"Gilroy-Medium\",\n            fontSize: 20,\n            lineHeight: 24,\n            fontWeight: \"bold\",\n            subtextStyle: {\n              color: \"#ffffff\",\n              fontSize: 28,\n              fontFamily: \"Gilroy-Bold\",\n              fontWeight: \"bold\",\n              lineHeight: 36,\n            },\n          },\n          xAxis: {\n            type: \"category\",\n            data: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n            axisLine: {\n              show: false,\n            },\n            axisTick: {\n              show: false,\n            },\n            axisLabel: {\n              color: \"#ffffff\", //坐标值得具体的颜色\n              fontSize: window.innerHeight * 0.0123 + \"\",\n              fontFamily: \"Gilroy-Medium\",\n            },\n            boundaryGap: false, // 坐标轴两侧留白策略\n          },\n          yAxis: {\n            show: false,\n          },\n          series: [\n            {\n              type: \"line\",\n              smooth: true,\n              data: [],\n              itemStyle: {\n                color: \"#55C960\", //改变折线点的颜色\n                lineStyle: {\n                  width: 6,\n                },\n              },\n              emphasis: {\n                itemStyle: {\n                  color: \"white\",\n                },\n                label: {\n                  show: true, // 显示提示标签\n                  padding: [15, 25, 15, 25], // 标签内边距\n                  formatter: \"{b} {c} ETH\", // 标签内容格式\n                  fontWeight: \"bolder\",\n                  borderRadius: [10, 10, 10, 10], // 设置\n                  borderColor: \"white\",\n                  backgroundColor: \"#1e1e2c\", // 标签背景色\n                  position: \"bottom\",\n                  fontSize: 14,\n                  color: \"white\",\n                },\n              },\n              symbol: \"emptyCircle\", // 空心圆作为转折点标志\n              symbolSize: 12, // 转折点标志大小\n              lineStyle: {\n                type: \"solid\", // 折线类型为实线\n              },\n              areaStyle: {\n                // 折线图区域填充样式\n                color: {\n                  type: \"linear\",\n                  x: 0,\n                  y: 0,\n                  x2: 0,\n                  y2: 1,\n                  colorStops: [\n                    {\n                      offset: 0,\n                      color: \"rgba(0, 255, 0, 0.3)\", // 折线图填充色的起始颜色和透明度\n                    },\n                    {\n                      offset: 1,\n                      color: \"rgba(0, 255, 0, 0)\", // 折线图填充色的结束颜色和透明度\n                    },\n                  ],\n                  globalCoord: false, // 缺省为 false\n                },\n              },\n            },\n          ],\n        },\n        \n      };\n  },\n  created() {\n    this.$emit(\"echart-change\", this.echartsChang);\n  },\n  mounted() {\n    this.init()\n  },\n  computed:{\n      Theme() {\n\t\t\treturn this.$store.state.Theme;\n\t\t}\n  },\n  watch: {\n    Theme() {\n      this.echartsChang()\n    }\n    },\n  methods: {\n      isDayLight() {\n        var currdate = new Date();\n        if (currdate.getHours() >= 18 || currdate.getHours() < 6) {\n          return true;\n        } else {\n          return false;\n        }\n      },\n      echartsChang() {\n        echarts.dispose(document.getElementById(\"EchartsShow\"));\n        if (this.isOpen) {\n          var sum = 0;\n        for (\n          let index = 0;\n          index < this.chartOptions.series[0].data.length;\n          index++\n        ) {\n          sum += this.chartOptions.series[0].data[index];\n        }\n        this.title=`Balance`\n        this.subtitle = `${Number(sum)} ETH`;\n        }\n        let myChart = echarts.init(document.getElementById(\"EchartsShow\"));\n        if (this.$store.state.Theme) {\n          this.chartOptions.title.text = this.title;\n          this.chartOptions.title.subtext = this.subtitle;\n          this.chartOptions.title.subtextStyle.color = \"#000000\";\n          this.chartOptions.xAxis.axisLabel.color = \"#000000\";\n          \n        } else {\n          this.chartOptions.title.text = this.title;\n          this.chartOptions.title.subtext = this.subtitle;\n          this.chartOptions.title.subtextStyle.color = \"#ffffff\";\n          this.chartOptions.xAxis.axisLabel.color = \"#ffffff\";\n        }\n        myChart.setOption(this.chartOptions);\n      },\n      async init() {\n        await scheduleDailySummary().then(re => {\n          console.log(re);\n          for (let index = 0; index < re.data.data.length; index++) {\n          \n          this.chartOptions.series[0].data.push( Number(re.data.data[index].TotalTurnover.toString().slice(0, 4)))\n        }\n        this.echartsChang();\n        this.$refs.EchartBox.addEventListener(\"dblclick\", () => {\n          this.$refs.EchartBox.style.height = \"100px\";\n          setTimeout(() => {\n            this.isOpen = false\n          this.subtitle = ''\n          this.title =''\n          this.echartsChang();\n        }, 300);\n        });\n        this.$refs.EchartBox.addEventListener(\"click\", () => {\n          this.$refs.EchartBox.style.height = \"300px\";\n        setTimeout(() => {\n          this.isOpen=true\n          this.echartsChang();\n        }, 300);\n      });\n      })\n      }\n    },\n \n  };\n</script>\n\n<style lang=\"scss\" scoped>\n#EchartBox {\n  border: $globalBorder;\n  display: flex;\n  justify-content: flex-start;\n  width: 90%;\n  height: 100px;\n  background-color: var(--White--);\n  border-radius: $globalBorderRadius;\n\n  transition: $globalTransitionUI;\n  box-shadow: $globalboxshadowfrom;\n  &:hover {\n    box-shadow: $globalboxshadowto;\n    transition: $globalTransitionUI;\n  }\n \n  \n  \n}\n#EchartsShow {\n  width: 100%;\n  height: 100%;\n}\n</style>"],"mappings":";AAUA,SAAAA,oBAAA;AACA,YAAAC,OAAA;AACA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,MAAA;MACAC,QAAA;MACAC,YAAA;QACAH,KAAA;UACAI,IAAA;UACAC,OAAA;UACAC,IAAA;UACAC,GAAA;UACAC,KAAA;UACAC,UAAA;UACAC,QAAA;UACAC,UAAA;UACAC,UAAA;UACAC,YAAA;YACAL,KAAA;YACAE,QAAA;YACAD,UAAA;YACAG,UAAA;YACAD,UAAA;UACA;QACA;QACAG,KAAA;UACAC,IAAA;UACAhB,IAAA;UACAiB,QAAA;YACAC,IAAA;UACA;UACAC,QAAA;YACAD,IAAA;UACA;UACAE,SAAA;YACAX,KAAA;YAAA;YACAE,QAAA,EAAAU,MAAA,CAAAC,WAAA;YACAZ,UAAA;UACA;UACAa,WAAA;QACA;;QACAC,KAAA;UACAN,IAAA;QACA;QACAO,MAAA,GACA;UACAT,IAAA;UACAU,MAAA;UACA1B,IAAA;UACA2B,SAAA;YACAlB,KAAA;YAAA;YACAmB,SAAA;cACAC,KAAA;YACA;UACA;UACAC,QAAA;YACAH,SAAA;cACAlB,KAAA;YACA;YACAsB,KAAA;cACAb,IAAA;cAAA;cACAc,OAAA;cAAA;cACAC,SAAA;cAAA;cACApB,UAAA;cACAqB,YAAA;cAAA;cACAC,WAAA;cACAC,eAAA;cAAA;cACAC,QAAA;cACA1B,QAAA;cACAF,KAAA;YACA;UACA;UACA6B,MAAA;UAAA;UACAC,UAAA;UAAA;UACAX,SAAA;YACAZ,IAAA;UACA;;UACAwB,SAAA;YACA;YACA/B,KAAA;cACAO,IAAA;cACAyB,CAAA;cACAC,CAAA;cACAC,EAAA;cACAC,EAAA;cACAC,UAAA,GACA;gBACAC,MAAA;gBACArC,KAAA;cACA,GACA;gBACAqC,MAAA;gBACArC,KAAA;cACA,EACA;;cACAsC,WAAA;YACA;UACA;QACA;MAEA;IAEA;EACA;;EACAC,QAAA;IACA,KAAAC,KAAA,uBAAAC,YAAA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,QAAA;IACAC,MAAA;MACA,YAAAC,MAAA,CAAAC,KAAA,CAAAF,KAAA;IACA;EACA;EACAG,KAAA;IACAH,MAAA;MACA,KAAAJ,YAAA;IACA;EACA;EACAQ,OAAA;IACAC,WAAA;MACA,IAAAC,QAAA,OAAAC,IAAA;MACA,IAAAD,QAAA,CAAAE,QAAA,YAAAF,QAAA,CAAAE,QAAA;QACA;MACA;QACA;MACA;IACA;IACAZ,aAAA;MACAnD,OAAA,CAAAgE,OAAA,CAAAC,QAAA,CAAAC,cAAA;MACA,SAAA/D,MAAA;QACA,IAAAgE,GAAA;QACA,KACA,IAAAC,KAAA,MACAA,KAAA,QAAA/D,YAAA,CAAAqB,MAAA,IAAAzB,IAAA,CAAAoE,MAAA,EACAD,KAAA,IACA;UACAD,GAAA,SAAA9D,YAAA,CAAAqB,MAAA,IAAAzB,IAAA,CAAAmE,KAAA;QACA;QACA,KAAAlE,KAAA;QACA,KAAAE,QAAA,MAAAkE,MAAA,CAAAH,GAAA;MACA;MACA,IAAAI,OAAA,GAAAvE,OAAA,CAAAqD,IAAA,CAAAY,QAAA,CAAAC,cAAA;MACA,SAAAV,MAAA,CAAAC,KAAA,CAAAF,KAAA;QACA,KAAAlD,YAAA,CAAAH,KAAA,CAAAI,IAAA,QAAAJ,KAAA;QACA,KAAAG,YAAA,CAAAH,KAAA,CAAAK,OAAA,QAAAH,QAAA;QACA,KAAAC,YAAA,CAAAH,KAAA,CAAAa,YAAA,CAAAL,KAAA;QACA,KAAAL,YAAA,CAAAW,KAAA,CAAAK,SAAA,CAAAX,KAAA;MAEA;QACA,KAAAL,YAAA,CAAAH,KAAA,CAAAI,IAAA,QAAAJ,KAAA;QACA,KAAAG,YAAA,CAAAH,KAAA,CAAAK,OAAA,QAAAH,QAAA;QACA,KAAAC,YAAA,CAAAH,KAAA,CAAAa,YAAA,CAAAL,KAAA;QACA,KAAAL,YAAA,CAAAW,KAAA,CAAAK,SAAA,CAAAX,KAAA;MACA;MACA6D,OAAA,CAAAC,SAAA,MAAAnE,YAAA;IACA;IACA,MAAAgD,KAAA;MACA,MAAAtD,oBAAA,GAAA0E,IAAA,CAAAC,EAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,EAAA;QACA,SAAAN,KAAA,MAAAA,KAAA,GAAAM,EAAA,CAAAzE,IAAA,CAAAA,IAAA,CAAAoE,MAAA,EAAAD,KAAA;UAEA,KAAA/D,YAAA,CAAAqB,MAAA,IAAAzB,IAAA,CAAA4E,IAAA,CAAAP,MAAA,CAAAI,EAAA,CAAAzE,IAAA,CAAAA,IAAA,CAAAmE,KAAA,EAAAU,aAAA,CAAAC,QAAA,GAAAC,KAAA;QACA;QACA,KAAA7B,YAAA;QACA,KAAA8B,KAAA,CAAAC,SAAA,CAAAC,gBAAA;UACA,KAAAF,KAAA,CAAAC,SAAA,CAAAE,KAAA,CAAAC,MAAA;UACAC,UAAA;YACA,KAAAnF,MAAA;YACA,KAAAC,QAAA;YACA,KAAAF,KAAA;YACA,KAAAiD,YAAA;UACA;QACA;QACA,KAAA8B,KAAA,CAAAC,SAAA,CAAAC,gBAAA;UACA,KAAAF,KAAA,CAAAC,SAAA,CAAAE,KAAA,CAAAC,MAAA;UACAC,UAAA;YACA,KAAAnF,MAAA;YACA,KAAAgD,YAAA;UACA;QACA;MACA;IACA;EACA;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}