{"ast":null,"code":"/**\n * Module exports.\n */\n\nmodule.exports = dataUriToBuffer;\n\n/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @return {Buffer} Buffer instance from Data URI\n * @api public\n */\n\nfunction dataUriToBuffer(uri) {\n  if (!/^data\\:/i.test(uri)) {\n    throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n  }\n\n  // strip newlines\n  uri = uri.replace(/\\r?\\n/g, '');\n\n  // split the URI up into the \"metadata\" and the \"data\" portions\n  var firstComma = uri.indexOf(',');\n  if (-1 === firstComma || firstComma <= 4) throw new TypeError('malformed data: URI');\n\n  // remove the \"data:\" scheme and parse the metadata\n  var meta = uri.substring(5, firstComma).split(';');\n  var base64 = false;\n  var charset = 'US-ASCII';\n  for (var i = 0; i < meta.length; i++) {\n    if ('base64' == meta[i]) {\n      base64 = true;\n    } else if (0 == meta[i].indexOf('charset=')) {\n      charset = meta[i].substring(8);\n    }\n  }\n\n  // get the encoded data portion and decode URI-encoded chars\n  var data = unescape(uri.substring(firstComma + 1));\n  var encoding = base64 ? 'base64' : 'ascii';\n  var buffer = new Buffer(data, encoding);\n\n  // set `.type` property to MIME type\n  buffer.type = meta[0] || 'text/plain';\n\n  // set the `.charset` property\n  buffer.charset = charset;\n  return buffer;\n}","map":{"version":3,"names":["module","exports","dataUriToBuffer","uri","test","TypeError","replace","firstComma","indexOf","meta","substring","split","base64","charset","i","length","data","unescape","encoding","buffer","Buffer","type"],"sources":["/Users/yezery/Desktop/OASIS/OASIS_Interface/node_modules/.store/data-uri-to-buffer@0.0.3/node_modules/data-uri-to-buffer/index.js"],"sourcesContent":["\n/**\n * Module exports.\n */\n\nmodule.exports = dataUriToBuffer;\n\n/**\n * Returns a `Buffer` instance from the given data URI `uri`.\n *\n * @param {String} uri Data URI to turn into a Buffer instance\n * @return {Buffer} Buffer instance from Data URI\n * @api public\n */\n\nfunction dataUriToBuffer (uri) {\n  if (!/^data\\:/i.test(uri)) {\n    throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n  }\n\n  // strip newlines\n  uri = uri.replace(/\\r?\\n/g, '');\n\n  // split the URI up into the \"metadata\" and the \"data\" portions\n  var firstComma = uri.indexOf(',');\n  if (-1 === firstComma || firstComma <= 4) throw new TypeError('malformed data: URI');\n\n  // remove the \"data:\" scheme and parse the metadata\n  var meta = uri.substring(5, firstComma).split(';');\n\n  var base64 = false;\n  var charset = 'US-ASCII';\n  for (var i = 0; i < meta.length; i++) {\n    if ('base64' == meta[i]) {\n      base64 = true;\n    } else if (0 == meta[i].indexOf('charset=')) {\n      charset = meta[i].substring(8);\n    }\n  }\n\n  // get the encoded data portion and decode URI-encoded chars\n  var data = unescape(uri.substring(firstComma + 1));\n\n  var encoding = base64 ? 'base64' : 'ascii';\n  var buffer = new Buffer(data, encoding);\n\n  // set `.type` property to MIME type\n  buffer.type = meta[0] || 'text/plain';\n\n  // set the `.charset` property\n  buffer.charset = charset;\n\n  return buffer;\n}\n"],"mappings":"AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAO,GAAGC,eAAe;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,eAAeA,CAAEC,GAAG,EAAE;EAC7B,IAAI,CAAC,UAAU,CAACC,IAAI,CAACD,GAAG,CAAC,EAAE;IACzB,MAAM,IAAIE,SAAS,CAAC,kEAAkE,CAAC;EACzF;;EAEA;EACAF,GAAG,GAAGA,GAAG,CAACG,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;;EAE/B;EACA,IAAIC,UAAU,GAAGJ,GAAG,CAACK,OAAO,CAAC,GAAG,CAAC;EACjC,IAAI,CAAC,CAAC,KAAKD,UAAU,IAAIA,UAAU,IAAI,CAAC,EAAE,MAAM,IAAIF,SAAS,CAAC,qBAAqB,CAAC;;EAEpF;EACA,IAAII,IAAI,GAAGN,GAAG,CAACO,SAAS,CAAC,CAAC,EAAEH,UAAU,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC;EAElD,IAAIC,MAAM,GAAG,KAAK;EAClB,IAAIC,OAAO,GAAG,UAAU;EACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,IAAI,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;IACpC,IAAI,QAAQ,IAAIL,IAAI,CAACK,CAAC,CAAC,EAAE;MACvBF,MAAM,GAAG,IAAI;IACf,CAAC,MAAM,IAAI,CAAC,IAAIH,IAAI,CAACK,CAAC,CAAC,CAACN,OAAO,CAAC,UAAU,CAAC,EAAE;MAC3CK,OAAO,GAAGJ,IAAI,CAACK,CAAC,CAAC,CAACJ,SAAS,CAAC,CAAC,CAAC;IAChC;EACF;;EAEA;EACA,IAAIM,IAAI,GAAGC,QAAQ,CAACd,GAAG,CAACO,SAAS,CAACH,UAAU,GAAG,CAAC,CAAC,CAAC;EAElD,IAAIW,QAAQ,GAAGN,MAAM,GAAG,QAAQ,GAAG,OAAO;EAC1C,IAAIO,MAAM,GAAG,IAAIC,MAAM,CAACJ,IAAI,EAAEE,QAAQ,CAAC;;EAEvC;EACAC,MAAM,CAACE,IAAI,GAAGZ,IAAI,CAAC,CAAC,CAAC,IAAI,YAAY;;EAErC;EACAU,MAAM,CAACN,OAAO,GAAGA,OAAO;EAExB,OAAOM,MAAM;AACf"},"metadata":{},"sourceType":"script","externalDependencies":[]}