{"ast":null,"code":"import { toUrlSearchParams } from '../../../lib/to-url-search-params.js';\nimport { decodeRemoteService } from './utils.js';\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createLs(client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"ls\"]}\n   */\n  async function ls(options = {}) {\n    // @ts-expect-error cannot derive option type from typedef\n    const {\n      stat,\n      headers,\n      timeout,\n      signal\n    } = options;\n    const response = await client.post('pin/remote/service/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: stat === true ? toUrlSearchParams({\n        stat\n      }) : undefined\n    });\n\n    /** @type {{RemoteServices: object[]}} */\n    const {\n      RemoteServices\n    } = await response.json();\n    return RemoteServices.map(decodeRemoteService);\n  }\n  return ls;\n}","map":{"version":3,"names":["toUrlSearchParams","decodeRemoteService","createLs","client","ls","options","stat","headers","timeout","signal","response","post","searchParams","undefined","RemoteServices","json","map"],"sources":["/Users/yezery/Desktop/OASIS/OASIS_Interface/node_modules/.store/ipfs-http-client@60.0.1/node_modules/ipfs-http-client/src/pin/remote/service/ls.js"],"sourcesContent":["import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\nimport { decodeRemoteService } from './utils.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createLs (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    // @ts-expect-error cannot derive option type from typedef\n    const { stat, headers, timeout, signal } = options\n\n    const response = await client.post('pin/remote/service/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: stat === true ? toUrlSearchParams({ stat }) : undefined\n    })\n\n    /** @type {{RemoteServices: object[]}} */\n    const { RemoteServices } = await response.json()\n\n    return RemoteServices.map(decodeRemoteService)\n  }\n\n  return ls\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,sCAAsC;AACxE,SAASC,mBAAmB,QAAQ,YAAY;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAAEC,MAAM,EAAE;EAChC;AACF;AACA;EACE,eAAeC,EAAEA,CAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC/B;IACA,MAAM;MAAEC,IAAI;MAAEC,OAAO;MAAEC,OAAO;MAAEC;IAAO,CAAC,GAAGJ,OAAO;IAElD,MAAMK,QAAQ,GAAG,MAAMP,MAAM,CAACQ,IAAI,CAAC,uBAAuB,EAAE;MAC1DH,OAAO;MACPC,MAAM;MACNF,OAAO;MACPK,YAAY,EAAEN,IAAI,KAAK,IAAI,GAAGN,iBAAiB,CAAC;QAAEM;MAAK,CAAC,CAAC,GAAGO;IAC9D,CAAC,CAAC;;IAEF;IACA,MAAM;MAAEC;IAAe,CAAC,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAEhD,OAAOD,cAAc,CAACE,GAAG,CAACf,mBAAmB,CAAC;EAChD;EAEA,OAAOG,EAAE;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}