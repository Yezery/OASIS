{"ast":null,"code":"import { Netmask } from 'netmask';\nimport ip_regex from 'ip-regex';\nimport { isIP } from '@chainsafe/is-ip';\nimport ipaddr from 'ipaddr.js';\nconst {\n  isValid: is_valid,\n  parse\n} = ipaddr;\nconst PRIVATE_IP_RANGES = ['0.0.0.0/8', '10.0.0.0/8', '100.64.0.0/10', '127.0.0.0/8', '169.254.0.0/16', '172.16.0.0/12', '192.0.0.0/24', '192.0.0.0/29', '192.0.0.8/32', '192.0.0.9/32', '192.0.0.10/32', '192.0.0.170/32', '192.0.0.171/32', '192.0.2.0/24', '192.31.196.0/24', '192.52.193.0/24', '192.88.99.0/24', '192.168.0.0/16', '192.175.48.0/24', '198.18.0.0/15', '198.51.100.0/24', '203.0.113.0/24', '240.0.0.0/4', '255.255.255.255/32'];\nconst NETMASK_RANGES = PRIVATE_IP_RANGES.map(ip_range => new Netmask(ip_range));\nfunction ipv4_check(ip_addr) {\n  for (let r of NETMASK_RANGES) {\n    if (r.contains(ip_addr)) return true;\n  }\n  return false;\n}\nfunction ipv6_check(ip_addr) {\n  return /^::$/.test(ip_addr) || /^::1$/.test(ip_addr) || /^::f{4}:([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) || /^::f{4}:0.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) || /^64:ff9b::([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) || /^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) || /^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) || /^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) || /^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) || /^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) || /^f[c-d]([0-9a-fA-F]{2,2}):/i.test(ip_addr) || /^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(ip_addr) || /^ff([0-9a-fA-F]{2,2}):/i.test(ip_addr);\n}\nexport default (ip => {\n  if (is_valid(ip)) {\n    const parsed = parse(ip);\n    if (parsed.kind() === 'ipv4') return ipv4_check(parsed.toNormalizedString());else if (parsed.kind() === 'ipv6') return ipv6_check(ip);\n  } else if (isIP(ip) && ip_regex.v6().test(ip)) return ipv6_check(ip);\n  return undefined;\n});","map":{"version":3,"names":["Netmask","ip_regex","isIP","ipaddr","isValid","is_valid","parse","PRIVATE_IP_RANGES","NETMASK_RANGES","map","ip_range","ipv4_check","ip_addr","r","contains","ipv6_check","test","ip","parsed","kind","toNormalizedString","v6","undefined"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/private-ip@3.0.1/node_modules/private-ip/lib/index.js"],"sourcesContent":["import { Netmask } from 'netmask';\nimport ip_regex from 'ip-regex';\nimport { isIP } from '@chainsafe/is-ip';\nimport ipaddr from 'ipaddr.js';\nconst { isValid: is_valid, parse } = ipaddr;\nconst PRIVATE_IP_RANGES = [\n    '0.0.0.0/8',\n    '10.0.0.0/8',\n    '100.64.0.0/10',\n    '127.0.0.0/8',\n    '169.254.0.0/16',\n    '172.16.0.0/12',\n    '192.0.0.0/24',\n    '192.0.0.0/29',\n    '192.0.0.8/32',\n    '192.0.0.9/32',\n    '192.0.0.10/32',\n    '192.0.0.170/32',\n    '192.0.0.171/32',\n    '192.0.2.0/24',\n    '192.31.196.0/24',\n    '192.52.193.0/24',\n    '192.88.99.0/24',\n    '192.168.0.0/16',\n    '192.175.48.0/24',\n    '198.18.0.0/15',\n    '198.51.100.0/24',\n    '203.0.113.0/24',\n    '240.0.0.0/4',\n    '255.255.255.255/32'\n];\nconst NETMASK_RANGES = PRIVATE_IP_RANGES.map(ip_range => new Netmask(ip_range));\nfunction ipv4_check(ip_addr) {\n    for (let r of NETMASK_RANGES) {\n        if (r.contains(ip_addr))\n            return true;\n    }\n    return false;\n}\nfunction ipv6_check(ip_addr) {\n    return /^::$/.test(ip_addr) ||\n        /^::1$/.test(ip_addr) ||\n        /^::f{4}:([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) ||\n        /^::f{4}:0.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) ||\n        /^64:ff9b::([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})\\.([0-9]{1,3})$/.test(ip_addr) ||\n        /^100::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^2001::([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^2001:2[0-9a-fA-F]:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^2001:db8:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^2002:([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4}):?([0-9a-fA-F]{0,4})$/.test(ip_addr) ||\n        /^f[c-d]([0-9a-fA-F]{2,2}):/i.test(ip_addr) ||\n        /^fe[8-9a-bA-B][0-9a-fA-F]:/i.test(ip_addr) ||\n        /^ff([0-9a-fA-F]{2,2}):/i.test(ip_addr);\n}\nexport default (ip) => {\n    if (is_valid(ip)) {\n        const parsed = parse(ip);\n        if (parsed.kind() === 'ipv4')\n            return ipv4_check(parsed.toNormalizedString());\n        else if (parsed.kind() === 'ipv6')\n            return ipv6_check(ip);\n    }\n    else if (isIP(ip) && ip_regex.v6().test(ip))\n        return ipv6_check(ip);\n    return undefined;\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,SAAS;AACjC,OAAOC,QAAQ,MAAM,UAAU;AAC/B,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,WAAW;AAC9B,MAAM;EAAEC,OAAO,EAAEC,QAAQ;EAAEC;AAAM,CAAC,GAAGH,MAAM;AAC3C,MAAMI,iBAAiB,GAAG,CACtB,WAAW,EACX,YAAY,EACZ,eAAe,EACf,aAAa,EACb,gBAAgB,EAChB,eAAe,EACf,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,eAAe,EACf,gBAAgB,EAChB,gBAAgB,EAChB,cAAc,EACd,iBAAiB,EACjB,iBAAiB,EACjB,gBAAgB,EAChB,gBAAgB,EAChB,iBAAiB,EACjB,eAAe,EACf,iBAAiB,EACjB,gBAAgB,EAChB,aAAa,EACb,oBAAoB,CACvB;AACD,MAAMC,cAAc,GAAGD,iBAAiB,CAACE,GAAG,CAACC,QAAQ,IAAI,IAAIV,OAAO,CAACU,QAAQ,CAAC,CAAC;AAC/E,SAASC,UAAUA,CAACC,OAAO,EAAE;EACzB,KAAK,IAAIC,CAAC,IAAIL,cAAc,EAAE;IAC1B,IAAIK,CAAC,CAACC,QAAQ,CAACF,OAAO,CAAC,EACnB,OAAO,IAAI;EACnB;EACA,OAAO,KAAK;AAChB;AACA,SAASG,UAAUA,CAACH,OAAO,EAAE;EACzB,OAAO,MAAM,CAACI,IAAI,CAACJ,OAAO,CAAC,IACvB,OAAO,CAACI,IAAI,CAACJ,OAAO,CAAC,IACrB,iEAAiE,CAACI,IAAI,CAACJ,OAAO,CAAC,IAC/E,mEAAmE,CAACI,IAAI,CAACJ,OAAO,CAAC,IACjF,mEAAmE,CAACI,IAAI,CAACJ,OAAO,CAAC,IACjF,uFAAuF,CAACI,IAAI,CAACJ,OAAO,CAAC,IACrG,gIAAgI,CAACI,IAAI,CAACJ,OAAO,CAAC,IAC9I,4IAA4I,CAACI,IAAI,CAACJ,OAAO,CAAC,IAC1J,mIAAmI,CAACI,IAAI,CAACJ,OAAO,CAAC,IACjJ,mJAAmJ,CAACI,IAAI,CAACJ,OAAO,CAAC,IACjK,6BAA6B,CAACI,IAAI,CAACJ,OAAO,CAAC,IAC3C,6BAA6B,CAACI,IAAI,CAACJ,OAAO,CAAC,IAC3C,yBAAyB,CAACI,IAAI,CAACJ,OAAO,CAAC;AAC/C;AACA,gBAAgBK,EAAE,IAAK;EACnB,IAAIZ,QAAQ,CAACY,EAAE,CAAC,EAAE;IACd,MAAMC,MAAM,GAAGZ,KAAK,CAACW,EAAE,CAAC;IACxB,IAAIC,MAAM,CAACC,IAAI,CAAC,CAAC,KAAK,MAAM,EACxB,OAAOR,UAAU,CAACO,MAAM,CAACE,kBAAkB,CAAC,CAAC,CAAC,CAAC,KAC9C,IAAIF,MAAM,CAACC,IAAI,CAAC,CAAC,KAAK,MAAM,EAC7B,OAAOJ,UAAU,CAACE,EAAE,CAAC;EAC7B,CAAC,MACI,IAAIf,IAAI,CAACe,EAAE,CAAC,IAAIhB,QAAQ,CAACoB,EAAE,CAAC,CAAC,CAACL,IAAI,CAACC,EAAE,CAAC,EACvC,OAAOF,UAAU,CAACE,EAAE,CAAC;EACzB,OAAOK,SAAS;AACpB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}