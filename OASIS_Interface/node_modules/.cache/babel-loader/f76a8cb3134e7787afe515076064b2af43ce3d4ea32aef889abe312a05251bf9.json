{"ast":null,"code":"import { fromBase64url, toBase64url } from './utils.js';\nexport function fromSplit(split) {\n  const [protectedHeader, encrypted_key, iv, ciphertext, tag] = split;\n  const jwe = {\n    ciphertext,\n    iv,\n    protected: protectedHeader,\n    tag\n  };\n  if (encrypted_key) jwe.recipients = [{\n    encrypted_key\n  }];\n  return jwe;\n}\nfunction encodeRecipient(recipient) {\n  const encRec = {};\n  if (recipient.encrypted_key) encRec.encrypted_key = fromBase64url(recipient.encrypted_key);\n  if (recipient.header) encRec.header = recipient.header;\n  return encRec;\n}\nexport function encode(jwe) {\n  const encJwe = {\n    ciphertext: fromBase64url(jwe.ciphertext),\n    protected: fromBase64url(jwe.protected),\n    iv: fromBase64url(jwe.iv),\n    tag: fromBase64url(jwe.tag)\n  };\n  if (jwe.aad) encJwe.aad = fromBase64url(jwe.aad);\n  if (jwe.recipients) encJwe.recipients = jwe.recipients.map(encodeRecipient);\n  if (jwe.unprotected) encJwe.unprotected = jwe.unprotected;\n  return encJwe;\n}\nfunction decodeRecipient(encoded) {\n  const recipient = {};\n  if (encoded.encrypted_key) recipient.encrypted_key = toBase64url(encoded.encrypted_key);\n  if (encoded.header) recipient.header = encoded.header;\n  return recipient;\n}\nexport function decode(encoded) {\n  const jwe = {\n    ciphertext: toBase64url(encoded.ciphertext),\n    protected: toBase64url(encoded.protected),\n    iv: toBase64url(encoded.iv),\n    tag: toBase64url(encoded.tag)\n  };\n  if (encoded.aad) jwe.aad = toBase64url(encoded.aad);\n  if (encoded.recipients) jwe.recipients = encoded.recipients.map(decodeRecipient);\n  if (encoded.unprotected) jwe.unprotected = encoded.unprotected;\n  return jwe;\n}","map":{"version":3,"names":["fromBase64url","toBase64url","fromSplit","split","protectedHeader","encrypted_key","iv","ciphertext","tag","jwe","protected","recipients","encodeRecipient","recipient","encRec","header","encode","encJwe","aad","map","unprotected","decodeRecipient","encoded","decode"],"sources":["../src/encryption.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,aAAa,EAAEC,WAAW,QAAQ,YAAY;AAgCvD,OAAM,SAAUC,SAASA,CAACC,KAAoB;EAC5C,MAAM,CAACC,eAAe,EAAEC,aAAa,EAAEC,EAAE,EAAEC,UAAU,EAAEC,GAAG,CAAC,GAAGL,KAAK;EACnE,MAAMM,GAAG,GAAW;IAClBF,UAAU;IACVD,EAAE;IACFI,SAAS,EAAEN,eAAe;IAC1BI;GACD;EACD,IAAIH,aAAa,EAAEI,GAAG,CAACE,UAAU,GAAG,CAAC;IAAEN;EAAa,CAAE,CAAC;EACvD,OAAOI,GAAG;AACZ;AAEA,SAASG,eAAeA,CAACC,SAAuB;EAC9C,MAAMC,MAAM,GAAqB,EAAE;EACnC,IAAID,SAAS,CAACR,aAAa,EAAES,MAAM,CAACT,aAAa,GAAGL,aAAa,CAACa,SAAS,CAACR,aAAa,CAAC;EAC1F,IAAIQ,SAAS,CAACE,MAAM,EAAED,MAAM,CAACC,MAAM,GAAGF,SAAS,CAACE,MAAM;EACtD,OAAOD,MAAM;AACf;AAEA,OAAM,SAAUE,MAAMA,CAACP,GAAW;EAChC,MAAMQ,MAAM,GAAe;IACzBV,UAAU,EAAEP,aAAa,CAACS,GAAG,CAACF,UAAU,CAAC;IACzCG,SAAS,EAAEV,aAAa,CAACS,GAAG,CAACC,SAAS,CAAC;IACvCJ,EAAE,EAAEN,aAAa,CAACS,GAAG,CAACH,EAAE,CAAC;IACzBE,GAAG,EAAER,aAAa,CAACS,GAAG,CAACD,GAAG;GAC3B;EACD,IAAIC,GAAG,CAACS,GAAG,EAAED,MAAM,CAACC,GAAG,GAAGlB,aAAa,CAACS,GAAG,CAACS,GAAG,CAAC;EAChD,IAAIT,GAAG,CAACE,UAAU,EAAEM,MAAM,CAACN,UAAU,GAAGF,GAAG,CAACE,UAAU,CAACQ,GAAG,CAACP,eAAe,CAAC;EAC3E,IAAIH,GAAG,CAACW,WAAW,EAAEH,MAAM,CAACG,WAAW,GAAGX,GAAG,CAACW,WAAW;EACzD,OAAOH,MAAM;AACf;AAEA,SAASI,eAAeA,CAACC,OAAyB;EAChD,MAAMT,SAAS,GAAiB,EAAE;EAClC,IAAIS,OAAO,CAACjB,aAAa,EAAEQ,SAAS,CAACR,aAAa,GAAGJ,WAAW,CAACqB,OAAO,CAACjB,aAAa,CAAC;EACvF,IAAIiB,OAAO,CAACP,MAAM,EAAEF,SAAS,CAACE,MAAM,GAAGO,OAAO,CAACP,MAAM;EACrD,OAAOF,SAAS;AAClB;AAEA,OAAM,SAAUU,MAAMA,CAACD,OAAmB;EACxC,MAAMb,GAAG,GAAW;IAClBF,UAAU,EAAEN,WAAW,CAACqB,OAAO,CAACf,UAAU,CAAC;IAC3CG,SAAS,EAAET,WAAW,CAACqB,OAAO,CAACZ,SAAS,CAAC;IACzCJ,EAAE,EAAEL,WAAW,CAACqB,OAAO,CAAChB,EAAE,CAAC;IAC3BE,GAAG,EAAEP,WAAW,CAACqB,OAAO,CAACd,GAAG;GAC7B;EACD,IAAIc,OAAO,CAACJ,GAAG,EAAET,GAAG,CAACS,GAAG,GAAGjB,WAAW,CAACqB,OAAO,CAACJ,GAAG,CAAC;EACnD,IAAII,OAAO,CAACX,UAAU,EAAEF,GAAG,CAACE,UAAU,GAAGW,OAAO,CAACX,UAAU,CAACQ,GAAG,CAACE,eAAe,CAAC;EAChF,IAAIC,OAAO,CAACF,WAAW,EAAEX,GAAG,CAACW,WAAW,GAAGE,OAAO,CAACF,WAAW;EAC9D,OAAOX,GAAG;AACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}