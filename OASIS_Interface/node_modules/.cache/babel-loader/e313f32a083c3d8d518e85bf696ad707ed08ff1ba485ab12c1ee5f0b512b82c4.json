{"ast":null,"code":"import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { base64url } from 'multiformats/bases/base64';\n\n/* HTTP RPC:\n * - wraps binary data in multibase. base64url is used to avoid issues\n *   when a binary data is passed as search param in URL.\n *   Historical context: https://github.com/ipfs/go-ipfs/issues/7939\n *   Multibase wrapping introduced in: https://github.com/ipfs/go-ipfs/pull/8183\n */\n\n/**\n * @param {Array<string>} strings\n * @returns {Array<string>} strings\n */\nconst rpcArrayToTextArray = strings => {\n  if (Array.isArray(strings)) {\n    return strings.map(rpcToText);\n  }\n  return strings;\n};\n\n/**\n * @param {string} mb\n * @returns {string}\n */\nconst rpcToText = mb => uint8ArrayToString(rpcToBytes(mb));\n\n/**\n * @param {string} mb\n * @returns {Uint8Array}\n */\nconst rpcToBytes = mb => base64url.decode(mb);\n\n/**\n * @param {string} mb\n * @returns {bigint}\n */\nconst rpcToBigInt = mb => BigInt(`0x${uint8ArrayToString(base64url.decode(mb), 'base16')}`);\n\n/**\n * @param {string} text\n * @returns {string}\n */\nconst textToUrlSafeRpc = text => base64url.encode(uint8ArrayFromString(text));\nexport { rpcArrayToTextArray, rpcToText, rpcToBytes, rpcToBigInt, textToUrlSafeRpc };","map":{"version":3,"names":["fromString","uint8ArrayFromString","toString","uint8ArrayToString","base64url","rpcArrayToTextArray","strings","Array","isArray","map","rpcToText","mb","rpcToBytes","decode","rpcToBigInt","BigInt","textToUrlSafeRpc","text","encode"],"sources":["/Users/yezery/Documents/大学素材/毕业设计/OASIS/OASIS_Interface/node_modules/.store/ipfs-http-client@60.0.1/node_modules/ipfs-http-client/src/lib/http-rpc-wire-format.js"],"sourcesContent":["import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { base64url } from 'multiformats/bases/base64'\n\n/* HTTP RPC:\n * - wraps binary data in multibase. base64url is used to avoid issues\n *   when a binary data is passed as search param in URL.\n *   Historical context: https://github.com/ipfs/go-ipfs/issues/7939\n *   Multibase wrapping introduced in: https://github.com/ipfs/go-ipfs/pull/8183\n */\n\n/**\n * @param {Array<string>} strings\n * @returns {Array<string>} strings\n */\nconst rpcArrayToTextArray = strings => {\n  if (Array.isArray(strings)) {\n    return strings.map(rpcToText)\n  }\n  return strings\n}\n\n/**\n * @param {string} mb\n * @returns {string}\n */\nconst rpcToText = mb => uint8ArrayToString(rpcToBytes(mb))\n\n/**\n * @param {string} mb\n * @returns {Uint8Array}\n */\nconst rpcToBytes = mb => base64url.decode(mb)\n\n/**\n * @param {string} mb\n * @returns {bigint}\n */\nconst rpcToBigInt = mb => BigInt(`0x${uint8ArrayToString(base64url.decode(mb), 'base16')}`)\n\n/**\n * @param {string} text\n * @returns {string}\n */\nconst textToUrlSafeRpc = text => base64url.encode(uint8ArrayFromString(text))\n\nexport { rpcArrayToTextArray, rpcToText, rpcToBytes, rpcToBigInt, textToUrlSafeRpc }\n"],"mappings":"AAAA,SAASA,UAAU,IAAIC,oBAAoB,QAAQ,yBAAyB;AAC5E,SAASC,QAAQ,IAAIC,kBAAkB,QAAQ,uBAAuB;AACtE,SAASC,SAAS,QAAQ,2BAA2B;;AAErD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,GAAGC,OAAO,IAAI;EACrC,IAAIC,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE;IAC1B,OAAOA,OAAO,CAACG,GAAG,CAACC,SAAS,CAAC;EAC/B;EACA,OAAOJ,OAAO;AAChB,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAMI,SAAS,GAAGC,EAAE,IAAIR,kBAAkB,CAACS,UAAU,CAACD,EAAE,CAAC,CAAC;;AAE1D;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAGD,EAAE,IAAIP,SAAS,CAACS,MAAM,CAACF,EAAE,CAAC;;AAE7C;AACA;AACA;AACA;AACA,MAAMG,WAAW,GAAGH,EAAE,IAAII,MAAM,CAAE,KAAIZ,kBAAkB,CAACC,SAAS,CAACS,MAAM,CAACF,EAAE,CAAC,EAAE,QAAQ,CAAE,EAAC,CAAC;;AAE3F;AACA;AACA;AACA;AACA,MAAMK,gBAAgB,GAAGC,IAAI,IAAIb,SAAS,CAACc,MAAM,CAACjB,oBAAoB,CAACgB,IAAI,CAAC,CAAC;AAE7E,SAASZ,mBAAmB,EAAEK,SAAS,EAAEE,UAAU,EAAEE,WAAW,EAAEE,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}