{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createLocalAddrs({\n  network\n}) {\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API<{}>[\"localAddrs\"]}\n   */\n  async function localAddrs(options = {}) {\n    const {\n      libp2p\n    } = await network.use(options);\n    return libp2p.getMultiaddrs();\n  }\n  return withTimeoutOption(localAddrs);\n}","map":{"version":3,"names":["withTimeoutOption","createLocalAddrs","network","localAddrs","options","libp2p","use","getMultiaddrs"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-core@0.18.1/node_modules/ipfs-core/src/components/swarm/local-addrs.js"],"sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createLocalAddrs ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API<{}>[\"localAddrs\"]}\n   */\n  async function localAddrs (options = {}) {\n    const { libp2p } = await network.use(options)\n    return libp2p.getMultiaddrs()\n  }\n\n  return withTimeoutOption(localAddrs)\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,qCAAqC;;AAEvE;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAAE;EAAEC;AAAQ,CAAC,EAAE;EAC7C;AACF;AACA;EACE,eAAeC,UAAUA,CAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACvC,MAAM;MAAEC;IAAO,CAAC,GAAG,MAAMH,OAAO,CAACI,GAAG,CAACF,OAAO,CAAC;IAC7C,OAAOC,MAAM,CAACE,aAAa,CAAC,CAAC;EAC/B;EAEA,OAAOP,iBAAiB,CAACG,UAAU,CAAC;AACtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}