{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OneHot, util } from '@tensorflow/tfjs-core';\nimport { OneHotProgram } from '../onehot_gpu';\nimport { reshape } from './Reshape';\nexport const oneHot = args => {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    indices\n  } = inputs;\n  const {\n    depth,\n    onValue,\n    offValue\n  } = attrs;\n  const indicesSize = util.sizeFromShape(indices.shape);\n  const program = new OneHotProgram(indicesSize, depth, onValue, offValue);\n  const reshaped = reshape({\n    inputs: {\n      x: indices\n    },\n    backend,\n    attrs: {\n      shape: [indicesSize]\n    }\n  });\n  const result = backend.runWebGLProgram(program, [reshaped], indices.dtype);\n  backend.disposeIntermediateTensorInfo(reshaped);\n  const outShape = [...indices.shape, depth];\n  const out = reshape({\n    inputs: {\n      x: result\n    },\n    backend,\n    attrs: {\n      shape: outShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(result);\n  return out;\n};\nexport const oneHotConfig = {\n  kernelName: OneHot,\n  backendName: 'webgl',\n  kernelFunc: oneHot\n};","map":{"version":3,"names":["OneHot","util","OneHotProgram","reshape","oneHot","args","inputs","backend","attrs","indices","depth","onValue","offValue","indicesSize","sizeFromShape","shape","program","reshaped","x","result","runWebGLProgram","dtype","disposeIntermediateTensorInfo","outShape","out","oneHotConfig","kernelName","backendName","kernelFunc"],"sources":["../../../../../../tfjs-backend-webgl/src/kernels/OneHot.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, OneHot, OneHotAttrs, OneHotInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {OneHotProgram} from '../onehot_gpu';\nimport {reshape} from './Reshape';\n\nexport const oneHot = (args: {\n  inputs: OneHotInputs,\n  backend: MathBackendWebGL,\n  attrs: OneHotAttrs\n}): TensorInfo => {\n  const {inputs, backend, attrs} = args;\n  const {indices} = inputs;\n  const {depth, onValue, offValue} = attrs;\n\n  const indicesSize = util.sizeFromShape(indices.shape);\n  const program = new OneHotProgram(indicesSize, depth, onValue, offValue);\n  const reshaped =\n      reshape({inputs: {x: indices}, backend, attrs: {shape: [indicesSize]}});\n  const result = backend.runWebGLProgram(program, [reshaped], indices.dtype);\n  backend.disposeIntermediateTensorInfo(reshaped);\n\n  const outShape = [...indices.shape, depth];\n  const out = reshape({inputs: {x: result}, backend, attrs: {shape: outShape}});\n  backend.disposeIntermediateTensorInfo(result);\n  return out;\n};\n\nexport const oneHotConfig: KernelConfig = {\n  kernelName: OneHot,\n  backendName: 'webgl',\n  kernelFunc: oneHot as {} as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,MAAM,EAAyCC,IAAI,QAAO,uBAAuB;AAGnH,SAAQC,aAAa,QAAO,eAAe;AAC3C,SAAQC,OAAO,QAAO,WAAW;AAEjC,OAAO,MAAMC,MAAM,GAAIC,IAItB,IAAgB;EACf,MAAM;IAACC,MAAM;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGH,IAAI;EACrC,MAAM;IAACI;EAAO,CAAC,GAAGH,MAAM;EACxB,MAAM;IAACI,KAAK;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAGJ,KAAK;EAExC,MAAMK,WAAW,GAAGZ,IAAI,CAACa,aAAa,CAACL,OAAO,CAACM,KAAK,CAAC;EACrD,MAAMC,OAAO,GAAG,IAAId,aAAa,CAACW,WAAW,EAAEH,KAAK,EAAEC,OAAO,EAAEC,QAAQ,CAAC;EACxE,MAAMK,QAAQ,GACVd,OAAO,CAAC;IAACG,MAAM,EAAE;MAACY,CAAC,EAAET;IAAO,CAAC;IAAEF,OAAO;IAAEC,KAAK,EAAE;MAACO,KAAK,EAAE,CAACF,WAAW;IAAC;EAAC,CAAC,CAAC;EAC3E,MAAMM,MAAM,GAAGZ,OAAO,CAACa,eAAe,CAACJ,OAAO,EAAE,CAACC,QAAQ,CAAC,EAAER,OAAO,CAACY,KAAK,CAAC;EAC1Ed,OAAO,CAACe,6BAA6B,CAACL,QAAQ,CAAC;EAE/C,MAAMM,QAAQ,GAAG,CAAC,GAAGd,OAAO,CAACM,KAAK,EAAEL,KAAK,CAAC;EAC1C,MAAMc,GAAG,GAAGrB,OAAO,CAAC;IAACG,MAAM,EAAE;MAACY,CAAC,EAAEC;IAAM,CAAC;IAAEZ,OAAO;IAAEC,KAAK,EAAE;MAACO,KAAK,EAAEQ;IAAQ;EAAC,CAAC,CAAC;EAC7EhB,OAAO,CAACe,6BAA6B,CAACH,MAAM,CAAC;EAC7C,OAAOK,GAAG;AACZ,CAAC;AAED,OAAO,MAAMC,YAAY,GAAiB;EACxCC,UAAU,EAAE1B,MAAM;EAClB2B,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAExB;CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}