{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar hasSyncZlib = true;\nvar zlib = require('zlib');\nif (!zlib.deflateSync) {\n  hasSyncZlib = false;\n}\nvar SyncReader = require('./sync-reader');\nvar FilterSync = require('./filter-parse-sync');\nvar Parser = require('./parser');\nvar bitmapper = require('./bitmapper');\nvar formatNormaliser = require('./format-normaliser');\nmodule.exports = function (buffer, options) {\n  if (!hasSyncZlib) {\n    throw new Error('To use the sync capability of this library in old node versions, please also add a dependency on node-zlb-backport');\n  }\n  var err;\n  function handleError(_err_) {\n    err = _err_;\n  }\n  var metaData;\n  function handleMetaData(_metaData_) {\n    metaData = _metaData_;\n  }\n  function handleTransColor(transColor) {\n    metaData.transColor = transColor;\n  }\n  function handlePalette(palette) {\n    metaData.palette = palette;\n  }\n  var gamma;\n  function handleGamma(_gamma_) {\n    gamma = _gamma_;\n  }\n  var inflateDataList = [];\n  function handleInflateData(inflatedData) {\n    inflateDataList.push(inflatedData);\n  }\n  var reader = new SyncReader(buffer);\n  var parser = new Parser(options, {\n    read: reader.read.bind(reader),\n    error: handleError,\n    metadata: handleMetaData,\n    gamma: handleGamma,\n    palette: handlePalette,\n    transColor: handleTransColor,\n    inflateData: handleInflateData\n  });\n  parser.start();\n  reader.process();\n  if (err) {\n    throw err;\n  }\n\n  //join together the inflate datas\n  var inflateData = Buffer.concat(inflateDataList);\n  inflateDataList.length = 0;\n  var inflatedData = zlib.inflateSync(inflateData);\n  inflateData = null;\n  if (!inflatedData || !inflatedData.length) {\n    throw new Error('bad png - invalid inflate data response');\n  }\n  var unfilteredData = FilterSync.process(inflatedData, metaData);\n  inflateData = null;\n  var bitmapData = bitmapper.dataToBitMap(unfilteredData, metaData);\n  unfilteredData = null;\n  var normalisedBitmapData = formatNormaliser(bitmapData, metaData);\n  metaData.data = normalisedBitmapData;\n  metaData.gamma = gamma || 0;\n  return metaData;\n};","map":{"version":3,"names":["require","hasSyncZlib","zlib","deflateSync","SyncReader","FilterSync","Parser","bitmapper","formatNormaliser","module","exports","buffer","options","Error","err","handleError","_err_","metaData","handleMetaData","_metaData_","handleTransColor","transColor","handlePalette","palette","gamma","handleGamma","_gamma_","inflateDataList","handleInflateData","inflatedData","push","reader","parser","read","bind","error","metadata","inflateData","start","process","Buffer","concat","length","inflateSync","unfilteredData","bitmapData","dataToBitMap","normalisedBitmapData","data"],"sources":["/Users/yezery/Documents/大学素材/毕业设计/OASIS/OASIS_Interface/node_modules/.store/pngjs-nozlib@1.0.0/node_modules/pngjs-nozlib/lib/parser-sync.js"],"sourcesContent":["'use strict';\n\nvar hasSyncZlib = true;\nvar zlib = require('zlib');\nif (!zlib.deflateSync) {\n  hasSyncZlib = false;\n}\nvar SyncReader = require('./sync-reader');\nvar FilterSync = require('./filter-parse-sync');\nvar Parser = require('./parser');\nvar bitmapper = require('./bitmapper');\nvar formatNormaliser = require('./format-normaliser');\n\n\nmodule.exports = function(buffer, options) {\n\n  if (!hasSyncZlib) {\n    throw new Error('To use the sync capability of this library in old node versions, please also add a dependency on node-zlb-backport');\n  }\n\n  var err;\n  function handleError(_err_) {\n    err = _err_;\n  }\n\n  var metaData;\n  function handleMetaData(_metaData_) {\n    metaData = _metaData_;\n  }\n\n  function handleTransColor(transColor) {\n    metaData.transColor = transColor;\n  }\n\n  function handlePalette(palette) {\n    metaData.palette = palette;\n  }\n\n  var gamma;\n  function handleGamma(_gamma_) {\n    gamma = _gamma_;\n  }\n\n  var inflateDataList = [];\n  function handleInflateData(inflatedData) {\n    inflateDataList.push(inflatedData);\n  }\n\n  var reader = new SyncReader(buffer);\n\n  var parser = new Parser(options, {\n    read: reader.read.bind(reader),\n    error: handleError,\n    metadata: handleMetaData,\n    gamma: handleGamma,\n    palette: handlePalette,\n    transColor: handleTransColor,\n    inflateData: handleInflateData\n  });\n\n  parser.start();\n  reader.process();\n\n  if (err) {\n    throw err;\n  }\n\n  //join together the inflate datas\n  var inflateData = Buffer.concat(inflateDataList);\n  inflateDataList.length = 0;\n\n  var inflatedData = zlib.inflateSync(inflateData);\n  inflateData = null;\n\n  if (!inflatedData || !inflatedData.length) {\n    throw new Error('bad png - invalid inflate data response');\n  }\n\n  var unfilteredData = FilterSync.process(inflatedData, metaData);\n  inflateData = null;\n\n  var bitmapData = bitmapper.dataToBitMap(unfilteredData, metaData);\n  unfilteredData = null;\n\n  var normalisedBitmapData = formatNormaliser(bitmapData, metaData);\n\n  metaData.data = normalisedBitmapData;\n  metaData.gamma = gamma || 0;\n\n  return metaData;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}