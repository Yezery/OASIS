{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nimport Identicon from \"identicon.js\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  namespaced: true,\n  state: {\n    ipfsIP: \"10.39.5.194\",\n    // serverIP:\"10.22.62.16\",\n    serverIP: \"localhost\",\n    //  市场合约地址\n    MarketContractAddress: \"0x950EA6251a3EF72768A2cb701b3c5eCd0cE3A603\",\n    // local\n    // MarketContractAddress : \"0xe3A96a34639C7bf2907B4693EfD2BD7a94479661\",\n\n    avatar: require(\"@/assets/webAssets/MetaMask.png\"),\n    currentAddress: \"\",\n    Web3: null,\n    ownerNFTList: [],\n    NFTInf: null,\n    Theme: false,\n    isEmpower: false,\n    isGetToken: false,\n    isconnect: false,\n    gptSocket: null,\n    isSearch: false\n  },\n  getters: {},\n  mutations: {\n    // this.$store.commit(\"setGetToken\", handleAccountsChanged[0]);\n    setWEB3(state, value) {\n      state.Web3 = value;\n    },\n    setAvatar(state, value) {\n      state.avatar = \"data:image/png;base64,\" + new Identicon(value, 120).toString();\n    },\n    setOwnerNFTList(state, value) {\n      state.ownerNFTList = value;\n    },\n    setNFTInf(state, value) {\n      state.NFTInf = value;\n    },\n    setTheme(state, value) {\n      state.Theme = value;\n    },\n    setEmpower(state, value) {\n      state.isEmpower = value;\n    },\n    setGetToken(state, value) {\n      state.isGetToken = value;\n    },\n    setConnection(state, value) {\n      state.isconnect = value;\n    },\n    setcurrentAddress(state, value) {\n      state.currentAddress = value;\n    },\n    setIsSearch(state, value) {\n      state.isSearch = value;\n    }\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"names":["Vue","Vuex","Identicon","use","Store","namespaced","state","ipfsIP","serverIP","MarketContractAddress","avatar","require","currentAddress","Web3","ownerNFTList","NFTInf","Theme","isEmpower","isGetToken","isconnect","gptSocket","isSearch","getters","mutations","setWEB3","value","setAvatar","toString","setOwnerNFTList","setNFTInf","setTheme","setEmpower","setGetToken","setConnection","setcurrentAddress","setIsSearch","actions","modules"],"sources":["/Users/yezery/Desktop/OASIS/OASIS_Interface/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Identicon from \"identicon.js\"\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  namespaced: true,\n  state: {\n    ipfsIP: \"10.39.5.194\", \n    // serverIP:\"10.22.62.16\",\n    serverIP:\"localhost\",\n    //  市场合约地址\n    MarketContractAddress: \"0x950EA6251a3EF72768A2cb701b3c5eCd0cE3A603\",\n    // local\n    // MarketContractAddress : \"0xe3A96a34639C7bf2907B4693EfD2BD7a94479661\",\n    \n    avatar: require(\"@/assets/webAssets/MetaMask.png\"),\n    currentAddress: \"\",\n    Web3: null,\n    ownerNFTList: [],\n    NFTInf:null,\n    Theme: false,\n    isEmpower: false,\n    isGetToken:false,\n    isconnect: false,\n    gptSocket: null,\n    \n\n\n    isSearch: false,\n    \n  },\n  getters: {\n  },\n  mutations: {\n    // this.$store.commit(\"setGetToken\", handleAccountsChanged[0]);\n    setWEB3(state, value) {\n      state.Web3 = value\n    },\n    setAvatar(state, value) {\n      state.avatar =\n        \"data:image/png;base64,\" +\n        new Identicon(value, 120).toString();\n    },\n    setOwnerNFTList(state, value) {\n      state.ownerNFTList = value;\n    },\n    setNFTInf(state, value) {\n      state.NFTInf= value;\n    },\n    setTheme(state, value) {\n      state.Theme = value;\n    },\n    setEmpower(state, value) {\n      state.isEmpower = value\n    },\n    setGetToken(state, value) {\n      state.isGetToken = value\n    },\n    setConnection(state, value) {\n      state.isconnect = value\n    },\n    setcurrentAddress(state, value) {\n      state.currentAddress = value\n    },\n\n\n\n    setIsSearch(state, value){\n        state.isSearch = value\n    },\n\n    \n\n\n  },\n  actions: {\n\n\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,SAAS,MAAM,cAAc;AAEpCF,GAAG,CAACG,GAAG,CAACF,IAAI,CAAC;AAEb,eAAe,IAAIA,IAAI,CAACG,KAAK,CAAC;EAC5BC,UAAU,EAAE,IAAI;EAChBC,KAAK,EAAE;IACLC,MAAM,EAAE,aAAa;IACrB;IACAC,QAAQ,EAAC,WAAW;IACpB;IACAC,qBAAqB,EAAE,4CAA4C;IACnE;IACA;;IAEAC,MAAM,EAAEC,OAAO,CAAC,iCAAiC,CAAC;IAClDC,cAAc,EAAE,EAAE;IAClBC,IAAI,EAAE,IAAI;IACVC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAC,IAAI;IACXC,KAAK,EAAE,KAAK;IACZC,SAAS,EAAE,KAAK;IAChBC,UAAU,EAAC,KAAK;IAChBC,SAAS,EAAE,KAAK;IAChBC,SAAS,EAAE,IAAI;IAIfC,QAAQ,EAAE;EAEZ,CAAC;EACDC,OAAO,EAAE,CACT,CAAC;EACDC,SAAS,EAAE;IACT;IACAC,OAAOA,CAAClB,KAAK,EAAEmB,KAAK,EAAE;MACpBnB,KAAK,CAACO,IAAI,GAAGY,KAAK;IACpB,CAAC;IACDC,SAASA,CAACpB,KAAK,EAAEmB,KAAK,EAAE;MACtBnB,KAAK,CAACI,MAAM,GACV,wBAAwB,GACxB,IAAIR,SAAS,CAACuB,KAAK,EAAE,GAAG,CAAC,CAACE,QAAQ,CAAC,CAAC;IACxC,CAAC;IACDC,eAAeA,CAACtB,KAAK,EAAEmB,KAAK,EAAE;MAC5BnB,KAAK,CAACQ,YAAY,GAAGW,KAAK;IAC5B,CAAC;IACDI,SAASA,CAACvB,KAAK,EAAEmB,KAAK,EAAE;MACtBnB,KAAK,CAACS,MAAM,GAAEU,KAAK;IACrB,CAAC;IACDK,QAAQA,CAACxB,KAAK,EAAEmB,KAAK,EAAE;MACrBnB,KAAK,CAACU,KAAK,GAAGS,KAAK;IACrB,CAAC;IACDM,UAAUA,CAACzB,KAAK,EAAEmB,KAAK,EAAE;MACvBnB,KAAK,CAACW,SAAS,GAAGQ,KAAK;IACzB,CAAC;IACDO,WAAWA,CAAC1B,KAAK,EAAEmB,KAAK,EAAE;MACxBnB,KAAK,CAACY,UAAU,GAAGO,KAAK;IAC1B,CAAC;IACDQ,aAAaA,CAAC3B,KAAK,EAAEmB,KAAK,EAAE;MAC1BnB,KAAK,CAACa,SAAS,GAAGM,KAAK;IACzB,CAAC;IACDS,iBAAiBA,CAAC5B,KAAK,EAAEmB,KAAK,EAAE;MAC9BnB,KAAK,CAACM,cAAc,GAAGa,KAAK;IAC9B,CAAC;IAIDU,WAAWA,CAAC7B,KAAK,EAAEmB,KAAK,EAAC;MACrBnB,KAAK,CAACe,QAAQ,GAAGI,KAAK;IAC1B;EAKF,CAAC;EACDW,OAAO,EAAE,CAGT,CAAC;EACDC,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}