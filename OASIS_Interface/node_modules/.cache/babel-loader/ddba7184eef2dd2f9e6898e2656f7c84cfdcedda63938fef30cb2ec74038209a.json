{"ast":null,"code":"const RateLimiterStoreAbstract = require('./RateLimiterStoreAbstract');\nconst RateLimiterRes = require('./RateLimiterRes');\nclass RateLimiterMemcache extends RateLimiterStoreAbstract {\n  /**\n   *\n   * @param {Object} opts\n   * Defaults {\n   *   ... see other in RateLimiterStoreAbstract\n   *\n   *   storeClient: memcacheClient\n   * }\n   */\n  constructor(opts) {\n    super(opts);\n    this.client = opts.storeClient;\n  }\n  _getRateLimiterRes(rlKey, changedPoints, result) {\n    const res = new RateLimiterRes();\n    res.consumedPoints = parseInt(result.consumedPoints);\n    res.isFirstInDuration = result.consumedPoints === changedPoints;\n    res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n    res.msBeforeNext = result.msBeforeNext;\n    return res;\n  }\n  _upsert(rlKey, points, msDuration, forceExpire = false, options = {}) {\n    return new Promise((resolve, reject) => {\n      const nowMs = Date.now();\n      const secDuration = Math.floor(msDuration / 1000);\n      if (forceExpire) {\n        this.client.set(rlKey, points, secDuration, err => {\n          if (!err) {\n            this.client.set(`${rlKey}_expire`, secDuration > 0 ? nowMs + secDuration * 1000 : -1, secDuration, () => {\n              const res = {\n                consumedPoints: points,\n                msBeforeNext: secDuration > 0 ? secDuration * 1000 : -1\n              };\n              resolve(res);\n            });\n          } else {\n            reject(err);\n          }\n        });\n      } else {\n        this.client.incr(rlKey, points, (err, consumedPoints) => {\n          if (err || consumedPoints === false) {\n            this.client.add(rlKey, points, secDuration, (errAddKey, createdNew) => {\n              if (errAddKey || !createdNew) {\n                // Try to upsert again in case of race condition\n                if (typeof options.attemptNumber === 'undefined' || options.attemptNumber < 3) {\n                  const nextOptions = Object.assign({}, options);\n                  nextOptions.attemptNumber = nextOptions.attemptNumber ? nextOptions.attemptNumber + 1 : 1;\n                  this._upsert(rlKey, points, msDuration, forceExpire, nextOptions).then(resUpsert => resolve(resUpsert)).catch(errUpsert => reject(errUpsert));\n                } else {\n                  reject(new Error('Can not add key'));\n                }\n              } else {\n                this.client.add(`${rlKey}_expire`, secDuration > 0 ? nowMs + secDuration * 1000 : -1, secDuration, () => {\n                  const res = {\n                    consumedPoints: points,\n                    msBeforeNext: secDuration > 0 ? secDuration * 1000 : -1\n                  };\n                  resolve(res);\n                });\n              }\n            });\n          } else {\n            this.client.get(`${rlKey}_expire`, (errGetExpire, resGetExpireMs) => {\n              if (errGetExpire) {\n                reject(errGetExpire);\n              } else {\n                const expireMs = resGetExpireMs === false ? 0 : resGetExpireMs;\n                const res = {\n                  consumedPoints,\n                  msBeforeNext: expireMs >= 0 ? Math.max(expireMs - nowMs, 0) : -1\n                };\n                resolve(res);\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n  _get(rlKey) {\n    return new Promise((resolve, reject) => {\n      const nowMs = Date.now();\n      this.client.get(rlKey, (err, consumedPoints) => {\n        if (!consumedPoints) {\n          resolve(null);\n        } else {\n          this.client.get(`${rlKey}_expire`, (errGetExpire, resGetExpireMs) => {\n            if (errGetExpire) {\n              reject(errGetExpire);\n            } else {\n              const expireMs = resGetExpireMs === false ? 0 : resGetExpireMs;\n              const res = {\n                consumedPoints,\n                msBeforeNext: expireMs >= 0 ? Math.max(expireMs - nowMs, 0) : -1\n              };\n              resolve(res);\n            }\n          });\n        }\n      });\n    });\n  }\n  _delete(rlKey) {\n    return new Promise((resolve, reject) => {\n      this.client.del(rlKey, (err, res) => {\n        if (err) {\n          reject(err);\n        } else if (res === false) {\n          resolve(res);\n        } else {\n          this.client.del(`${rlKey}_expire`, errDelExpire => {\n            if (errDelExpire) {\n              reject(errDelExpire);\n            } else {\n              resolve(res);\n            }\n          });\n        }\n      });\n    });\n  }\n}\nmodule.exports = RateLimiterMemcache;","map":{"version":3,"names":["RateLimiterStoreAbstract","require","RateLimiterRes","RateLimiterMemcache","constructor","opts","client","storeClient","_getRateLimiterRes","rlKey","changedPoints","result","res","consumedPoints","parseInt","isFirstInDuration","remainingPoints","Math","max","points","msBeforeNext","_upsert","msDuration","forceExpire","options","Promise","resolve","reject","nowMs","Date","now","secDuration","floor","set","err","incr","add","errAddKey","createdNew","attemptNumber","nextOptions","Object","assign","then","resUpsert","catch","errUpsert","Error","get","errGetExpire","resGetExpireMs","expireMs","_get","_delete","del","errDelExpire","module","exports"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/rate-limiter-flexible@2.4.2/node_modules/rate-limiter-flexible/lib/RateLimiterMemcache.js"],"sourcesContent":["const RateLimiterStoreAbstract = require('./RateLimiterStoreAbstract');\nconst RateLimiterRes = require('./RateLimiterRes');\n\nclass RateLimiterMemcache extends RateLimiterStoreAbstract {\n  /**\n   *\n   * @param {Object} opts\n   * Defaults {\n   *   ... see other in RateLimiterStoreAbstract\n   *\n   *   storeClient: memcacheClient\n   * }\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.client = opts.storeClient;\n  }\n\n  _getRateLimiterRes(rlKey, changedPoints, result) {\n    const res = new RateLimiterRes();\n    res.consumedPoints = parseInt(result.consumedPoints);\n    res.isFirstInDuration = result.consumedPoints === changedPoints;\n    res.remainingPoints = Math.max(this.points - res.consumedPoints, 0);\n    res.msBeforeNext = result.msBeforeNext;\n\n    return res;\n  }\n\n  _upsert(rlKey, points, msDuration, forceExpire = false, options = {}) {\n    return new Promise((resolve, reject) => {\n      const nowMs = Date.now();\n      const secDuration = Math.floor(msDuration / 1000);\n\n      if (forceExpire) {\n        this.client.set(rlKey, points, secDuration, (err) => {\n          if (!err) {\n            this.client.set(\n              `${rlKey}_expire`,\n              secDuration > 0 ? nowMs + (secDuration * 1000) : -1,\n              secDuration,\n              () => {\n                const res = {\n                  consumedPoints: points,\n                  msBeforeNext: secDuration > 0 ? secDuration * 1000 : -1,\n                };\n                resolve(res);\n              }\n            );\n          } else {\n            reject(err);\n          }\n        });\n      } else {\n        this.client.incr(rlKey, points, (err, consumedPoints) => {\n          if (err || consumedPoints === false) {\n            this.client.add(rlKey, points, secDuration, (errAddKey, createdNew) => {\n              if (errAddKey || !createdNew) {\n                // Try to upsert again in case of race condition\n                if (typeof options.attemptNumber === 'undefined' || options.attemptNumber < 3) {\n                  const nextOptions = Object.assign({}, options);\n                  nextOptions.attemptNumber = nextOptions.attemptNumber ? (nextOptions.attemptNumber + 1) : 1;\n\n                  this._upsert(rlKey, points, msDuration, forceExpire, nextOptions)\n                    .then(resUpsert => resolve(resUpsert))\n                    .catch(errUpsert => reject(errUpsert));\n                } else {\n                  reject(new Error('Can not add key'));\n                }\n              } else {\n                this.client.add(\n                  `${rlKey}_expire`,\n                  secDuration > 0 ? nowMs + (secDuration * 1000) : -1,\n                  secDuration,\n                  () => {\n                    const res = {\n                      consumedPoints: points,\n                      msBeforeNext: secDuration > 0 ? secDuration * 1000 : -1,\n                    };\n                    resolve(res);\n                  }\n                );\n              }\n            });\n          } else {\n            this.client.get(`${rlKey}_expire`, (errGetExpire, resGetExpireMs) => {\n              if (errGetExpire) {\n                reject(errGetExpire);\n              } else {\n                const expireMs = resGetExpireMs === false ? 0 : resGetExpireMs;\n                const res = {\n                  consumedPoints,\n                  msBeforeNext: expireMs >= 0 ? Math.max(expireMs - nowMs, 0) : -1,\n                };\n                resolve(res);\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  _get(rlKey) {\n    return new Promise((resolve, reject) => {\n      const nowMs = Date.now();\n\n      this.client.get(rlKey, (err, consumedPoints) => {\n        if (!consumedPoints) {\n          resolve(null);\n        } else {\n          this.client.get(`${rlKey}_expire`, (errGetExpire, resGetExpireMs) => {\n            if (errGetExpire) {\n              reject(errGetExpire);\n            } else {\n              const expireMs = resGetExpireMs === false ? 0 : resGetExpireMs;\n              const res = {\n                consumedPoints,\n                msBeforeNext: expireMs >= 0 ? Math.max(expireMs - nowMs, 0) : -1,\n              };\n              resolve(res);\n            }\n          });\n        }\n      });\n    });\n  }\n\n  _delete(rlKey) {\n    return new Promise((resolve, reject) => {\n      this.client.del(rlKey, (err, res) => {\n        if (err) {\n          reject(err);\n        } else if (res === false) {\n          resolve(res);\n        } else {\n          this.client.del(`${rlKey}_expire`, (errDelExpire) => {\n            if (errDelExpire) {\n              reject(errDelExpire);\n            } else {\n              resolve(res);\n            }\n          });\n        }\n      });\n    });\n  }\n}\n\nmodule.exports = RateLimiterMemcache;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}