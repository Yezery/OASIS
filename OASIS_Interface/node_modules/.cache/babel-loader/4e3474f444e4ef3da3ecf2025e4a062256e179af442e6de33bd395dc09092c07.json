{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { isValidPublicKey } from '../utils.js';\nimport { AbstractHandshake } from './abstract-handshake.js';\nexport class XX extends AbstractHandshake {\n  initializeInitiator(prologue, s, rs, psk) {\n    const name = 'Noise_XX_25519_ChaChaPoly_SHA256';\n    const ss = this.initializeSymmetric(name);\n    this.mixHash(ss, prologue);\n    const re = new Uint8Array(32);\n    return {\n      ss,\n      s,\n      rs,\n      psk,\n      re\n    };\n  }\n  initializeResponder(prologue, s, rs, psk) {\n    const name = 'Noise_XX_25519_ChaChaPoly_SHA256';\n    const ss = this.initializeSymmetric(name);\n    this.mixHash(ss, prologue);\n    const re = new Uint8Array(32);\n    return {\n      ss,\n      s,\n      rs,\n      psk,\n      re\n    };\n  }\n  writeMessageA(hs, payload, e) {\n    const ns = new Uint8Array(0);\n    if (e !== undefined) {\n      hs.e = e;\n    } else {\n      hs.e = this.crypto.generateX25519KeyPair();\n    }\n    const ne = hs.e.publicKey;\n    this.mixHash(hs.ss, ne);\n    const ciphertext = this.encryptAndHash(hs.ss, payload);\n    return {\n      ne,\n      ns,\n      ciphertext\n    };\n  }\n  writeMessageB(hs, payload) {\n    hs.e = this.crypto.generateX25519KeyPair();\n    const ne = hs.e.publicKey;\n    this.mixHash(hs.ss, ne);\n    this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.re));\n    const spk = hs.s.publicKey;\n    const ns = this.encryptAndHash(hs.ss, spk);\n    this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.re));\n    const ciphertext = this.encryptAndHash(hs.ss, payload);\n    return {\n      ne,\n      ns,\n      ciphertext\n    };\n  }\n  writeMessageC(hs, payload) {\n    const spk = hs.s.publicKey;\n    const ns = this.encryptAndHash(hs.ss, spk);\n    this.mixKey(hs.ss, this.dh(hs.s.privateKey, hs.re));\n    const ciphertext = this.encryptAndHash(hs.ss, payload);\n    const ne = this.createEmptyKey();\n    const messageBuffer = {\n      ne,\n      ns,\n      ciphertext\n    };\n    const {\n      cs1,\n      cs2\n    } = this.split(hs.ss);\n    return {\n      h: hs.ss.h,\n      messageBuffer,\n      cs1,\n      cs2\n    };\n  }\n  readMessageA(hs, message) {\n    if (isValidPublicKey(message.ne)) {\n      hs.re = message.ne;\n    }\n    this.mixHash(hs.ss, hs.re);\n    return this.decryptAndHash(hs.ss, message.ciphertext);\n  }\n  readMessageB(hs, message) {\n    if (isValidPublicKey(message.ne)) {\n      hs.re = message.ne;\n    }\n    this.mixHash(hs.ss, hs.re);\n    if (!hs.e) {\n      throw new Error('Handshake state `e` param is missing.');\n    }\n    this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.re));\n    const {\n      plaintext: ns,\n      valid: valid1\n    } = this.decryptAndHash(hs.ss, message.ns);\n    if (valid1 && isValidPublicKey(ns)) {\n      hs.rs = ns;\n    }\n    this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.rs));\n    const {\n      plaintext,\n      valid: valid2\n    } = this.decryptAndHash(hs.ss, message.ciphertext);\n    return {\n      plaintext,\n      valid: valid1 && valid2\n    };\n  }\n  readMessageC(hs, message) {\n    const {\n      plaintext: ns,\n      valid: valid1\n    } = this.decryptAndHash(hs.ss, message.ns);\n    if (valid1 && isValidPublicKey(ns)) {\n      hs.rs = ns;\n    }\n    if (!hs.e) {\n      throw new Error('Handshake state `e` param is missing.');\n    }\n    this.mixKey(hs.ss, this.dh(hs.e.privateKey, hs.rs));\n    const {\n      plaintext,\n      valid: valid2\n    } = this.decryptAndHash(hs.ss, message.ciphertext);\n    const {\n      cs1,\n      cs2\n    } = this.split(hs.ss);\n    return {\n      h: hs.ss.h,\n      plaintext,\n      valid: valid1 && valid2,\n      cs1,\n      cs2\n    };\n  }\n  initSession(initiator, prologue, s) {\n    const psk = this.createEmptyKey();\n    const rs = new Uint8Array(32); // no static key yet\n    let hs;\n    if (initiator) {\n      hs = this.initializeInitiator(prologue, s, rs, psk);\n    } else {\n      hs = this.initializeResponder(prologue, s, rs, psk);\n    }\n    return {\n      hs,\n      i: initiator,\n      mc: 0\n    };\n  }\n  sendMessage(session, message, ephemeral) {\n    let messageBuffer;\n    if (session.mc === 0) {\n      messageBuffer = this.writeMessageA(session.hs, message, ephemeral);\n    } else if (session.mc === 1) {\n      messageBuffer = this.writeMessageB(session.hs, message);\n    } else if (session.mc === 2) {\n      const {\n        h,\n        messageBuffer: resultingBuffer,\n        cs1,\n        cs2\n      } = this.writeMessageC(session.hs, message);\n      messageBuffer = resultingBuffer;\n      session.h = h;\n      session.cs1 = cs1;\n      session.cs2 = cs2;\n    } else if (session.mc > 2) {\n      if (session.i) {\n        if (!session.cs1) {\n          throw new Error('CS1 (cipher state) is not defined');\n        }\n        messageBuffer = this.writeMessageRegular(session.cs1, message);\n      } else {\n        if (!session.cs2) {\n          throw new Error('CS2 (cipher state) is not defined');\n        }\n        messageBuffer = this.writeMessageRegular(session.cs2, message);\n      }\n    } else {\n      throw new Error('Session invalid.');\n    }\n    session.mc++;\n    return messageBuffer;\n  }\n  recvMessage(session, message) {\n    let plaintext = new Uint8Array(0);\n    let valid = false;\n    if (session.mc === 0) {\n      ({\n        plaintext,\n        valid\n      } = this.readMessageA(session.hs, message));\n    } else if (session.mc === 1) {\n      ({\n        plaintext,\n        valid\n      } = this.readMessageB(session.hs, message));\n    } else if (session.mc === 2) {\n      const {\n        h,\n        plaintext: resultingPlaintext,\n        valid: resultingValid,\n        cs1,\n        cs2\n      } = this.readMessageC(session.hs, message);\n      plaintext = resultingPlaintext;\n      valid = resultingValid;\n      session.h = h;\n      session.cs1 = cs1;\n      session.cs2 = cs2;\n    }\n    session.mc++;\n    return {\n      plaintext,\n      valid\n    };\n  }\n}","map":{"version":3,"names":["isValidPublicKey","AbstractHandshake","XX","initializeInitiator","prologue","s","rs","psk","name","ss","initializeSymmetric","mixHash","re","Uint8Array","initializeResponder","writeMessageA","hs","payload","e","ns","undefined","crypto","generateX25519KeyPair","ne","publicKey","ciphertext","encryptAndHash","writeMessageB","mixKey","dh","privateKey","spk","writeMessageC","createEmptyKey","messageBuffer","cs1","cs2","split","h","readMessageA","message","decryptAndHash","readMessageB","Error","plaintext","valid","valid1","valid2","readMessageC","initSession","initiator","i","mc","sendMessage","session","ephemeral","resultingBuffer","writeMessageRegular","recvMessage","resultingPlaintext","resultingValid"],"sources":["../../../src/handshakes/xx.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}