{"ast":null,"code":"import { base58btc } from 'multiformats/bases/base58';\nexport class WantListEntry {\n  /**\n   * @param {import('multiformats').CID} cid\n   * @param {number} priority\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   */\n  constructor(cid, priority, wantType) {\n    // Keep track of how many requests we have for this key\n    this._refCounter = 1;\n    this.cid = cid;\n    this.priority = priority || 1;\n    this.wantType = wantType;\n  }\n  inc() {\n    this._refCounter += 1;\n  }\n  dec() {\n    this._refCounter = Math.max(0, this._refCounter - 1);\n  }\n  hasRefs() {\n    return this._refCounter > 0;\n  }\n\n  // So that console.log prints a nice description of this object\n  get [Symbol.toStringTag]() {\n    const cidStr = this.cid.toString(base58btc);\n    return `WantlistEntry <key: ${cidStr}, priority: ${this.priority}, refs: ${this._refCounter}>`;\n  }\n\n  /**\n   * @param {any} other\n   */\n  equals(other) {\n    return this._refCounter === other._refCounter && this.cid.equals(other.cid) && this.priority === other.priority && this.wantType === other.wantType;\n  }\n}","map":{"version":3,"names":["base58btc","WantListEntry","constructor","cid","priority","wantType","_refCounter","inc","dec","Math","max","hasRefs","Symbol","toStringTag","cidStr","toString","equals","other"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-bitswap@15.0.2/node_modules/ipfs-bitswap/src/wantlist/entry.js"],"sourcesContent":["\nimport { base58btc } from 'multiformats/bases/base58'\n\nexport class WantListEntry {\n  /**\n   * @param {import('multiformats').CID} cid\n   * @param {number} priority\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   */\n  constructor (cid, priority, wantType) {\n    // Keep track of how many requests we have for this key\n    this._refCounter = 1\n\n    this.cid = cid\n    this.priority = priority || 1\n    this.wantType = wantType\n  }\n\n  inc () {\n    this._refCounter += 1\n  }\n\n  dec () {\n    this._refCounter = Math.max(0, this._refCounter - 1)\n  }\n\n  hasRefs () {\n    return this._refCounter > 0\n  }\n\n  // So that console.log prints a nice description of this object\n  get [Symbol.toStringTag] () {\n    const cidStr = this.cid.toString(base58btc)\n    return `WantlistEntry <key: ${cidStr}, priority: ${this.priority}, refs: ${this._refCounter}>`\n  }\n\n  /**\n   * @param {any} other\n   */\n  equals (other) {\n    return (this._refCounter === other._refCounter) &&\n      this.cid.equals(other.cid) &&\n      this.priority === other.priority &&\n      this.wantType === other.wantType\n  }\n}\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,2BAA2B;AAErD,OAAO,MAAMC,aAAa,CAAC;EACzB;AACF;AACA;AACA;AACA;EACEC,WAAWA,CAAEC,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IACpC;IACA,IAAI,CAACC,WAAW,GAAG,CAAC;IAEpB,IAAI,CAACH,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,QAAQ,GAAGA,QAAQ,IAAI,CAAC;IAC7B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC1B;EAEAE,GAAGA,CAAA,EAAI;IACL,IAAI,CAACD,WAAW,IAAI,CAAC;EACvB;EAEAE,GAAGA,CAAA,EAAI;IACL,IAAI,CAACF,WAAW,GAAGG,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,IAAI,CAACJ,WAAW,GAAG,CAAC,CAAC;EACtD;EAEAK,OAAOA,CAAA,EAAI;IACT,OAAO,IAAI,CAACL,WAAW,GAAG,CAAC;EAC7B;;EAEA;EACA,KAAKM,MAAM,CAACC,WAAW,IAAK;IAC1B,MAAMC,MAAM,GAAG,IAAI,CAACX,GAAG,CAACY,QAAQ,CAACf,SAAS,CAAC;IAC3C,OAAQ,uBAAsBc,MAAO,eAAc,IAAI,CAACV,QAAS,WAAU,IAAI,CAACE,WAAY,GAAE;EAChG;;EAEA;AACF;AACA;EACEU,MAAMA,CAAEC,KAAK,EAAE;IACb,OAAQ,IAAI,CAACX,WAAW,KAAKW,KAAK,CAACX,WAAW,IAC5C,IAAI,CAACH,GAAG,CAACa,MAAM,CAACC,KAAK,CAACd,GAAG,CAAC,IAC1B,IAAI,CAACC,QAAQ,KAAKa,KAAK,CAACb,QAAQ,IAChC,IAAI,CAACC,QAAQ,KAAKY,KAAK,CAACZ,QAAQ;EACpC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}