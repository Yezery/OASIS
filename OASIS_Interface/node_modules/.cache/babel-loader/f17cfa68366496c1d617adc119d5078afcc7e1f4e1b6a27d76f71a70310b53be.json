{"ast":null,"code":"import { convertToString } from '@multiformats/multiaddr/convert';\n// Protocols https://github.com/multiformats/multiaddr/blob/master/protocols.csv\n// code  size  name\n// 4     32    ip4\n// 41    128   ip6\nvar Protocol;\n(function (Protocol) {\n  Protocol[Protocol[\"ip4\"] = 4] = \"ip4\";\n  Protocol[Protocol[\"ip6\"] = 41] = \"ip6\";\n})(Protocol || (Protocol = {}));\nexport function multiaddrToIPStr(multiaddr) {\n  for (const tuple of multiaddr.tuples()) {\n    switch (tuple[0]) {\n      case Protocol.ip4:\n      case Protocol.ip6:\n        return convertToString(tuple[0], tuple[1]);\n    }\n  }\n  return null;\n}","map":{"version":3,"names":["convertToString","Protocol","multiaddrToIPStr","multiaddr","tuple","tuples","ip4","ip6"],"sources":["../../../src/utils/multiaddr.ts"],"sourcesContent":[null],"mappings":"AACA,SAASA,eAAe,QAAQ,iCAAiC;AAEjE;AACA;AACA;AACA;AACA,IAAKC,QAGJ;AAHD,WAAKA,QAAQ;EACXA,QAAA,CAAAA,QAAA,oBAAO;EACPA,QAAA,CAAAA,QAAA,qBAAQ;AACV,CAAC,EAHIA,QAAQ,KAARA,QAAQ;AAKb,OAAM,SAAUC,gBAAgBA,CAACC,SAAoB;EACnD,KAAK,MAAMC,KAAK,IAAID,SAAS,CAACE,MAAM,EAAE,EAAE;IACtC,QAAQD,KAAK,CAAC,CAAC,CAAC;MACd,KAAKH,QAAQ,CAACK,GAAG;MACjB,KAAKL,QAAQ,CAACM,GAAG;QACf,OAAOP,eAAe,CAACI,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAE,CAAC;;;EAIjD,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}