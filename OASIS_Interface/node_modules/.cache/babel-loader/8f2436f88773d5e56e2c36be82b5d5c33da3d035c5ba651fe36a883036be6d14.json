{"ast":null,"code":"// components\n// import  connectionTips from \"@/views/bar/connectionTips.vue\"\n// import oasisTheme from \"@/views/bar/oasisTheme.vue\" \n// import balanceEchart from \"@/views/bar/balanceEchart.vue\";\n// import userBar from \"@/views/bar/userBar.vue\";\nimport oasisChat from \"@/views/leftMenu/oasisChat.vue\";\n// func\nimport { postOwnerContractList } from \"@/api/axios/ownerContractLIst\";\nimport { getToken, setMnemonic, checkUserExist, setAuthenticationMetaInformation, forgetMnemonic, resetMnemonic } from \"@/api/axios/user\";\nimport CryptoJS from \"crypto-js\";\nexport default {\n  name: \"MarketShopIndex\",\n  components: {\n    // oasisTheme,\n    // balanceEchart,\n    // userBar,\n    oasisChat\n    // connectionTips,\n  },\n\n  data() {\n    return {\n      //****聊天栏******//\n      isOpen: false,\n      UserImageList: [],\n      avatar: \"\",\n      //*********************//\n      //方法\n      echartChange: null,\n      //连接钱包\n      user: {\n        encryptedPassword: \"\"\n      },\n      changeingAccount: false,\n      anmiate1: true,\n      animate2: false,\n      animate3: false,\n      animate4: false,\n      animate5: false,\n      EmpowerSignForm: {\n        sp1: \"\",\n        sp2: \"\",\n        sp3: \"\"\n      },\n      isGetToken: false,\n      CopyTips: \"点击复制\",\n      CopySuccess: \"复制成功！\",\n      isCopy: false,\n      isRepeatClick: true,\n      newMnemonic: \"\",\n      isUnlocked: false\n    };\n  },\n  created() {},\n  async mounted() {\n    if (window.ethereum != undefined) {\n      await window.ethereum._metamask.isUnlocked().then(re => this.isUnlocked = re);\n      window.ethereum.on(\"accountsChanged\", async () => {\n        window.location.reload();\n      });\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n        this.$notify({\n          title: \"已切换链\",\n          type: \"warning\",\n          position: \"top-left\",\n          offset: 200\n        });\n      });\n      if (!this.$store.state.isconnect && this.isUnlocked) {\n        await this.connectWallet();\n        this.isGetToken = true;\n        setTimeout(async () => {\n          this.anmiate1 = false;\n          await checkUserExist({\n            userAddress: this.$store.state.currentAddress\n          }).then(async re => {\n            if (re.data.data == \"\") {\n              this.animate3 = true;\n            } else {\n              this.animate2 = true;\n            }\n          });\n        }, 2000);\n      }\n    }\n  },\n  methods: {\n    async empower(opt) {\n      if (opt == 2) {\n        if (this.EmpowerSignForm.sp1 == \"\" || this.EmpowerSignForm.sp2 == \"\" || this.EmpowerSignForm.sp3 == \"\" || this.EmpowerSignForm.sp4 == \"\" || this.EmpowerSignForm.sp5 == \"\" || this.user.encryptedPassword == \"\") {\n          this.$notify({\n            title: \"信息不能为空\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200\n          });\n          return;\n        }\n      }\n      this.user.encryptedPassword = CryptoJS.SHA256(this.user.encryptedPassword).toString();\n      await setMnemonic(this.user);\n      this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n      await setAuthenticationMetaInformation(this.EmpowerSignForm);\n      await getToken(this.user).then(async re => {\n        localStorage.clear();\n        if (re.data.data == null) {\n          this.$notify({\n            title: \"密码错误\",\n            type: \"waring\",\n            position: \"top-left\",\n            offset: 200\n          });\n        } else {\n          localStorage.setItem(\"token\", re.data.data);\n          let currentAddress = {\n            ownerAddress: this.EmpowerSignForm.userAddress\n          };\n          await postOwnerContractList(currentAddress).then(re => {\n            this.$store.commit(\"setOwnerNFTList\", re.data.data);\n          });\n          this.giveChatInitToWalletConnect();\n          this.$store.commit(\"connection\", true);\n          this.$store.commit(\"setEmpower\", true);\n          this.isGetToken = false;\n          this.$notify({\n            title: \"🎉 连接成功\",\n            position: \"top-left\",\n            offset: 200\n          });\n        }\n      });\n    },\n    openEmpower() {\n      if (this.$store.state.isEmpower || window.ethereum == undefined) {\n        return;\n      }\n      if (!this.isUnlocked) {\n        this.$notify({\n          title: \"钱包未解锁\",\n          type: \"warning\",\n          position: \"top-left\",\n          offset: 200\n        });\n        return;\n      } else {\n        this.isGetToken = true;\n      }\n    },\n    async checkEmpower() {\n      this.user.encryptedPassword = CryptoJS.SHA256(this.user.encryptedPassword).toString();\n      await getToken(this.user).then(re => {\n        localStorage.clear();\n        if (re.data.data == null) {\n          this.$notify({\n            title: \"授权码错误\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200\n          });\n        } else {\n          let currentAddress = {\n            ownerAddress: this.$store.state.currentAddress\n          };\n          postOwnerContractList(currentAddress).then(re => {\n            this.$store.commit(\"setOwnerNFTList\", re.data.data);\n          });\n          localStorage.setItem(\"token\", re.data.data);\n          this.$store.commit(\"setEmpower\", true);\n          this.$store.commit(\"connection\", true);\n          this.giveChatInitToWalletConnect();\n          this.isGetToken = false;\n          this.$notify({\n            title: \"🎉 连接成功\",\n            position: \"top-left\",\n            offset: 200\n          });\n        }\n      });\n    },\n    viewControl(opt) {\n      switch (opt) {\n        case 1:\n          this.animate2 = false;\n          this.animate4 = true;\n          break;\n        case 2:\n          this.animate2 = true;\n          this.animate4 = false;\n          break;\n        case 3:\n          this.animate2 = true;\n          this.animate5 = false;\n          break;\n        default:\n          this.animate2 = false;\n          this.isGetToken = true;\n          this.anmiate1 = false;\n          this.animate4 = true;\n          this.user.encryptedPassword = \"\";\n          break;\n      }\n    },\n    async backPassword() {\n      this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n      forgetMnemonic(this.EmpowerSignForm).then(re => {\n        if (re.data.data) {\n          this.animate5 = true;\n          this.animate4 = false;\n          this.$notify({\n            title: \"密保正确\",\n            type: \"success\",\n            position: \"top-left\",\n            offset: 200\n          });\n        } else {\n          this.$notify({\n            title: \"密保错误\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200\n          });\n        }\n      });\n    },\n    async resetMnemonic() {\n      this.EmpowerSignForm.newMnemonic = CryptoJS.SHA256(this.newMnemonic).toString();\n      this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n      await checkUserExist(this.EmpowerSignForm).then(re => {\n        if (re.data.data == this.EmpowerSignForm.encryptedPassword) {\n          this.$notify({\n            title: \"不能与旧密码重复\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200\n          });\n          return;\n        } else {\n          resetMnemonic(this.EmpowerSignForm).then(re => {\n            if (re.data.data == null) {\n              this.$notify.error({\n                title: \"系统异常\",\n                position: \"top-left\",\n                offset: 200\n              });\n            }\n            this.$notify({\n              title: \"🎉 重设成功\",\n              position: \"top-left\",\n              offset: 200\n            });\n            this.animate2 = true;\n            this.animate5 = false;\n          });\n        }\n      });\n    },\n    canacelEmpover() {\n      this.isGetToken = false;\n      this.$store.commit(\"connection\", true);\n    },\n    giveChatInitToWalletConnect() {\n      console.log(\"聊天栏正初始化.......\");\n      this.$refs.ChatMemu.init();\n    },\n    setEchartChange(data) {\n      this.echartChange = data;\n      console.log(this.echartChange);\n    },\n    async connectWallet() {\n      if (localStorage.getItem[\"token\"] == null || !this.$store.state.isconnect) {\n        try {\n          // 请求用户授权\n          await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          }).then(async handleAccountsChanged => {\n            this.$store.commit(\"setcurrentAddress\", handleAccountsChanged[0]);\n            this.$store.commit(\"changeAvatar\", handleAccountsChanged[0]);\n            this.user.userAddress = handleAccountsChanged[0];\n          }).catch(error => {\n            this.$store.commit(\"connection\", false);\n            if (error.code === 4001) {\n              // EIP-1193 userRejectedRequest error\n              console.log(\"Please connect to MetaMask.\");\n            } else {\n              console.error(error);\n            }\n          });\n        } catch (error) {\n          console.error(error);\n          this.$notify.error({\n            title: \"连接失败\",\n            position: \"top-left\",\n            offset: 200\n          });\n        }\n      }\n    },\n    Copy() {\n      navigator.clipboard.writeText(this.$store.state.currentAddress).then(() => {\n        this.isCopy = true;\n        setTimeout(() => {\n          this.isCopy = false;\n        }, 3000);\n      });\n    },\n    GETHashAvatar() {\n      if (this.$store.state.isconnect) {\n        this.avatar = \"data:image/png;base64,\" + new this.Identicon(this.$store.state.currentAddress, 120).toString();\n        this.$refs.avatar.width = 60;\n        this.$refs.avatar.height = 60;\n      } else {\n        this.avatar = require(\"@/assets/webAssets/MetaMask.png\");\n        this.$refs.avatar.width = 40;\n        this.$refs.avatar.height = 40;\n      }\n    }\n  }\n};","map":{"version":3,"names":["oasisChat","postOwnerContractList","getToken","setMnemonic","checkUserExist","setAuthenticationMetaInformation","forgetMnemonic","resetMnemonic","CryptoJS","name","components","data","isOpen","UserImageList","avatar","echartChange","user","encryptedPassword","changeingAccount","anmiate1","animate2","animate3","animate4","animate5","EmpowerSignForm","sp1","sp2","sp3","isGetToken","CopyTips","CopySuccess","isCopy","isRepeatClick","newMnemonic","isUnlocked","created","mounted","window","ethereum","undefined","_metamask","then","re","on","location","reload","$notify","title","type","position","offset","$store","state","isconnect","connectWallet","setTimeout","userAddress","currentAddress","methods","empower","opt","sp4","sp5","SHA256","toString","localStorage","clear","setItem","ownerAddress","commit","giveChatInitToWalletConnect","openEmpower","isEmpower","checkEmpower","viewControl","backPassword","error","canacelEmpover","console","log","$refs","ChatMemu","init","setEchartChange","getItem","request","method","handleAccountsChanged","catch","code","Copy","navigator","clipboard","writeText","GETHashAvatar","Identicon","width","height","require"],"sources":["src/views/layout.vue"],"sourcesContent":["<template>\n  <el-container>\n  <el-aside width=\"200px\" class=\"HomeMenu animate__animated animate__fadeInLeft\"><oasisChat ref=\"ChatMemu\" /></el-aside>\n  <el-container>\n    <el-header>Header</el-header>\n    <el-main>Main</el-main>\n  </el-container>\n</el-container>\n    <!-- <el-container>\n      <el-header>\n        <el-menu\n          class=\"el-menu-demo\"\n          mode=\"horizontal\"\n        >\n          <el-menu-item index=\"1\">\n            处理中心\n          </el-menu-item>\n        </el-menu>\n      </el-header>\n      <el-main>\n        <el-container>\n          <router-view />\n\n          \n          <el-aside\n            class=\"animate__animated animate__fadeInRight\"\n            style=\"width: auto;animation-delay: 1s;\"\n          >\n            <el-row\n              type=\"flex\"\n              class=\"row-bg\"\n              justify=\"space-around\"\n            >\n              <el-col :span=\"8\">\n                <div class=\"grid-content bg-purple \">\n                  <oasisTheme />\n                </div>\n              </el-col>\n              <el-col :span=\"12\">\n                <div class=\"grid-content bg-purple\">\n                  <div class=\"Walletbox\">\n                    <div\n                      class=\"WalletInnerBox\"\n                      @click.stop=\"Copy\"\n                    >\n                      <span\n                        class=\"avatarBox\"\n                        @click=\"openEmpower\"\n                      >\n                        <img\n                          class=\"avatar\"\n                          :src=\"$store.state.avatar\"\n                          alt=\"\"\n                          ref=\"avatar\"\n                          slot=\"reference\"\n                        >\n                      </span>\n                      <span class=\"address\">{{ \n                        $store.state.currentAddress==\"\"?\"MetaMask is not connected\":`${this.$store.state.currentAddress.slice(\n                          0,\n                          5\n                        )}...${this.$store.state.currentAddress.slice(-5)}`\n                      }}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </el-col>\n            </el-row>\n            <div class=\"BalanceEchart\">\n              <balanceEchart :echart-change=\"setEchartChange\" />\n            </div>\n            <div\n              class=\"userInf\"\n              v-if=\"$store.state.isconnect && $store.state.isEmpower\"\n            >\n              <userBar :back-password=\"viewControl\" />\n            </div>\n            <div\n              class=\"WaitLogin\"\n              v-if=\"!$store.state.isEmpower\"\n            >\n              <connectionTips />\n            </div>\n          </el-aside>\n        </el-container>\n      </el-main> -->\n    <!-- <el-footer>Footer</el-footer> -->\n    <!-- </el-container> -->\n<!-- \n    <transition\n      enter-active-class=\"animate__animated animate__fadeIn\"\n      leave-active-class=\"animate__animated animate__fadeOut\"\n    >\n      <div\n        class=\"EmpowerMask\"\n        v-if=\"isGetToken\"\n      >\n        <div class=\"EmpowerBox \">\n          <div class=\"EmpowerUserInfbox\">\n            <div\n              class=\"animate1 \"\n              v-if=\"anmiate1\"\n            >\n              <span\n                style=\"font-weight: 800;\n            font-size: 1.2vw;padding-right:4% ;\"\n              >正在连接到 </span>\n              <div class=\"EmpowerUserInf\">\n                <img\n                  class=\"UserImage\"\n                  :src=\"$store.state.avatar\"\n                  alt=\"\"\n                  ref=\"avatar\"\n                  slot=\"reference\"\n                >\n              </div>\n              <div class=\"EmpowerUserAddress\">\n                {{ `${$store.state.currentAddress.slice(\n                  0,\n                  5\n                )}...${$store.state.currentAddress.slice(37)}` }}\n              </div>\n            </div>\n            <div\n              class=\"animate2 animate__animated animate__fadeIn\"\n              v-if=\"animate2\"\n            >\n              <div class=\"EmpowerUserInf\">\n                <img\n                  class=\"UserImage\"\n                  :src=\"$store.state.avatar\"\n                  alt=\"\"\n                  ref=\"avatar\"\n                  slot=\"reference\"\n                >\n              </div>\n              <div class=\"EmpowerUserAddress\">\n                {{ `${$store.state.currentAddress.slice(\n                  0,\n                  5\n                )}...${$store.state.currentAddress.slice(37)}` }}\n              </div>\n              <div class=\"EmpowerPasswordBox\">\n                <div class=\"EmpowerPasswordBoxTop\">\n                  <el-form label-width=\"80px\">\n                    <el-form-item>\n                      <template slot=\"label\">\n                        <i class=\"el-icon-lock\" />\n                      </template>\n                      <el-input\n                        clearable\n                        class=\"EmpowerPassword\"\n                        type=\"password\"\n                        v-model=\"user.encryptedPassword\"\n                        placeholder=\"请输入授权码\"\n                        @keydown.enter.prevent.native=\"checkEmpower\"\n                        ref=\"password\"\n                      />\n                    </el-form-item>\n                  </el-form>\n                </div>\n                <div class=\"EmpowerPasswordBoxBottom\">\n                  <div class=\"EmpowerPasswordOpt\">\n                    <span\n                      style=\"margin-right: 5%;\"\n                      @click=\"viewControl(1)\"\n                    >忘记授权码</span>\n                    <span\n                      style=\"margin-left: 5%;\"\n                      @click=\"canacelEmpover\"\n                    >不授权直接进入</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              class=\"animate3 animate__animated animate__fadeInLeft\"\n              v-if=\"animate3\"\n            >\n              <div class=\"SignTop\">\n                <div class=\"SignUserInf\">\n                  <img\n                    class=\"SignUserImage\"\n                    :src=\"$store.state.avatar\"\n                    alt=\"\"\n                    ref=\"avatar\"\n                    slot=\"reference\"\n                  >\n                </div>\n                <div class=\"SignUserAddress\">\n                  {{ `${$store.state.currentAddress.slice(\n                    0,\n                    5\n                  )}...${$store.state.currentAddress.slice(37)}` }} 请设置授权信息和密保\n                </div>\n                <div />\n              </div>\n              <div class=\"SignForm\">\n                <el-form\n                  label-position=\"top\"\n                  label-width=\"80px\"\n                  :model=\"EmpowerSignForm\"\n                >\n                  <el-form-item label=\"授权码:\">\n                    <el-input\n                      type=\"password\"\n                      v-model=\"user.encryptedPassword\"\n                      placeholder=\"请输入授权码\"\n                    />\n                  </el-form-item>\n                  <el-divider />\n                  <el-form-item label=\"你喜欢看的电影:\">\n                    <el-input\n                      v-model=\"EmpowerSignForm.sp1\"\n                      placeholder=\"请输入密保1\"\n                    />\n                  </el-form-item>\n                  <el-form-item label=\"你喜欢听的音乐:\">\n                    <el-input\n                      v-model=\"EmpowerSignForm.sp2\"\n                      placeholder=\"请输入密保2\"\n                    />\n                  </el-form-item>\n                  <el-form-item label=\"你喜欢的运动:\">\n                    <el-input\n                      v-model=\"EmpowerSignForm.sp3\"\n                      placeholder=\"请输入密保3\"\n                    />\n                  </el-form-item>\n                </el-form>\n                <div class=\"SignSubmitBox\">\n                  <el-button\n                    type=\"danger\"\n                    @click=\"isGetToken=false\"\n                  >\n                    取消\n                  </el-button>\n                  <el-button\n                    type=\"primary\"\n                    @click=\"empower(2)\"\n                  >\n                    授权\n                  </el-button>\n                </div>\n              </div>\n            </div>\n            <div\n              class=\"animate4 animate__animated animate__fadeInLeft\"\n              v-if=\"animate4\"\n            >\n              <div class=\"SignTop\">\n                <div class=\"SignUserInf\">\n                  <img\n                    class=\"SignUserImage\"\n                    :src=\"$store.state.avatar\"\n                    alt=\"\"\n                    ref=\"avatar\"\n                    slot=\"reference\"\n                  >\n                </div>\n                <div class=\"SignUserAddress\">\n                  {{ `${$store.state.currentAddress.slice(\n                    0,\n                    5\n                  )}...${$store.state.currentAddress.slice(37)}` }} 找回密码\n                </div>\n                <div />\n              </div>\n              <div class=\"SignForm\">\n                <el-form\n                  label-position=\"top\"\n                  label-width=\"80px\"\n                  :model=\"EmpowerSignForm\"\n                >\n                  <el-form-item label=\"你喜欢看的电影:\">\n                    <el-input\n                      v-model=\"EmpowerSignForm.sp1\"\n                      placeholder=\"请输入密保1\"\n                    />\n                  </el-form-item>\n                  <el-form-item label=\"你喜欢听的音乐:\">\n                    <el-input\n                      v-model=\"EmpowerSignForm.sp2\"\n                      placeholder=\"请输入密保2\"\n                    />\n                  </el-form-item>\n                  <el-form-item label=\"你喜欢的运动:\">\n                    <el-input\n                      v-model=\"EmpowerSignForm.sp3\"\n                      placeholder=\"请输入密保3\"\n                    />\n                  </el-form-item>\n                </el-form>\n                <div class=\"SignSubmitBox\">\n                  <el-button\n                    type=\"danger\"\n                    @click=\"viewControl(2)\n                    \"\n                  >\n                    返回\n                  </el-button>\n                  <el-button\n                    type=\"primary\"\n                    @click=\"backPassword\"\n                  >\n                    找回\n                  </el-button>\n                </div>\n              </div>\n            </div>\n            <div\n              class=\"animate5\"\n              v-if=\"animate5\"\n            >\n              <div style=\"margin-bottom: 20px;font-size: 1vw;\">\n                请设置新的授权码\n              </div>\n              <el-input\n                v-model=\"newMnemonic\"\n                placeholder=\"请设置新的授权码\"\n              />\n              <el-button\n                type=\"danger\"\n                @click=\"viewControl(3)\"\n                style=\"margin-top: 20px;\"\n              >\n                取消\n              </el-button>\n              <el-button\n                type=\"primary\"\n                @click=\"resetMnemonic\"\n                style=\"margin-top: 20px;\"\n              >\n                重设\n              </el-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </transition> -->\n</template>\n<script>\n// components\n  // import  connectionTips from \"@/views/bar/connectionTips.vue\"\n  // import oasisTheme from \"@/views/bar/oasisTheme.vue\" \n  // import balanceEchart from \"@/views/bar/balanceEchart.vue\";\n  // import userBar from \"@/views/bar/userBar.vue\";\n  import oasisChat from \"@/views/leftMenu/oasisChat.vue\";\n// func\n  import { postOwnerContractList } from \"@/api/axios/ownerContractLIst\";\n  import {\n    getToken,\n    setMnemonic,\n    checkUserExist,\n    setAuthenticationMetaInformation,\n    forgetMnemonic,\n    resetMnemonic,\n  } from \"@/api/axios/user\";\n  import CryptoJS from \"crypto-js\";\n  export default {\n    name: \"MarketShopIndex\",\n    components: {\n      // oasisTheme,\n      // balanceEchart,\n      // userBar,\n      oasisChat,\n      // connectionTips,\n    },\n    data() {\n      return {\n        //****聊天栏******//\n        isOpen: false,\n        UserImageList: [],\n        avatar: \"\",\n        //*********************//\n        //方法\n        echartChange: null,\n        //连接钱包\n        user: {\n          encryptedPassword: \"\",\n        },\n        changeingAccount: false,\n        anmiate1: true,\n        animate2: false,\n        animate3: false,\n        animate4: false,\n        animate5: false,\n        EmpowerSignForm: {\n          sp1: \"\",\n          sp2: \"\",\n          sp3: \"\",\n        },\n        isGetToken: false,\n        CopyTips: \"点击复制\",\n        CopySuccess: \"复制成功！\",\n        isCopy: false,\n        isRepeatClick: true,\n        newMnemonic: \"\",\n        isUnlocked: false,\n      };\n    },\n    created() {},\n    async mounted() {\n      if (window.ethereum != undefined) {\n        await window.ethereum._metamask\n          .isUnlocked()\n          .then((re) => (this.isUnlocked = re));\n        window.ethereum.on(\"accountsChanged\", async () => {\n          window.location.reload();\n        });\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n          this.$notify({\n            title: \"已切换链\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200,\n          });\n        });\n        if (!this.$store.state.isconnect && this.isUnlocked) {\n          await this.connectWallet();\n          this.isGetToken = true;\n          setTimeout(async () => {\n            this.anmiate1 = false;\n            await checkUserExist({\n              userAddress: this.$store.state.currentAddress,\n            }).then(async (re) => {\n              if (re.data.data == \"\") {\n                this.animate3 = true;\n              } else {\n                this.animate2 = true;\n              }\n            });\n          }, 2000);\n        }\n      }\n    },\n    methods: {\n      async empower(opt) {\n        if (opt == 2) {\n          if (\n            this.EmpowerSignForm.sp1 == \"\" ||\n            this.EmpowerSignForm.sp2 == \"\" ||\n            this.EmpowerSignForm.sp3 == \"\" ||\n            this.EmpowerSignForm.sp4 == \"\" ||\n            this.EmpowerSignForm.sp5 == \"\" ||\n            this.user.encryptedPassword == \"\"\n          ) {\n            this.$notify({\n              title: \"信息不能为空\",\n              type: \"warning\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            return;\n          }\n        }\n        this.user.encryptedPassword = CryptoJS.SHA256(\n          this.user.encryptedPassword\n        ).toString();\n        await setMnemonic(this.user);\n        this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n        await setAuthenticationMetaInformation(this.EmpowerSignForm);\n        await getToken(this.user).then(async (re) => {\n          localStorage.clear();\n          if (re.data.data == null) {\n            this.$notify({\n              title: \"密码错误\",\n              type: \"waring\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          } else {\n            localStorage.setItem(\"token\", re.data.data);\n            let currentAddress = {\n              ownerAddress: this.EmpowerSignForm.userAddress,\n            };\n            await postOwnerContractList(currentAddress).then((re) => {\n              this.$store.commit(\"setOwnerNFTList\", re.data.data);\n            });\n            this.giveChatInitToWalletConnect();\n            this.$store.commit(\"connection\", true);\n            this.$store.commit(\"setEmpower\", true);\n            this.isGetToken = false;\n            this.$notify({\n              title: \"🎉 连接成功\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          }\n        });\n      },\n      openEmpower() {\n        if (this.$store.state.isEmpower || window.ethereum == undefined) {\n          return;\n        }\n        if (!this.isUnlocked) {\n          this.$notify({\n            title: \"钱包未解锁\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200,\n          });\n          return;\n        } else {\n          this.isGetToken = true;\n        }\n      },\n      async checkEmpower() {\n        this.user.encryptedPassword = CryptoJS.SHA256(\n          this.user.encryptedPassword\n        ).toString();\n        await getToken(this.user).then((re) => {\n          localStorage.clear();\n          if (re.data.data == null) {\n            this.$notify({\n              title: \"授权码错误\",\n              type: \"warning\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          } else {\n            let currentAddress = {\n              ownerAddress: this.$store.state.currentAddress,\n            };\n            postOwnerContractList(currentAddress).then((re) => {\n              this.$store.commit(\"setOwnerNFTList\", re.data.data);\n            });\n            localStorage.setItem(\"token\", re.data.data);\n            this.$store.commit(\"setEmpower\", true);\n            this.$store.commit(\"connection\", true);\n            this.giveChatInitToWalletConnect();\n            this.isGetToken = false;\n            this.$notify({\n              title: \"🎉 连接成功\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          }\n        });\n      },\n      viewControl(opt) {\n        switch (opt) {\n          case 1:\n            this.animate2 = false;\n            this.animate4 = true;\n            break;\n          case 2:\n            this.animate2 = true;\n            this.animate4 = false;\n            break;\n          case 3:\n            this.animate2 = true;\n            this.animate5 = false;\n            break;\n          default:\n            this.animate2 = false;\n            this.isGetToken = true;\n            this.anmiate1 = false;\n            this.animate4 = true;\n            this.user.encryptedPassword = \"\";\n            break;\n        }\n      },\n      async backPassword() {\n        this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n        forgetMnemonic(this.EmpowerSignForm).then((re) => {\n          if (re.data.data) {\n            this.animate5 = true;\n            this.animate4 = false;\n            this.$notify({\n              title: \"密保正确\",\n              type: \"success\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          } else {\n            this.$notify({\n              title: \"密保错误\",\n              type: \"warning\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          }\n        });\n      },\n      async resetMnemonic() {\n        this.EmpowerSignForm.newMnemonic = CryptoJS.SHA256(\n          this.newMnemonic\n        ).toString();\n        this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n        await checkUserExist(this.EmpowerSignForm).then((re) => {\n          if (re.data.data == this.EmpowerSignForm.encryptedPassword) {\n            this.$notify({\n              title: \"不能与旧密码重复\",\n              type: \"warning\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            return;\n          } else {\n            resetMnemonic(this.EmpowerSignForm).then((re) => {\n              if (re.data.data == null) {\n                this.$notify.error({\n                  title: \"系统异常\",\n                  position: \"top-left\",\n                  offset: 200,\n                });\n              }\n              this.$notify({\n                title: \"🎉 重设成功\",\n                position: \"top-left\",\n                offset: 200,\n              });\n              this.animate2 = true;\n              this.animate5 = false;\n            });\n          }\n        });\n      },\n      canacelEmpover() {\n        this.isGetToken = false;\n        this.$store.commit(\"connection\", true);\n      },\n      giveChatInitToWalletConnect() {\n        console.log(\"聊天栏正初始化.......\");\n        this.$refs.ChatMemu.init();\n      },\n      setEchartChange(data) {\n        this.echartChange = data;\n        console.log(this.echartChange);\n      },\n      async connectWallet() {\n        if (\n          localStorage.getItem[\"token\"] == null ||\n          !this.$store.state.isconnect\n        ) {\n          try {\n            // 请求用户授权\n            await window.ethereum\n              .request({ method: \"eth_requestAccounts\" })\n              .then(async (handleAccountsChanged) => {\n                this.$store.commit(\"setcurrentAddress\", handleAccountsChanged[0]);\n                this.$store.commit(\"changeAvatar\", handleAccountsChanged[0]);\n                this.user.userAddress = handleAccountsChanged[0];\n              })\n              .catch((error) => {\n                this.$store.commit(\"connection\", false);\n                if (error.code === 4001) {\n                  // EIP-1193 userRejectedRequest error\n                  console.log(\"Please connect to MetaMask.\");\n                } else {\n                  console.error(error);\n                }\n              });\n          } catch (error) {\n            console.error(error);\n            this.$notify.error({\n              title: \"连接失败\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          }\n        }\n      },\n      Copy() {\n        navigator.clipboard\n          .writeText(this.$store.state.currentAddress)\n          .then(() => {\n            this.isCopy = true;\n            setTimeout(() => {\n              this.isCopy = false;\n            }, 3000);\n          });\n      },\n      GETHashAvatar() {\n        if (this.$store.state.isconnect) {\n          this.avatar =\n            \"data:image/png;base64,\" +\n            new this.Identicon(this.$store.state.currentAddress, 120).toString();\n          this.$refs.avatar.width = 60;\n          this.$refs.avatar.height = 60;\n        } else {\n          this.avatar = require(\"@/assets/webAssets/MetaMask.png\");\n          this.$refs.avatar.width = 40;\n          this.$refs.avatar.height = 40;\n        }\n      },\n    },\n  };\n</script>\n<!-- <style lang=\"scss\" scoped>\n@import \"@/style/index.css\";\n</style>\n<style lang=\"scss\" scoped>\n@import \"@/style/MarketShop/index.scss\";\n</style> \n  \n<style lang=\"scss\" scoped>\n.EmpowerMask {\n  z-index: 200;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  .EmpowerBox {\n    transition: all 0.3s ease-in-out;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    width: 650px;\n    border-radius: 30px;\n    background-color: white;\n    display: flex;\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\n      rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\n    .EmpowerUserInfbox {\n      margin: 5% 0 5% 0;\n      width: 100%;\n      height: 45%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      .animate1 {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        transition: all 1s ease-in-out;\n        width: 100%;\n        .EmpowerUserInf {\n          width: 120px;\n          height: 120px;\n          border-radius: 50%;\n          overflow: hidden;\n          border: 4px solid var(--border-green--);\n          .UserImage {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n          }\n        }\n        .EmpowerUserAddress {\n          margin-top: 3%;\n          margin-bottom: 3%;\n          font-weight: 800;\n          font-size: 1.2vw;\n          padding-left: 4%;\n        }\n      }\n      .animate2 {\n        transition: all 1s ease-in-out;\n        @extend .animate1;\n        .EmpowerUserAddress {\n          padding-left: 0;\n        }\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        .EmpowerPasswordBox {\n          .EmpowerPasswordBoxTop {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            width: 100%;\n            .el-form {\n              margin-right: 10%;\n            }\n            .el-input /deep/ .el-input__inner {\n              border: 1px solid rgba(0, 0, 0, 0);\n              border-bottom: 1px solid rgb(0, 0, 0);\n              border-radius: 0px;\n            }\n          }\n          .EmpowerPasswordBoxBottom {\n            width: 100%;\n            font-size: 0.7vw;\n            .EmpowerPasswordOpt {\n              margin-top: 30px;\n              display: flex;\n              justify-content: space-around;\n              span {\n                cursor: pointer;\n              }\n            }\n          }\n        }\n      }\n      .animate3 {\n        @extend .animate1;\n        flex-direction: column;\n        .SignTop {\n          width: 100%;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          .SignUserInf {\n            width: 50px;\n            height: 50px;\n            border-radius: 50%;\n            overflow: hidden;\n            border: 2px solid #ff0000;\n            .SignUserImage {\n              width: 100%;\n              height: 100%;\n              object-fit: cover;\n            }\n          }\n          .SignUserAddress {\n            font-weight: 800;\n            font-size: 1vw;\n            padding-left: 2%;\n          }\n        }\n\n        .SignForm {\n          width: 50%;\n          margin-top: 2%;\n          .SignSubmitBox {\n            display: flex;\n            margin: 3% 0 3% 0;\n            justify-content: space-around;\n            align-items: center;\n          }\n        }\n      }\n      .animate4 {\n        @extend .animate3;\n        .el-input /deep/ .el-input__inner {\n          border: 1px solid rgba(0, 0, 0, 0);\n          border-bottom: 1px solid rgb(0, 0, 0);\n          border-radius: 0px;\n        }\n      }\n      .animate5 {\n        .el-input /deep/ .el-input__inner {\n          border: 1px solid rgba(0, 0, 0, 0);\n          border-bottom: 1px solid rgb(0, 0, 0);\n          border-radius: 0px;\n        }\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n.Walletbox {\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n}\n.avatar {\n  object-fit: fill;\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  float: right;\n}\n.avatarBox {\n  overflow: hidden;\n  border-radius: 50%;\n  width: 38px;\n  height: 38px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 10%;\n  border: 2px solid var(--border-green--);\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    border: 2px solid var(--border-green--);\n    box-shadow: 0 0 20px var(--border-green--);\n    transition: all 0.3s ease-in-out;\n  }\n}\n.MetaMaskAvatar {\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.BOX {\n  width: 100%;\n  height: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.WalletInnerBox {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  cursor: pointer;\n}\n.address {\n  margin-left: 5%;\n  color: var(--Dark--);\n  font-weight: 800;\n  font-size: 12px;\n  width: 50%;\n  text-align: center;\n  border-radius: 10px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  font-family: Arial, Helvetica, sans-serif;\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    background-color: rgba(238, 238, 238, 0.1);\n    transition: all 0.3s ease-in-out;\n  }\n}\n.feePercentage {\n  width: 90%;\n  height: 100%;\n  background-color: var(--White--);\n  border-radius: 40px;\n  box-shadow: var(--boxshdow-style--);\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px,\n      rgba(14, 30, 37, 0.32) 0px 2px 16px 0px;\n    transition: all 0.3s ease-in-out;\n  }\n}\n</style> -->\n\n<style lang=\"scss\" scoped>\n@import \"@/style/index.css\";\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}