{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getNFTStruct } from \"@/api/axios/contract\";\nexport default {\n  name: \"NFTInf\",\n  data() {\n    return {\n      NFTInf: null,\n      NFTMetaData: null,\n      NFTContract: null,\n      supplyer: \"\",\n      NFTName: \"\",\n      NFTImage: \"#\",\n      symbol: null,\n      NFTSeries: \"\",\n      description: \"\",\n      maximums: 0,\n      currentId: 0,\n      activeTab: \"first\",\n      seriesNFTArrays: []\n    };\n  },\n  mounted() {\n    this.init();\n    this.getThisSeriesNFT();\n  },\n  methods: {\n    async init() {\n      try {\n        this.NFTInf = await JSON.parse(this.$store.state.marketNFTInf);\n        this.NFTMetaData = await JSON.parse(this.NFTInf[6]);\n        this.NFTName = this.NFTMetaData.name;\n        console.log(this.NFTInf);\n        this.supplyer = `${this.NFTInf[1].slice(0, 5)}...${this.NFTInf[1].slice(37)}`;\n        this.NFTImage = this.NFTMetaData.image;\n        this.description = this.NFTMetaData.description;\n        await getNFTStruct(this.NFTInf[2]).then(re => {\n          this.NFTContract = re;\n        });\n        await this.NFTContract.methods.symbol().call().then(re => {\n          this.symbol = re;\n        });\n        await this.NFTContract.methods.name().call().then(re => {\n          this.NFTSeries = re;\n        });\n        await this.NFTContract.methods._maximums().call().then(re => {\n          this.maximums = re;\n        });\n        await this.NFTContract.methods._currentId().call().then(re => {\n          this.currentId = re;\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async getThisSeriesNFT() {\n      for (let index = 0; index < this.currentId; index++) {\n        this.NFTContract.methods._nftMetaData(index).call().then(re => {\n          this.seriesNFTArrays.push(re);\n        });\n        console.log(this.seriesNFTArrays);\n      }\n    }\n  }\n};","map":{"version":3,"names":["getNFTStruct","name","data","NFTInf","NFTMetaData","NFTContract","supplyer","NFTName","NFTImage","symbol","NFTSeries","description","maximums","currentId","activeTab","seriesNFTArrays","mounted","init","getThisSeriesNFT","methods","JSON","parse","$store","state","marketNFTInf","console","log","slice","image","then","re","call","_maximums","_currentId","error","index","_nftMetaData","push"],"sources":["src/views/market/NFTInf.vue"],"sourcesContent":["<template>\n  <div class=\"NFTInfMain animate__animated animate__fadeInDown\">\n    <div class=\"NFTInfBackground\">\n      <router-link :to=\"{ name: 'MarketShop' }\"><i class=\"el-icon-arrow-left\" style=\"font-size: 3vw;\"></i>\n      </router-link>\n    </div>\n    <div class=\"NFTInfContextBox\">\n      <div class=\"NFTInfBox\">\n        <div class=\"AvatarBox\">\n          <div class=\"AvatarBorder\">\n            <img :src=\"NFTImage\" alt=\"\">\n          </div>\n          <div class=\"Inf\">\n            <div class=\"NFTName\">\n              <h1>{{NFTName}}</h1>\n            </div>\n            <div class=\"NFTContract\">\n              <div class=\"NFTSupplyer\">\n                由 <span style=\"font-weight: 800;font-size: 1.2vw;\">{{supplyer}}</span>\n              </div>\n              <div class=\"NFTInf\">\n                <div class=\"NFTCounts\">\n                  系列<span style=\"font-weight: 800;\">{{ NFTSeries }}</span> ·\n                  代币符号<span style=\"font-weight: 800;\">{{ symbol }}</span> ·\n                  限量铸造<span style=\"font-weight: 800;\">{{ maximums }}</span> ·\n                  目前已铸造数量<span style=\"font-weight: 800;\">{{ currentId }}</span>\n\n                </div>\n                <div class=\"NFTdescription\">\n                  {{description}}\n                </div>\n              </div>\n            </div>\n            <!-- <h3>lskajdklasjd</h3>\n          <h3>lskajdklasjd</h3>\n          <h3>lskajdklasjd</h3>\n          <h3>lskajdklasjd</h3> -->\n          </div>\n        </div>\n      </div>\n      <div class=\"selectBox\">\n        <div class=\"selectBox-Button\">\n          <!-- <el-button class=\"selectBox-Active\">再&nbsp;&nbsp;&nbsp;售</el-button>\n          <el-button class=\"selectBox-NOActive\">未发售</el-button> -->\n          <el-tabs v-model=\"activeTab\">\n            <el-tab-pane label=\"正在售卖\" name=\"first\">\n              <div class=\"Saleing\">\n                {{ seriesNFTArrays }}\n                <div class=\"NFTInf\" v-for=\"inf in seriesNFTArrays\" :key=\"inf.ipfsPath\">\n                  <div class=\"imageBox\">\n                    <img class=\"NFTImage\" :src=\"inf.ipfsPath\" alt=\"\" />\n                  </div>\n                  <div class=\"Inf\">\n                    <!-- <template v-if=\"inf.isActive\"> -->\n                      <div class=\"NFTName\">{{ inf.nftName }}</div>\n                      <div class=\"ownerAndToSell\">\n                        <div class=\"ToSellBox\">\n                          <!-- <div v-if=\"!inf.isActive\" class=\"ToSellinnerBox animate__animated animate__fadeInUp\">\n                            <i class=\"el-icon-sort\"></i>\n                            <span class=\"apporve \" @click=\"inf.isActive = !inf.isActive\"> 上架 </span>\n\n                          </div> -->\n                          <!-- <div v-else class=\"downSale animate__animated animate__fadeInUp\" @click=\"downSale(inf)\">\n                            <i class=\"el-icon-sort\"></i>\n                            <span class=\"apporve \"> 下架 </span>\n                          </div> -->\n\n                        </div>\n                      </div>\n                    <!-- </template> -->\n                    <!-- <template v-else>\n                      <div class=\"NFTName animate__animated animate__fadeIn\"><el-input v-model=\"inf.price\" placeholder=\"请输入内容\"></el-input>\n                        ETH\n                      </div>\n                      <div class=\"ownerAndToSell animate__animated animate__fadeInDown\">\n                        <div class=\"ToSellBox\">\n                          <div class=\"ToSellinnerBox\">\n                            <i class=\"el-icon-sort\"></i>\n                            <span class=\"apporve\" @click=\"UpSale(inf)\"> 确认 </span>\n                          </div>\n                          <div class=\"ToSellinnerBox \" style=\"background-color: rgba(225, 44, 44, 0.7);\">\n                            <i class=\"el-icon-sort\" style=\"color: white;\"></i>\n                            <span class=\"apporve\" style=\"color: white;\" @click=\"inf.isActive = !inf.isActive\"> 取消 </span>\n                          </div>\n                        </div>\n\n                      </div>\n                    </template> -->\n\n                  </div>\n\n                </div>\n              \n              </div>\n            </el-tab-pane>\n            <el-tab-pane label=\"暂未发售\" name=\"second\">\n\n            </el-tab-pane>\n          </el-tabs>\n        </div>\n\n      </div>\n      <div class=\"MoreNFTInfBox\">\n        <div class=\"seriesNFTBox\">\n\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { getNFTStruct } from \"@/api/axios/contract\";\n  export default {\n    name: \"NFTInf\",\n    data() {\n      return {\n        NFTInf: null,\n        NFTMetaData: null,\n        NFTContract: null,\n        supplyer: \"\",\n        NFTName: \"\",\n        NFTImage: \"#\",\n        symbol: null,\n        NFTSeries: \"\",\n        description: \"\",\n        maximums: 0,\n        currentId: 0,\n        activeTab: \"first\",\n        seriesNFTArrays: [],\n      };\n    },\n    mounted() {\n      this.init();\n      this.getThisSeriesNFT();\n    },\n    methods: {\n      async init() {\n        try {\n          this.NFTInf = await JSON.parse(this.$store.state.marketNFTInf);\n          this.NFTMetaData = await JSON.parse(this.NFTInf[6]);\n          this.NFTName = this.NFTMetaData.name;\n          console.log(this.NFTInf);\n          this.supplyer = `${this.NFTInf[1].slice(0, 5)}...${this.NFTInf[1].slice(\n            37\n          )}`;\n          this.NFTImage = this.NFTMetaData.image;\n          this.description = this.NFTMetaData.description;\n          await getNFTStruct(this.NFTInf[2]).then((re) => {\n            this.NFTContract = re;\n          });\n          await this.NFTContract.methods\n            .symbol()\n            .call()\n            .then((re) => {\n              this.symbol = re;\n            });\n          await this.NFTContract.methods\n            .name()\n            .call()\n            .then((re) => {\n              this.NFTSeries = re;\n            });\n          await this.NFTContract.methods\n            ._maximums()\n            .call()\n            .then((re) => {\n              this.maximums = re;\n            });\n          await this.NFTContract.methods\n            ._currentId()\n            .call()\n            .then((re) => {\n              this.currentId = re;\n            });\n        } catch (error) {\n          console.log(error);\n        }\n      },\n      async getThisSeriesNFT() {\n        for (let index = 0; index < this.currentId; index++) {\n          this.NFTContract.methods\n            ._nftMetaData(index)\n            .call()\n            .then((re) => {\n              this.seriesNFTArrays.push(re);\n            });\n          console.log(this.seriesNFTArrays);\n        }\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n.NFTInfMain {\n  font-family: Arial, Helvetica, sans-serif;\n  min-width: min-content;\n  width: 100%;\n  height: 100%;\n  .NFTInfBackground {\n    width: 100%;\n    height: 270px;\n    background-image: url(\"@/assets/webAssets/MetaMask.png\");\n    background-repeat: repeat;\n    background-size: contain;\n    text-align: left;\n    position: relative;\n    a {\n      position: absolute;\n      top: 5%;\n      left: 1%;\n      margin-top: 20px;\n      text-decoration: none;\n      color: white;\n    }\n  }\n  .NFTInfContextBox {\n    width: 100%;\n    height: 100%;\n    .selectBox {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      background-color: white;\n\n      /deep/ .selectBox-Button {\n        width: 83%;\n        height: 70px;\n        border-bottom: 1px solid #dcdfe6;\n        .Saleing {\n          height: 100%;\n          text-align: center;\n          width: 100%;\n          font-family: Arial, Helvetica, sans-serif;\n\n          .NFTInf {\n            background-color: var(--White--);\n            border-radius: 30px;\n            width: 315px;\n            height: 390px;\n            display: inline-block;\n            overflow: hidden;\n            transition: all 0.3s ease-in-out;\n            &:hover {\n              box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px,\n                rgba(14, 30, 37, 0.32) 0px 2px 16px 0px;\n              transition: all 0.3s ease-in-out;\n            }\n          }\n          @media screen and (max-width: 1600px) and (min-width: 1600px) {\n            .ToSellMain {\n              width: 100%;\n              justify-content: center;\n              align-items: center;\n              flex-direction: column;\n            }\n          }\n          .imageBox {\n            width: 100%;\n            height: 63%;\n            border-radius: 30px;\n\n            z-index: 1;\n            overflow: hidden;\n          }\n          .Inf {\n            width: 100%;\n            height: 100%;\n            position: relative;\n          }\n          .NFTImage {\n            object-fit: cover;\n            width: 100%;\n            transition: all 0.6s;\n            cursor: pointer;\n\n            overflow: hidden;\n            &:hover {\n              transform: scale(1.1);\n\n              transition: all 0.6s;\n            }\n          }\n          .NFTName {\n            display: inline-block;\n            color: var(--Dark--);\n            font-weight: 800;\n            text-align: left;\n            margin-top: 20px;\n            font-size: 13px;\n          }\n          .ownerAndToSell {\n            width: 100%;\n            display: flex;\n            margin-top: 18px;\n            justify-content: center;\n            align-items: center;\n          }\n          .ToSellBox {\n            display: flex;\n            justify-content: flex-start;\n            align-items: center;\n          }\n\n          .ToSellinnerBox {\n            margin: 2%;\n            width: 82.79px;\n            padding: 8px 0px 8px 0px;\n            color: #55c960;\n            background-color: rgba(85, 201, 96, 0.12);\n            border-radius: 10px;\n            cursor: pointer;\n            transition: all 0.3s ease-in-out;\n            &:hover {\n              background-color: rgba(85, 201, 96, 0.24);\n              transition: all 0.3s ease-in-out;\n            }\n          }\n          .downSale {\n            @extend .ToSellinnerBox;\n            background-color: #d63131e5;\n            color: white;\n            &:hover {\n              background-color: rgb(255, 0, 0);\n              transition: all 0.3s ease-in-out;\n            }\n          }\n          .apporve {\n            font-size: 12px;\n            font-weight: 800;\n          }\n          .ToSellHeader {\n            display: flex;\n            justify-content: space-between;\n            width: 95%;\n            height: 10%;\n            font-size: 25px;\n            margin-top: 3%;\n            border-radius: 30px;\n            padding: 3.5% 0;\n            font-weight: 800;\n            color: var(--Dark--);\n          }\n          .ToSellHeaderBox {\n            width: 100%;\n            text-align: center;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n          }\n        }\n        .el-tabs__nav {\n          height: 60px;\n        }\n        .el-tabs {\n          color: #000;\n          border-radius: 20px;\n          left: 0px;\n          top: 0px;\n          position: relative;\n        }\n        /* 去除灰色横条 */\n        .el-tabs__nav-wrap::after {\n          position: static !important;\n        }\n        /* 设置滑块颜色 */\n        .el-tabs__active-bar {\n          background-color: rgb(246, 246, 246);\n        }\n        /* 设置滑块停止位置 */\n        .el-tabs__active-bar.is-top {\n          height: 100%;\n          width: 104px !important;\n          border-radius: 17px;\n          top: 0px !important;\n          left: -15px !important;\n          position: absolute !important;\n          z-index: 1;\n        }\n        /* 设置当前选中样式 */\n        .el-tabs__item.is-active {\n          background-color: transparent;\n          color: black;\n          z-index: 2;\n        }\n        /* 设置未被选中样式 */\n        .el-tabs__item {\n          padding: 10px 20px !important;\n          width: auto;\n          font-size: 18px;\n          font-weight: 800;\n          box-sizing: border-box;\n          display: inline-block;\n          position: relative !important;\n          color: #000000 !important;\n          z-index: 2;\n        }\n\n        .selectBox-Active {\n          border: none;\n          font-size: 1vw;\n          border-radius: 20px;\n          transition: all 0.3s ease-in-out;\n          font-weight: 800;\n          &:hover {\n            background-color: rgb(246, 246, 246);\n            transition: all 0.3s ease-in-out;\n            color: black;\n          }\n        }\n        .selectBox-NOActive {\n          @extend .selectBox-Active;\n        }\n      }\n    }\n    .NFTInfBox {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 25%;\n      background-color: white;\n      .AvatarBox {\n        width: 90%;\n        height: 100%;\n\n        position: relative;\n        .Inf {\n          line-height: 35px;\n          position: absolute;\n          left: 5%;\n          top: 25%;\n          .NFTName {\n            width: 100%;\n            height: auto;\n            font-weight: 800;\n            text-align: left;\n            font-size: 2vw;\n          }\n          .NFTContract {\n            margin-top: 4%;\n          }\n          .NFTSupplyer {\n            text-align: left;\n            font-size: 1.1vw;\n          }\n          .NFTInf {\n            float: left;\n            .NFTCounts {\n              margin-top: 2%;\n              text-align: left;\n              font-size: 1.1vw;\n              span {\n                margin-left: 5px;\n                margin-right: 10px;\n              }\n            }\n            .NFTdescription {\n              text-align: left;\n              margin-top: 1.5%;\n              font-size: 1vw;\n            }\n          }\n        }\n        .AvatarBorder {\n          border: 4px solid white;\n          width: 10vw;\n          height: 10vw;\n          max-height: 20vw;\n          position: absolute;\n          left: 5%;\n          top: -9vw;\n          border-radius: 16px;\n          overflow: hidden;\n          box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 5px 0px,\n            rgba(0, 0, 0, 0.1) 0px 0px 1px 0px;\n          img {\n            object-fit: fill;\n            min-width: 100%;\n            height: 100%;\n            border-radius: 20px;\n            transition: all 0.6s;\n            &:hover {\n              transform: scale(1.1);\n              transition: all 0.6s;\n            }\n          }\n        }\n      }\n    }\n    .MoreNFTInfBox {\n      width: 100%;\n      height: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      .seriesNFTBox {\n        background-color: white;\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n}\n</style>"],"mappings":";AAgHA,SAAAA,YAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,WAAA;MACAC,WAAA;MACAC,QAAA;MACAC,OAAA;MACAC,QAAA;MACAC,MAAA;MACAC,SAAA;MACAC,WAAA;MACAC,QAAA;MACAC,SAAA;MACAC,SAAA;MACAC,eAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;IACA,KAAAC,gBAAA;EACA;EACAC,OAAA;IACA,MAAAF,KAAA;MACA;QACA,KAAAd,MAAA,SAAAiB,IAAA,CAAAC,KAAA,MAAAC,MAAA,CAAAC,KAAA,CAAAC,YAAA;QACA,KAAApB,WAAA,SAAAgB,IAAA,CAAAC,KAAA,MAAAlB,MAAA;QACA,KAAAI,OAAA,QAAAH,WAAA,CAAAH,IAAA;QACAwB,OAAA,CAAAC,GAAA,MAAAvB,MAAA;QACA,KAAAG,QAAA,WAAAH,MAAA,IAAAwB,KAAA,iBAAAxB,MAAA,IAAAwB,KAAA,CACA,EACA;QACA,KAAAnB,QAAA,QAAAJ,WAAA,CAAAwB,KAAA;QACA,KAAAjB,WAAA,QAAAP,WAAA,CAAAO,WAAA;QACA,MAAAX,YAAA,MAAAG,MAAA,KAAA0B,IAAA,CAAAC,EAAA;UACA,KAAAzB,WAAA,GAAAyB,EAAA;QACA;QACA,WAAAzB,WAAA,CAAAc,OAAA,CACAV,MAAA,GACAsB,IAAA,GACAF,IAAA,CAAAC,EAAA;UACA,KAAArB,MAAA,GAAAqB,EAAA;QACA;QACA,WAAAzB,WAAA,CAAAc,OAAA,CACAlB,IAAA,GACA8B,IAAA,GACAF,IAAA,CAAAC,EAAA;UACA,KAAApB,SAAA,GAAAoB,EAAA;QACA;QACA,WAAAzB,WAAA,CAAAc,OAAA,CACAa,SAAA,GACAD,IAAA,GACAF,IAAA,CAAAC,EAAA;UACA,KAAAlB,QAAA,GAAAkB,EAAA;QACA;QACA,WAAAzB,WAAA,CAAAc,OAAA,CACAc,UAAA,GACAF,IAAA,GACAF,IAAA,CAAAC,EAAA;UACA,KAAAjB,SAAA,GAAAiB,EAAA;QACA;MACA,SAAAI,KAAA;QACAT,OAAA,CAAAC,GAAA,CAAAQ,KAAA;MACA;IACA;IACA,MAAAhB,iBAAA;MACA,SAAAiB,KAAA,MAAAA,KAAA,QAAAtB,SAAA,EAAAsB,KAAA;QACA,KAAA9B,WAAA,CAAAc,OAAA,CACAiB,YAAA,CAAAD,KAAA,EACAJ,IAAA,GACAF,IAAA,CAAAC,EAAA;UACA,KAAAf,eAAA,CAAAsB,IAAA,CAAAP,EAAA;QACA;QACAL,OAAA,CAAAC,GAAA,MAAAX,eAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}