{"ast":null,"code":"import errCode from 'err-code';\nimport { messages, codes } from '../errors.js';\n/**\n * Wrapper class to convert events into returned values\n */\nexport class DHTPeerRouting {\n  constructor(dht) {\n    this.dht = dht;\n  }\n  async findPeer(peerId, options = {}) {\n    for await (const event of this.dht.findPeer(peerId, options)) {\n      if (event.name === 'FINAL_PEER') {\n        return event.peer;\n      }\n    }\n    throw errCode(new Error(messages.NOT_FOUND), codes.ERR_NOT_FOUND);\n  }\n  async *getClosestPeers(key, options = {}) {\n    for await (const event of this.dht.getClosestPeers(key, options)) {\n      if (event.name === 'FINAL_PEER') {\n        yield event.peer;\n      }\n    }\n  }\n}","map":{"version":3,"names":["errCode","messages","codes","DHTPeerRouting","constructor","dht","findPeer","peerId","options","event","name","peer","Error","NOT_FOUND","ERR_NOT_FOUND","getClosestPeers","key"],"sources":["../../../src/dht/dht-peer-routing.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,OAAO,MAAM,UAAU;AAC9B,SAASC,QAAQ,EAAEC,KAAK,QAAQ,cAAc;AAM9C;;;AAGA,OAAM,MAAOC,cAAc;EAGzBC,YAAaC,GAAQ;IACnB,IAAI,CAACA,GAAG,GAAGA,GAAG;EAChB;EAEA,MAAMC,QAAQA,CAAEC,MAAc,EAAEC,OAAA,GAAwB,EAAE;IACxD,WAAW,MAAMC,KAAK,IAAI,IAAI,CAACJ,GAAG,CAACC,QAAQ,CAACC,MAAM,EAAEC,OAAO,CAAC,EAAE;MAC5D,IAAIC,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;QAC/B,OAAOD,KAAK,CAACE,IAAI;;;IAIrB,MAAMX,OAAO,CAAC,IAAIY,KAAK,CAACX,QAAQ,CAACY,SAAS,CAAC,EAAEX,KAAK,CAACY,aAAa,CAAC;EACnE;EAEA,OAAQC,eAAeA,CAAEC,GAAe,EAAER,OAAA,GAAwB,EAAE;IAClE,WAAW,MAAMC,KAAK,IAAI,IAAI,CAACJ,GAAG,CAACU,eAAe,CAACC,GAAG,EAAER,OAAO,CAAC,EAAE;MAChE,IAAIC,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;QAC/B,MAAMD,KAAK,CAACE,IAAI;;;EAGtB"},"metadata":{},"sourceType":"module","externalDependencies":[]}