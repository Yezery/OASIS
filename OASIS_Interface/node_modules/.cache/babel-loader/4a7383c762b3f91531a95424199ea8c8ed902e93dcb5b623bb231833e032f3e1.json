{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport source from './source.js';\nimport sink from './sink.js';\nexport default ((socket, options) => {\n  options = options ?? {};\n  const connectedSource = source(socket);\n  let remoteAddress = options.remoteAddress;\n  let remotePort = options.remotePort;\n  if (socket.url != null) {\n    // only client->server sockets have urls, server->client connections do not\n    try {\n      const url = new URL(socket.url);\n      remoteAddress = url.hostname;\n      remotePort = parseInt(url.port, 10);\n    } catch {}\n  }\n  if (remoteAddress == null || remotePort == null) {\n    throw new Error('Remote connection did not have address and/or port');\n  }\n  const duplex = {\n    sink: sink(socket, options),\n    source: connectedSource,\n    connected: async () => await connectedSource.connected(),\n    close: async () => {\n      if (socket.readyState === socket.CONNECTING || socket.readyState === socket.OPEN) {\n        await new Promise(resolve => {\n          socket.addEventListener('close', () => {\n            resolve();\n          });\n          socket.close();\n        });\n      }\n    },\n    destroy: () => {\n      if (socket.terminate != null) {\n        socket.terminate();\n      } else {\n        socket.close();\n      }\n    },\n    remoteAddress,\n    remotePort,\n    socket\n  };\n  return duplex;\n});","map":{"version":3,"names":["source","sink","socket","options","connectedSource","remoteAddress","remotePort","url","URL","hostname","parseInt","port","Error","duplex","connected","close","readyState","CONNECTING","OPEN","Promise","resolve","addEventListener","destroy","terminate"],"sources":["../../src/duplex.ts"],"sourcesContent":[null],"mappings":";;;AAAA,OAAOA,MAAM,MAAM,aAAa;AAChC,OAAOC,IAAI,MAAM,WAAW;AAqB5B,gBAAe,CAACC,MAAiB,EAAEC,OAAgC,KAAqB;EACtFA,OAAO,GAAGA,OAAO,IAAI,EAAE;EAEvB,MAAMC,eAAe,GAAGJ,MAAM,CAACE,MAAM,CAAC;EACtC,IAAIG,aAAa,GAAuBF,OAAO,CAACE,aAAa;EAC7D,IAAIC,UAAU,GAAuBH,OAAO,CAACG,UAAU;EAEvD,IAAIJ,MAAM,CAACK,GAAG,IAAI,IAAI,EAAE;IACtB;IACA,IAAI;MACF,MAAMA,GAAG,GAAG,IAAIC,GAAG,CAACN,MAAM,CAACK,GAAG,CAAC;MAC/BF,aAAa,GAAGE,GAAG,CAACE,QAAQ;MAC5BH,UAAU,GAAGI,QAAQ,CAACH,GAAG,CAACI,IAAI,EAAE,EAAE,CAAC;KACpC,CAAC,MAAM;;EAGV,IAAIN,aAAa,IAAI,IAAI,IAAIC,UAAU,IAAI,IAAI,EAAE;IAC/C,MAAM,IAAIM,KAAK,CAAC,oDAAoD,CAAC;;EAGvE,MAAMC,MAAM,GAAoB;IAC9BZ,IAAI,EAAEA,IAAI,CAACC,MAAM,EAAEC,OAAO,CAAC;IAC3BH,MAAM,EAAEI,eAAe;IACvBU,SAAS,EAAE,MAAAA,CAAA,KAAY,MAAMV,eAAe,CAACU,SAAS,EAAE;IACxDC,KAAK,EAAE,MAAAA,CAAA,KAAW;MAChB,IAAIb,MAAM,CAACc,UAAU,KAAKd,MAAM,CAACe,UAAU,IAAIf,MAAM,CAACc,UAAU,KAAKd,MAAM,CAACgB,IAAI,EAAE;QAChF,MAAM,IAAIC,OAAO,CAAQC,OAAO,IAAI;UAClClB,MAAM,CAACmB,gBAAgB,CAAC,OAAO,EAAE,MAAK;YACpCD,OAAO,EAAE;UACX,CAAC,CAAC;UACFlB,MAAM,CAACa,KAAK,EAAE;QAChB,CAAC,CAAC;;IAEN,CAAC;IACDO,OAAO,EAAEA,CAAA,KAAK;MACZ,IAAIpB,MAAM,CAACqB,SAAS,IAAI,IAAI,EAAE;QAC5BrB,MAAM,CAACqB,SAAS,EAAE;OACnB,MAAM;QACLrB,MAAM,CAACa,KAAK,EAAE;;IAElB,CAAC;IACDV,aAAa;IACbC,UAAU;IACVJ;GACD;EAED,OAAOW,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}