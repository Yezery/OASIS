{"ast":null,"code":"import accessor from 'byte-access';\nconst TWO_32 = 4294967296;\nexport class LongBits {\n  constructor(hi = 0, lo = 0) {\n    this.hi = hi;\n    this.lo = lo;\n  }\n  /**\n   * Returns these hi/lo bits as a BigInt\n   */\n  toBigInt(unsigned) {\n    if (unsigned === true) {\n      return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n);\n    }\n    if (this.hi >>> 31 !== 0) {\n      const lo = ~this.lo + 1 >>> 0;\n      let hi = ~this.hi >>> 0;\n      if (lo === 0) {\n        hi = hi + 1 >>> 0;\n      }\n      return -(BigInt(lo) + (BigInt(hi) << 32n));\n    }\n    return BigInt(this.lo >>> 0) + (BigInt(this.hi >>> 0) << 32n);\n  }\n  /**\n   * Returns these hi/lo bits as a Number - this may overflow, toBigInt\n   * should be preferred\n   */\n  toNumber(unsigned) {\n    return Number(this.toBigInt(unsigned));\n  }\n  /**\n   * ZigZag decode a LongBits object\n   */\n  zzDecode() {\n    const mask = -(this.lo & 1);\n    const lo = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    const hi = (this.hi >>> 1 ^ mask) >>> 0;\n    return new LongBits(hi, lo);\n  }\n  /**\n   * ZigZag encode a LongBits object\n   */\n  zzEncode() {\n    const mask = this.hi >> 31;\n    const hi = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    const lo = (this.lo << 1 ^ mask) >>> 0;\n    return new LongBits(hi, lo);\n  }\n  /**\n   * Encode a LongBits object as a varint byte array\n   */\n  toBytes(buf, offset = 0) {\n    const access = accessor(buf);\n    while (this.hi > 0) {\n      access.set(offset++, this.lo & 127 | 128);\n      this.lo = (this.lo >>> 7 | this.hi << 25) >>> 0;\n      this.hi >>>= 7;\n    }\n    while (this.lo > 127) {\n      access.set(offset++, this.lo & 127 | 128);\n      this.lo = this.lo >>> 7;\n    }\n    access.set(offset++, this.lo);\n  }\n  /**\n   * Parse a LongBits object from a BigInt\n   */\n  static fromBigInt(value) {\n    if (value === 0n) {\n      return new LongBits();\n    }\n    const negative = value < 0;\n    if (negative) {\n      value = -value;\n    }\n    let hi = Number(value >> 32n) | 0;\n    let lo = Number(value - (BigInt(hi) << 32n)) | 0;\n    if (negative) {\n      hi = ~hi >>> 0;\n      lo = ~lo >>> 0;\n      if (++lo > TWO_32) {\n        lo = 0;\n        if (++hi > TWO_32) {\n          hi = 0;\n        }\n      }\n    }\n    return new LongBits(hi, lo);\n  }\n  /**\n   * Parse a LongBits object from a Number\n   */\n  static fromNumber(value) {\n    if (value === 0) {\n      return new LongBits();\n    }\n    const sign = value < 0;\n    if (sign) {\n      value = -value;\n    }\n    let lo = value >>> 0;\n    let hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n      hi = ~hi >>> 0;\n      lo = ~lo >>> 0;\n      if (++lo > 4294967295) {\n        lo = 0;\n        if (++hi > 4294967295) {\n          hi = 0;\n        }\n      }\n    }\n    return new LongBits(hi, lo);\n  }\n  /**\n   * Parse a LongBits object from a varint byte array\n   */\n  static fromBytes(buf, offset = 0) {\n    const access = accessor(buf);\n    // tends to deopt with local vars for octet etc.\n    const bits = new LongBits();\n    let i = 0;\n    if (buf.length - offset > 4) {\n      // fast route (lo)\n      for (; i < 4; ++i) {\n        // 1st..4th\n        bits.lo = (bits.lo | (access.get(offset) & 127) << i * 7) >>> 0;\n        if (access.get(offset++) < 128) {\n          return bits;\n        }\n      }\n      // 5th\n      bits.lo = (bits.lo | (access.get(offset) & 127) << 28) >>> 0;\n      bits.hi = (bits.hi | (access.get(offset) & 127) >> 4) >>> 0;\n      if (access.get(offset++) < 128) {\n        return bits;\n      }\n      i = 0;\n    } else {\n      for (; i < 4; ++i) {\n        /* istanbul ignore if */\n        if (offset >= buf.length) {\n          throw RangeError(`index out of range: ${offset} > ${buf.length}`);\n        }\n        // 1st..4th\n        bits.lo = (bits.lo | (access.get(offset) & 127) << i * 7) >>> 0;\n        if (access.get(offset++) < 128) {\n          return bits;\n        }\n      }\n    }\n    if (buf.length - offset > 4) {\n      // fast route (hi)\n      for (; i < 5; ++i) {\n        // 6th..10th\n        bits.hi = (bits.hi | (access.get(offset) & 127) << i * 7 + 3) >>> 0;\n        if (access.get(offset++) < 128) {\n          return bits;\n        }\n      }\n    } else if (offset < buf.byteLength) {\n      for (; i < 5; ++i) {\n        /* istanbul ignore if */\n        if (offset >= buf.length) {\n          throw RangeError(`index out of range: ${offset} > ${buf.length}`);\n        }\n        // 6th..10th\n        bits.hi = (bits.hi | (access.get(offset) & 127) << i * 7 + 3) >>> 0;\n        if (access.get(offset++) < 128) {\n          return bits;\n        }\n      }\n    }\n    /* istanbul ignore next */\n    throw RangeError('invalid varint encoding');\n  }\n}","map":{"version":3,"names":["accessor","TWO_32","LongBits","constructor","hi","lo","toBigInt","unsigned","BigInt","toNumber","Number","zzDecode","mask","zzEncode","toBytes","buf","offset","access","set","fromBigInt","value","negative","fromNumber","sign","fromBytes","bits","i","length","get","RangeError","byteLength"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}