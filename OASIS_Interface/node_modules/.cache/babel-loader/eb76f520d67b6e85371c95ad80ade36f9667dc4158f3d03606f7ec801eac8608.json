{"ast":null,"code":"import { CID } from 'multiformats/cid';\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {DAGAPI[\"resolve\"]}\n   */\n  const resolve = async (ipfsPath, options = {}) => {\n    const res = await api.post('dag/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ipfsPath}${options.path ? `/${options.path}`.replace(/\\/[/]+/g, '/') : ''}`,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      cid: CID.parse(data.Cid['/']),\n      remainderPath: data.RemPath\n    };\n  };\n  return resolve;\n});","map":{"version":3,"names":["CID","configure","toUrlSearchParams","createResolve","api","resolve","ipfsPath","options","res","post","signal","searchParams","arg","path","replace","headers","data","json","cid","parse","Cid","remainderPath","RemPath"],"sources":["/Users/yezery/OASIS/OASIS_Interface/node_modules/.store/ipfs-http-client@60.0.1/node_modules/ipfs-http-client/src/dag/resolve.js"],"sourcesContent":["import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {DAGAPI[\"resolve\"]}\n   */\n  const resolve = async (ipfsPath, options = {}) => {\n    const res = await api.post('dag/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ipfsPath}${options.path ? `/${options.path}`.replace(/\\/[/]+/g, '/') : ''}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return { cid: CID.parse(data.Cid['/']), remainderPath: data.RemPath }\n  }\n\n  return resolve\n})\n"],"mappings":"AAAA,SAASA,GAAG,QAAQ,kBAAkB;AACtC,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;;AAElE;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAGF,SAAS,CAACG,GAAG,IAAI;EAC5C;AACF;AACA;EACE,MAAMC,OAAO,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;IAChD,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,aAAa,EAAE;MACxCC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBC,YAAY,EAAET,iBAAiB,CAAC;QAC9BU,GAAG,EAAG,GAAEN,QAAS,GAAEC,OAAO,CAACM,IAAI,GAAI,IAAGN,OAAO,CAACM,IAAK,EAAC,CAACC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,GAAG,EAAG,EAAC;QACnF,GAAGP;MACL,CAAC,CAAC;MACFQ,OAAO,EAAER,OAAO,CAACQ;IACnB,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAE7B,OAAO;MAAEC,GAAG,EAAElB,GAAG,CAACmB,KAAK,CAACH,IAAI,CAACI,GAAG,CAAC,GAAG,CAAC,CAAC;MAAEC,aAAa,EAAEL,IAAI,CAACM;IAAQ,CAAC;EACvE,CAAC;EAED,OAAOjB,OAAO;AAChB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}