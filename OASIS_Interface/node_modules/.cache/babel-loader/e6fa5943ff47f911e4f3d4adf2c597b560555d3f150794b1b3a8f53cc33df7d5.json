{"ast":null,"code":"import { multiaddr } from '@multiformats/multiaddr';\n/*\n * Valid combinations\n */\nexport const DNS4 = base('dns4');\nexport const DNS6 = base('dns6');\nexport const DNSADDR = base('dnsaddr');\nexport const DNS = or(base('dns'), DNSADDR, DNS4, DNS6);\nexport const IP = or(base('ip4'), base('ip6'));\nexport const TCP = or(and(IP, base('tcp')), and(DNS, base('tcp')));\nexport const UDP = and(IP, base('udp'));\nexport const UTP = and(UDP, base('utp'));\nexport const QUIC = and(UDP, base('quic'));\nexport const WebSockets = or(and(TCP, base('ws')), and(DNS, base('ws')));\nexport const WebSocketsSecure = or(and(TCP, base('wss')), and(DNS, base('wss')), and(TCP, base('tls'), base('ws')), and(DNS, base('tls'), base('ws')));\nexport const HTTP = or(and(TCP, base('http')), and(IP, base('http')), and(DNS, base('http')));\nexport const HTTPS = or(and(TCP, base('https')), and(IP, base('https')), and(DNS, base('https')));\nconst _WebRTC = and(UDP, base('webrtc'), base('certhash'));\nexport const WebRTC = or(and(_WebRTC, base('p2p')), _WebRTC);\nexport const WebRTCStar = or(and(WebSockets, base('p2p-webrtc-star'), base('p2p')), and(WebSocketsSecure, base('p2p-webrtc-star'), base('p2p')), and(WebSockets, base('p2p-webrtc-star')), and(WebSocketsSecure, base('p2p-webrtc-star')));\nexport const WebSocketStar = or(and(WebSockets, base('p2p-websocket-star'), base('p2p')), and(WebSocketsSecure, base('p2p-websocket-star'), base('p2p')), and(WebSockets, base('p2p-websocket-star')), and(WebSocketsSecure, base('p2p-websocket-star')));\nexport const WebRTCDirect = or(and(HTTP, base('p2p-webrtc-direct'), base('p2p')), and(HTTPS, base('p2p-webrtc-direct'), base('p2p')), and(HTTP, base('p2p-webrtc-direct')), and(HTTPS, base('p2p-webrtc-direct')));\nexport const Reliable = or(WebSockets, WebSocketsSecure, HTTP, HTTPS, WebRTCStar, WebRTCDirect, TCP, UTP, QUIC, DNS, WebRTC);\n// Unlike ws-star, stardust can run over any transport thus removing the requirement for websockets (but don't even think about running a stardust server over webrtc-star ;) )\nexport const Stardust = or(and(Reliable, base('p2p-stardust'), base('p2p')), and(Reliable, base('p2p-stardust')));\nconst _P2P = or(and(Reliable, base('p2p')), WebRTCStar, WebRTCDirect, WebRTC, base('p2p'));\nconst _Circuit = or(and(_P2P, base('p2p-circuit'), _P2P), and(_P2P, base('p2p-circuit')), and(base('p2p-circuit'), _P2P), and(Reliable, base('p2p-circuit')), and(base('p2p-circuit'), Reliable), base('p2p-circuit'));\nconst CircuitRecursive = () => or(and(_Circuit, CircuitRecursive), _Circuit);\nexport const Circuit = CircuitRecursive();\nexport const P2P = or(and(Circuit, _P2P, Circuit), and(_P2P, Circuit), and(Circuit, _P2P), Circuit, _P2P);\nexport const IPFS = P2P;\n/*\n * Validation funcs\n */\nfunction makeMatchesFunction(partialMatch) {\n  function matches(a) {\n    let ma;\n    try {\n      ma = multiaddr(a);\n    } catch (err) {\n      // catch error\n      return false; // also if it's invalid it's probably not matching as well so return false\n    }\n\n    const out = partialMatch(ma.protoNames());\n    if (out === null) {\n      return false;\n    }\n    if (out === true || out === false) {\n      return out;\n    }\n    return out.length === 0;\n  }\n  return matches;\n}\nfunction and(...args) {\n  function partialMatch(a) {\n    if (a.length < args.length) {\n      return null;\n    }\n    let out = a;\n    args.some(arg => {\n      out = typeof arg === 'function' ? arg().partialMatch(a) : arg.partialMatch(a);\n      if (Array.isArray(out)) {\n        a = out;\n      }\n      if (out === null) {\n        return true;\n      }\n      return false;\n    });\n    return out;\n  }\n  return {\n    toString: function () {\n      return '{ ' + args.join(' ') + ' }';\n    },\n    input: args,\n    matches: makeMatchesFunction(partialMatch),\n    partialMatch\n  };\n}\nfunction or(...args) {\n  function partialMatch(a) {\n    let out = null;\n    args.some(arg => {\n      const res = typeof arg === 'function' ? arg().partialMatch(a) : arg.partialMatch(a);\n      if (res != null) {\n        out = res;\n        return true;\n      }\n      return false;\n    });\n    return out;\n  }\n  const result = {\n    toString: function () {\n      return '{ ' + args.join(' ') + ' }';\n    },\n    input: args,\n    matches: makeMatchesFunction(partialMatch),\n    partialMatch\n  };\n  return result;\n}\nfunction base(n) {\n  const name = n;\n  function matches(a) {\n    let ma;\n    try {\n      ma = multiaddr(a);\n    } catch (err) {\n      // catch error\n      return false; // also if it's invalid it's probably not matching as well so return false\n    }\n\n    const pnames = ma.protoNames();\n    if (pnames.length === 1 && pnames[0] === name) {\n      return true;\n    }\n    return false;\n  }\n  function partialMatch(protos) {\n    if (protos.length === 0) {\n      return null;\n    }\n    if (protos[0] === name) {\n      return protos.slice(1);\n    }\n    return null;\n  }\n  return {\n    toString: function () {\n      return name;\n    },\n    matches,\n    partialMatch\n  };\n}","map":{"version":3,"names":["multiaddr","DNS4","base","DNS6","DNSADDR","DNS","or","IP","TCP","and","UDP","UTP","QUIC","WebSockets","WebSocketsSecure","HTTP","HTTPS","_WebRTC","WebRTC","WebRTCStar","WebSocketStar","WebRTCDirect","Reliable","Stardust","_P2P","_Circuit","CircuitRecursive","Circuit","P2P","IPFS","makeMatchesFunction","partialMatch","matches","a","ma","err","out","protoNames","length","args","some","arg","Array","isArray","toString","join","input","res","result","n","name","pnames","protos","slice"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}