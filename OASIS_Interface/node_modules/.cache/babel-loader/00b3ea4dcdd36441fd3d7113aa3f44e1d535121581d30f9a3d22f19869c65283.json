{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { encodeMessage, decodeMessage, message, enumeration } from 'protons-runtime';\nexport var Record;\n(function (Record) {\n  let _codec;\n  Record.codec = () => {\n    if (_codec == null) {\n      _codec = message((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork();\n        }\n        if (obj.key != null) {\n          w.uint32(10);\n          w.bytes(obj.key);\n        }\n        if (obj.value != null) {\n          w.uint32(18);\n          w.bytes(obj.value);\n        }\n        if (obj.author != null) {\n          w.uint32(26);\n          w.bytes(obj.author);\n        }\n        if (obj.signature != null) {\n          w.uint32(34);\n          w.bytes(obj.signature);\n        }\n        if (obj.timeReceived != null) {\n          w.uint32(42);\n          w.string(obj.timeReceived);\n        }\n        if (opts.lengthDelimited !== false) {\n          w.ldelim();\n        }\n      }, (reader, length) => {\n        const obj = {};\n        const end = length == null ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n          const tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              obj.key = reader.bytes();\n              break;\n            case 2:\n              obj.value = reader.bytes();\n              break;\n            case 3:\n              obj.author = reader.bytes();\n              break;\n            case 4:\n              obj.signature = reader.bytes();\n              break;\n            case 5:\n              obj.timeReceived = reader.string();\n              break;\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return obj;\n      });\n    }\n    return _codec;\n  };\n  Record.encode = obj => {\n    return encodeMessage(obj, Record.codec());\n  };\n  Record.decode = buf => {\n    return decodeMessage(buf, Record.codec());\n  };\n})(Record || (Record = {}));\nexport var Message;\n(function (Message) {\n  let MessageType;\n  (function (MessageType) {\n    MessageType[\"PUT_VALUE\"] = \"PUT_VALUE\";\n    MessageType[\"GET_VALUE\"] = \"GET_VALUE\";\n    MessageType[\"ADD_PROVIDER\"] = \"ADD_PROVIDER\";\n    MessageType[\"GET_PROVIDERS\"] = \"GET_PROVIDERS\";\n    MessageType[\"FIND_NODE\"] = \"FIND_NODE\";\n    MessageType[\"PING\"] = \"PING\";\n  })(MessageType = Message.MessageType || (Message.MessageType = {}));\n  let __MessageTypeValues;\n  (function (__MessageTypeValues) {\n    __MessageTypeValues[__MessageTypeValues[\"PUT_VALUE\"] = 0] = \"PUT_VALUE\";\n    __MessageTypeValues[__MessageTypeValues[\"GET_VALUE\"] = 1] = \"GET_VALUE\";\n    __MessageTypeValues[__MessageTypeValues[\"ADD_PROVIDER\"] = 2] = \"ADD_PROVIDER\";\n    __MessageTypeValues[__MessageTypeValues[\"GET_PROVIDERS\"] = 3] = \"GET_PROVIDERS\";\n    __MessageTypeValues[__MessageTypeValues[\"FIND_NODE\"] = 4] = \"FIND_NODE\";\n    __MessageTypeValues[__MessageTypeValues[\"PING\"] = 5] = \"PING\";\n  })(__MessageTypeValues || (__MessageTypeValues = {}));\n  (function (MessageType) {\n    MessageType.codec = () => {\n      return enumeration(__MessageTypeValues);\n    };\n  })(MessageType = Message.MessageType || (Message.MessageType = {}));\n  let ConnectionType;\n  (function (ConnectionType) {\n    ConnectionType[\"NOT_CONNECTED\"] = \"NOT_CONNECTED\";\n    ConnectionType[\"CONNECTED\"] = \"CONNECTED\";\n    ConnectionType[\"CAN_CONNECT\"] = \"CAN_CONNECT\";\n    ConnectionType[\"CANNOT_CONNECT\"] = \"CANNOT_CONNECT\";\n  })(ConnectionType = Message.ConnectionType || (Message.ConnectionType = {}));\n  let __ConnectionTypeValues;\n  (function (__ConnectionTypeValues) {\n    __ConnectionTypeValues[__ConnectionTypeValues[\"NOT_CONNECTED\"] = 0] = \"NOT_CONNECTED\";\n    __ConnectionTypeValues[__ConnectionTypeValues[\"CONNECTED\"] = 1] = \"CONNECTED\";\n    __ConnectionTypeValues[__ConnectionTypeValues[\"CAN_CONNECT\"] = 2] = \"CAN_CONNECT\";\n    __ConnectionTypeValues[__ConnectionTypeValues[\"CANNOT_CONNECT\"] = 3] = \"CANNOT_CONNECT\";\n  })(__ConnectionTypeValues || (__ConnectionTypeValues = {}));\n  (function (ConnectionType) {\n    ConnectionType.codec = () => {\n      return enumeration(__ConnectionTypeValues);\n    };\n  })(ConnectionType = Message.ConnectionType || (Message.ConnectionType = {}));\n  let Peer;\n  (function (Peer) {\n    let _codec;\n    Peer.codec = () => {\n      if (_codec == null) {\n        _codec = message((obj, w, opts = {}) => {\n          if (opts.lengthDelimited !== false) {\n            w.fork();\n          }\n          if (obj.id != null) {\n            w.uint32(10);\n            w.bytes(obj.id);\n          }\n          if (obj.addrs != null) {\n            for (const value of obj.addrs) {\n              w.uint32(18);\n              w.bytes(value);\n            }\n          }\n          if (obj.connection != null) {\n            w.uint32(24);\n            Message.ConnectionType.codec().encode(obj.connection, w);\n          }\n          if (opts.lengthDelimited !== false) {\n            w.ldelim();\n          }\n        }, (reader, length) => {\n          const obj = {\n            addrs: []\n          };\n          const end = length == null ? reader.len : reader.pos + length;\n          while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n              case 1:\n                obj.id = reader.bytes();\n                break;\n              case 2:\n                obj.addrs.push(reader.bytes());\n                break;\n              case 3:\n                obj.connection = Message.ConnectionType.codec().decode(reader);\n                break;\n              default:\n                reader.skipType(tag & 7);\n                break;\n            }\n          }\n          return obj;\n        });\n      }\n      return _codec;\n    };\n    Peer.encode = obj => {\n      return encodeMessage(obj, Peer.codec());\n    };\n    Peer.decode = buf => {\n      return decodeMessage(buf, Peer.codec());\n    };\n  })(Peer = Message.Peer || (Message.Peer = {}));\n  let _codec;\n  Message.codec = () => {\n    if (_codec == null) {\n      _codec = message((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork();\n        }\n        if (obj.type != null) {\n          w.uint32(8);\n          Message.MessageType.codec().encode(obj.type, w);\n        }\n        if (obj.clusterLevelRaw != null) {\n          w.uint32(80);\n          w.int32(obj.clusterLevelRaw);\n        }\n        if (obj.key != null) {\n          w.uint32(18);\n          w.bytes(obj.key);\n        }\n        if (obj.record != null) {\n          w.uint32(26);\n          w.bytes(obj.record);\n        }\n        if (obj.closerPeers != null) {\n          for (const value of obj.closerPeers) {\n            w.uint32(66);\n            Message.Peer.codec().encode(value, w);\n          }\n        }\n        if (obj.providerPeers != null) {\n          for (const value of obj.providerPeers) {\n            w.uint32(74);\n            Message.Peer.codec().encode(value, w);\n          }\n        }\n        if (opts.lengthDelimited !== false) {\n          w.ldelim();\n        }\n      }, (reader, length) => {\n        const obj = {\n          closerPeers: [],\n          providerPeers: []\n        };\n        const end = length == null ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n          const tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              obj.type = Message.MessageType.codec().decode(reader);\n              break;\n            case 10:\n              obj.clusterLevelRaw = reader.int32();\n              break;\n            case 2:\n              obj.key = reader.bytes();\n              break;\n            case 3:\n              obj.record = reader.bytes();\n              break;\n            case 8:\n              obj.closerPeers.push(Message.Peer.codec().decode(reader, reader.uint32()));\n              break;\n            case 9:\n              obj.providerPeers.push(Message.Peer.codec().decode(reader, reader.uint32()));\n              break;\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return obj;\n      });\n    }\n    return _codec;\n  };\n  Message.encode = obj => {\n    return encodeMessage(obj, Message.codec());\n  };\n  Message.decode = buf => {\n    return decodeMessage(buf, Message.codec());\n  };\n})(Message || (Message = {}));","map":{"version":3,"names":["encodeMessage","decodeMessage","message","enumeration","Record","_codec","codec","obj","w","opts","lengthDelimited","fork","key","uint32","bytes","value","author","signature","timeReceived","string","ldelim","reader","length","end","len","pos","tag","skipType","encode","decode","buf","Message","MessageType","__MessageTypeValues","ConnectionType","__ConnectionTypeValues","Peer","id","addrs","connection","push","type","clusterLevelRaw","int32","record","closerPeers","providerPeers"],"sources":["../../../src/message/dht.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}