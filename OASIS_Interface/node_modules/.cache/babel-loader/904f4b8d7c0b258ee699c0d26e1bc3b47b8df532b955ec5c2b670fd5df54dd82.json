{"ast":null,"code":"import _defineProperty from \"/Users/yezery/Oasis/OASIS/node_modules/.store/@babel+runtime@7.22.15/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classPrivateFieldInitSpec from \"/Users/yezery/Oasis/OASIS/node_modules/.store/@babel+runtime@7.22.15/node_modules/@babel/runtime/helpers/esm/classPrivateFieldInitSpec.js\";\nimport _classPrivateFieldGet from \"/Users/yezery/Oasis/OASIS/node_modules/.store/@babel+runtime@7.22.15/node_modules/@babel/runtime/helpers/esm/classPrivateFieldGet.js\";\nimport \"core-js/modules/es.array.push.js\";\nvar _listeners = /*#__PURE__*/new WeakMap();\n/**\n * Adds types to the EventTarget class. Hopefully this won't be necessary forever.\n *\n * https://github.com/microsoft/TypeScript/issues/28357\n * https://github.com/microsoft/TypeScript/issues/43477\n * https://github.com/microsoft/TypeScript/issues/299\n * etc\n */\nexport class EventEmitter extends EventTarget {\n  constructor(...args) {\n    super(...args);\n    _classPrivateFieldInitSpec(this, _listeners, {\n      writable: true,\n      value: new Map()\n    });\n  }\n  listenerCount(type) {\n    const listeners = _classPrivateFieldGet(this, _listeners).get(type);\n    if (listeners == null) {\n      return 0;\n    }\n    return listeners.length;\n  }\n  addEventListener(type, listener, options) {\n    super.addEventListener(type, listener, options);\n    let list = _classPrivateFieldGet(this, _listeners).get(type);\n    if (list == null) {\n      list = [];\n      _classPrivateFieldGet(this, _listeners).set(type, list);\n    }\n    list.push({\n      callback: listener,\n      once: (options !== true && options !== false && options?.once) ?? false\n    });\n  }\n  removeEventListener(type, listener, options) {\n    super.removeEventListener(type.toString(), listener ?? null, options);\n    let list = _classPrivateFieldGet(this, _listeners).get(type);\n    if (list == null) {\n      return;\n    }\n    list = list.filter(({\n      callback\n    }) => callback !== listener);\n    _classPrivateFieldGet(this, _listeners).set(type, list);\n  }\n  dispatchEvent(event) {\n    const result = super.dispatchEvent(event);\n    let list = _classPrivateFieldGet(this, _listeners).get(event.type);\n    if (list == null) {\n      return result;\n    }\n    list = list.filter(({\n      once\n    }) => !once);\n    _classPrivateFieldGet(this, _listeners).set(event.type, list);\n    return result;\n  }\n  safeDispatchEvent(type, detail) {\n    return this.dispatchEvent(new CustomEvent(type, detail));\n  }\n}\n/**\n * CustomEvent is a standard event but it's not supported by node.\n *\n * Remove this when https://github.com/nodejs/node/issues/40678 is closed.\n *\n * Ref: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\n */\nclass CustomEventPolyfill extends Event {\n  constructor(message, data) {\n    super(message, data);\n    // @ts-expect-error could be undefined\n    /** Returns any custom data event was created with. Typically used for synthetic events. */\n    _defineProperty(this, \"detail\", void 0);\n    this.detail = data?.detail;\n  }\n}\nexport const CustomEvent = globalThis.CustomEvent ?? CustomEventPolyfill;","map":{"version":3,"names":["EventEmitter","EventTarget","constructor","args","_classPrivateFieldInitSpec","_listeners","writable","value","Map","listenerCount","type","listeners","_classPrivateFieldGet","get","length","addEventListener","listener","options","list","set","push","callback","once","removeEventListener","toString","filter","dispatchEvent","event","result","safeDispatchEvent","detail","CustomEvent","CustomEventPolyfill","Event","message","data","_defineProperty","globalThis"],"sources":["../../src/events.ts"],"sourcesContent":[null],"mappings":";;;;;AAUA;;;;;;;;AAQA,OAAM,MAAOA,YAAmD,SAAQC,WAAW;EAAAC,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAAC,0BAAA,OAAAC,UAAA;MAAAC,QAAA;MAAAC,KAAA,EACpE,IAAIC,GAAG;IAAmB;EAAA;EAEvCC,aAAaA,CAAEC,IAAY;IACzB,MAAMC,SAAS,GAAGC,qBAAA,KAAI,EAAAP,UAAA,EAAYQ,GAAG,CAACH,IAAI,CAAC;IAE3C,IAAIC,SAAS,IAAI,IAAI,EAAE;MACrB,OAAO,CAAC;;IAGV,OAAOA,SAAS,CAACG,MAAM;EACzB;EAGAC,gBAAgBA,CAAEL,IAAY,EAAEM,QAA6B,EAAEC,OAA2C;IACxG,KAAK,CAACF,gBAAgB,CAACL,IAAI,EAAEM,QAAQ,EAAEC,OAAO,CAAC;IAE/C,IAAIC,IAAI,GAAGN,qBAAA,KAAI,EAAAP,UAAA,EAAYQ,GAAG,CAACH,IAAI,CAAC;IAEpC,IAAIQ,IAAI,IAAI,IAAI,EAAE;MAChBA,IAAI,GAAG,EAAE;MACTN,qBAAA,KAAI,EAAAP,UAAA,EAAYc,GAAG,CAACT,IAAI,EAAEQ,IAAI,CAAC;;IAGjCA,IAAI,CAACE,IAAI,CAAC;MACRC,QAAQ,EAAEL,QAAQ;MAClBM,IAAI,EAAE,CAACL,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,IAAIA,OAAO,EAAEK,IAAI,KAAK;KACnE,CAAC;EACJ;EAGAC,mBAAmBA,CAAEb,IAAY,EAAEM,QAA8B,EAAEC,OAAwC;IACzG,KAAK,CAACM,mBAAmB,CAACb,IAAI,CAACc,QAAQ,EAAE,EAAER,QAAQ,IAAI,IAAI,EAAEC,OAAO,CAAC;IAErE,IAAIC,IAAI,GAAGN,qBAAA,KAAI,EAAAP,UAAA,EAAYQ,GAAG,CAACH,IAAI,CAAC;IAEpC,IAAIQ,IAAI,IAAI,IAAI,EAAE;MAChB;;IAGFA,IAAI,GAAGA,IAAI,CAACO,MAAM,CAAC,CAAC;MAAEJ;IAAQ,CAAE,KAAKA,QAAQ,KAAKL,QAAQ,CAAC;IAC3DJ,qBAAA,KAAI,EAAAP,UAAA,EAAYc,GAAG,CAACT,IAAI,EAAEQ,IAAI,CAAC;EACjC;EAEAQ,aAAaA,CAAEC,KAAY;IACzB,MAAMC,MAAM,GAAG,KAAK,CAACF,aAAa,CAACC,KAAK,CAAC;IAEzC,IAAIT,IAAI,GAAGN,qBAAA,KAAI,EAAAP,UAAA,EAAYQ,GAAG,CAACc,KAAK,CAACjB,IAAI,CAAC;IAE1C,IAAIQ,IAAI,IAAI,IAAI,EAAE;MAChB,OAAOU,MAAM;;IAGfV,IAAI,GAAGA,IAAI,CAACO,MAAM,CAAC,CAAC;MAAEH;IAAI,CAAE,KAAK,CAACA,IAAI,CAAC;IACvCV,qBAAA,KAAI,EAAAP,UAAA,EAAYc,GAAG,CAACQ,KAAK,CAACjB,IAAI,EAAEQ,IAAI,CAAC;IAErC,OAAOU,MAAM;EACf;EAEAC,iBAAiBA,CAASnB,IAAoB,EAAEoB,MAA+B;IAC7E,OAAO,IAAI,CAACJ,aAAa,CAAC,IAAIK,WAAW,CAASrB,IAAc,EAAEoB,MAAM,CAAC,CAAC;EAC5E;;AAGF;;;;;;;AAOA,MAAME,mBAA6B,SAAQC,KAAK;EAI9C/B,YAAagC,OAAe,EAAEC,IAAgC;IAC5D,KAAK,CAACD,OAAO,EAAEC,IAAI,CAAC;IACpB;IALF;IAAAC,eAAA;IAME,IAAI,CAACN,MAAM,GAAGK,IAAI,EAAEL,MAAM;EAC5B;;AAGF,OAAO,MAAMC,WAAW,GAAGM,UAAU,CAACN,WAAW,IAAIC,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}