{"ast":null,"code":"'use strict';\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function* browserReadableStreamToIt(stream, options = {}) {\n  const reader = stream.getReader();\n  try {\n    while (true) {\n      const result = await reader.read();\n      if (result.done) {\n        return;\n      }\n      yield result.value;\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel();\n    }\n    reader.releaseLock();\n  }\n}\nmodule.exports = browserReadableStreamToIt;","map":{"version":3,"names":["browserReadableStreamToIt","stream","options","reader","getReader","result","read","done","value","preventCancel","cancel","releaseLock","module","exports"],"sources":["/Users/yezery/Documents/大学素材/毕业设计/OASIS/OASIS_Interface/node_modules/.store/browser-readablestream-to-it@1.0.3/node_modules/browser-readablestream-to-it/index.js"],"sourcesContent":["'use strict'\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function * browserReadableStreamToIt (stream, options = {}) {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n\nmodule.exports = browserReadableStreamToIt\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAiBA,yBAAyBA,CAAEC,MAAM,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAChE,MAAMC,MAAM,GAAGF,MAAM,CAACG,SAAS,CAAC,CAAC;EAEjC,IAAI;IACF,OAAO,IAAI,EAAE;MACX,MAAMC,MAAM,GAAG,MAAMF,MAAM,CAACG,IAAI,CAAC,CAAC;MAElC,IAAID,MAAM,CAACE,IAAI,EAAE;QACf;MACF;MAEA,MAAMF,MAAM,CAACG,KAAK;IACpB;EACF,CAAC,SAAS;IACR,IAAIN,OAAO,CAACO,aAAa,KAAK,IAAI,EAAE;MAClCN,MAAM,CAACO,MAAM,CAAC,CAAC;IACjB;IAEAP,MAAM,CAACQ,WAAW,CAAC,CAAC;EACtB;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGb,yBAAyB"},"metadata":{},"sourceType":"script","externalDependencies":[]}