{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport * as utils from '../utils.js';\nimport { compare as uint8ArrayCompare } from 'uint8arrays/compare';\nimport { xor as uint8ArrayXor } from 'uint8arrays/xor';\n/**\n * Maintains a list of peerIds sorted by distance from a DHT key.\n */\nexport class PeerDistanceList {\n  constructor(originDhtKey, capacity) {\n    this.originDhtKey = originDhtKey;\n    this.capacity = capacity;\n    this.peerDistances = [];\n  }\n  /**\n   * The length of the list\n   */\n  get length() {\n    return this.peerDistances.length;\n  }\n  /**\n   * The peerIds in the list, in order of distance from the origin key\n   */\n  get peers() {\n    return this.peerDistances.map(pd => pd.peerId);\n  }\n  /**\n   * Add a peerId to the list.\n   */\n  async add(peerId) {\n    if (this.peerDistances.find(pd => pd.peerId.equals(peerId)) != null) {\n      return;\n    }\n    const dhtKey = await utils.convertPeerId(peerId);\n    const el = {\n      peerId,\n      distance: uint8ArrayXor(this.originDhtKey, dhtKey)\n    };\n    this.peerDistances.push(el);\n    this.peerDistances.sort((a, b) => uint8ArrayCompare(a.distance, b.distance));\n    this.peerDistances = this.peerDistances.slice(0, this.capacity);\n  }\n  /**\n   * Indicates whether any of the peerIds passed as a parameter are closer\n   * to the origin key than the furthest peerId in the PeerDistanceList.\n   */\n  async anyCloser(peerIds) {\n    if (peerIds.length === 0) {\n      return false;\n    }\n    if (this.length === 0) {\n      return true;\n    }\n    const dhtKeys = await Promise.all(peerIds.map(utils.convertPeerId));\n    const furthestDistance = this.peerDistances[this.peerDistances.length - 1].distance;\n    for (const dhtKey of dhtKeys) {\n      const keyDistance = uint8ArrayXor(this.originDhtKey, dhtKey);\n      if (uint8ArrayCompare(keyDistance, furthestDistance) < 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n}","map":{"version":3,"names":["utils","compare","uint8ArrayCompare","xor","uint8ArrayXor","PeerDistanceList","constructor","originDhtKey","capacity","peerDistances","length","peers","map","pd","peerId","add","find","equals","dhtKey","convertPeerId","el","distance","push","sort","a","b","slice","anyCloser","peerIds","dhtKeys","Promise","all","furthestDistance","keyDistance"],"sources":["../../../src/peer-list/peer-distance-list.ts"],"sourcesContent":[null],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,aAAa;AACpC,SAASC,OAAO,IAAIC,iBAAiB,QAAQ,qBAAqB;AAClE,SAASC,GAAG,IAAIC,aAAa,QAAQ,iBAAiB;AAQtD;;;AAGA,OAAM,MAAOC,gBAAgB;EAa3BC,YAAaC,YAAwB,EAAEC,QAAgB;IACrD,IAAI,CAACD,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,aAAa,GAAG,EAAE;EACzB;EAEA;;;EAGA,IAAIC,MAAMA,CAAA;IACR,OAAO,IAAI,CAACD,aAAa,CAACC,MAAM;EAClC;EAEA;;;EAGA,IAAIC,KAAKA,CAAA;IACP,OAAO,IAAI,CAACF,aAAa,CAACG,GAAG,CAACC,EAAE,IAAIA,EAAE,CAACC,MAAM,CAAC;EAChD;EAEA;;;EAGA,MAAMC,GAAGA,CAAED,MAAc;IACvB,IAAI,IAAI,CAACL,aAAa,CAACO,IAAI,CAACH,EAAE,IAAIA,EAAE,CAACC,MAAM,CAACG,MAAM,CAACH,MAAM,CAAC,CAAC,IAAI,IAAI,EAAE;MACnE;;IAGF,MAAMI,MAAM,GAAG,MAAMlB,KAAK,CAACmB,aAAa,CAACL,MAAM,CAAC;IAChD,MAAMM,EAAE,GAAG;MACTN,MAAM;MACNO,QAAQ,EAAEjB,aAAa,CAAC,IAAI,CAACG,YAAY,EAAEW,MAAM;KAClD;IAED,IAAI,CAACT,aAAa,CAACa,IAAI,CAACF,EAAE,CAAC;IAC3B,IAAI,CAACX,aAAa,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKvB,iBAAiB,CAACsB,CAAC,CAACH,QAAQ,EAAEI,CAAC,CAACJ,QAAQ,CAAC,CAAC;IAC5E,IAAI,CAACZ,aAAa,GAAG,IAAI,CAACA,aAAa,CAACiB,KAAK,CAAC,CAAC,EAAE,IAAI,CAAClB,QAAQ,CAAC;EACjE;EAEA;;;;EAIA,MAAMmB,SAASA,CAAEC,OAAiB;IAChC,IAAIA,OAAO,CAAClB,MAAM,KAAK,CAAC,EAAE;MACxB,OAAO,KAAK;;IAGd,IAAI,IAAI,CAACA,MAAM,KAAK,CAAC,EAAE;MACrB,OAAO,IAAI;;IAGb,MAAMmB,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACH,OAAO,CAAChB,GAAG,CAACZ,KAAK,CAACmB,aAAa,CAAC,CAAC;IACnE,MAAMa,gBAAgB,GAAG,IAAI,CAACvB,aAAa,CAAC,IAAI,CAACA,aAAa,CAACC,MAAM,GAAG,CAAC,CAAC,CAACW,QAAQ;IAEnF,KAAK,MAAMH,MAAM,IAAIW,OAAO,EAAE;MAC5B,MAAMI,WAAW,GAAG7B,aAAa,CAAC,IAAI,CAACG,YAAY,EAAEW,MAAM,CAAC;MAE5D,IAAIhB,iBAAiB,CAAC+B,WAAW,EAAED,gBAAgB,CAAC,GAAG,CAAC,EAAE;QACxD,OAAO,IAAI;;;IAIf,OAAO,KAAK;EACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}