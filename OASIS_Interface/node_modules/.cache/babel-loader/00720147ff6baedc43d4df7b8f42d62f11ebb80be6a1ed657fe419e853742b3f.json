{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { search } from '@/api/axios/ownerContractLIst';\nexport default {\n  data() {\n    return {\n      SearchVo: {\n        key: \"\"\n      },\n      results: [],\n      timeout: null\n    };\n  },\n  mounted() {},\n  methods: {\n    async querySearchAsync(queryString, cb) {\n      await search(this.SearchVo).then(re => {\n        this.results = re.data.data;\n      });\n      let results = this.results;\n      if (results instanceof Array && results.length > 0) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n          cb(this.results);\n        }, 3000 * Math.random());\n      } else {\n        cb([]);\n      }\n    },\n    handleSelect(item) {\n      if (item.NFT.description == \"3D\") {\n        this.to3DInfPage(item.NFT);\n      } else {\n        this.toInfPage(item.NFT);\n      }\n    },\n    to3DInfPage(row) {\n      let NFTInf = {\n        saleId: row.saleId,\n        modelPath: row.ipfspath,\n        nftName: row.nftName,\n        description: row.description,\n        nftAddress: row.nftAddress,\n        tokenId: row.tokenId,\n        isActive: row.isActive,\n        seller: row.currentowner,\n        price: row.price\n      };\n      this.$store.commit(\"setNFTInf\", NFTInf);\n      this.$router.push({\n        path: \"/home/NFTInf3D\"\n      });\n    },\n    toInfPage(row) {\n      let NFTInf = {\n        saleId: row.saleId,\n        image: row.ipfspath,\n        nftName: row.nftName,\n        description: row.description,\n        nftAddress: row.nftAddress,\n        tokenId: row.tokenId,\n        isActive: row.isActive,\n        seller: row.currentowner,\n        price: row.price\n      };\n      this.$store.commit(\"setNFTInf\", NFTInf);\n      this.$router.push({\n        path: \"/home/NFTInf\"\n      });\n    },\n    async toSearchPage() {\n      this.$router.push({\n        name: \"searchPage\",\n        params: {\n          searchVo: this.SearchVo,\n          results: this.results\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["search","data","SearchVo","key","results","timeout","mounted","methods","querySearchAsync","queryString","cb","then","re","Array","length","clearTimeout","setTimeout","Math","random","handleSelect","item","NFT","description","to3DInfPage","toInfPage","row","NFTInf","saleId","modelPath","ipfspath","nftName","nftAddress","tokenId","isActive","seller","currentowner","price","$store","commit","$router","push","path","image","toSearchPage","name","params","searchVo"],"sources":["src/views/topMenu/oasisSearch.vue"],"sourcesContent":["<template>\n  <div class=\"searchBox \">\n    <el-autocomplete\n      class=\"search\"\n      v-model=\"SearchVo.key\"\n      :fetch-suggestions=\"querySearchAsync\"\n      placeholder=\"Search any collection\"\n      :trigger-on-focus=\"false\"\n      @keydown.enter.prevent.native=\"toSearchPage\"\n      :clearable=\"true\"\n      @select=\"handleSelect\"\n    />\n  </div>\n</template>\n\n<script>\nimport { search } from '@/api/axios/ownerContractLIst';\n  export default {\n    data() {\n      return {\n        SearchVo: {\n          key:\"\"\n        },\n        results: [],\n        timeout:null\n      };\n  },\n  mounted() {\n  },\n  methods: {\n    async querySearchAsync(queryString, cb) {\n      await search(this.SearchVo).then(re => { this.results = re.data.data; })\n      let results =  this.results\n      if (results instanceof Array && results.length > 0) {\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(() => {\n          cb(this.results);\n        }, 3000 * Math.random());\n      } else {\n        cb([])\n      }\n      },\n    handleSelect(item) {\n        if (item.NFT.description == \"3D\") {\n          this.to3DInfPage(item.NFT)\n        } else {\n          this.toInfPage(item.NFT)\n        }\n    },\n    to3DInfPage(row) {\n      let NFTInf = {\n          saleId: row.saleId,\n          modelPath: row.ipfspath,\n          nftName: row.nftName,\n          description: row.description,\n          nftAddress: row.nftAddress,\n          tokenId: row.tokenId,\n          isActive: row.isActive,\n          seller: row.currentowner,\n          price: row.price,\n      };\n        this.$store.commit(\"setNFTInf\", NFTInf);\n        this.$router.push({\n          path: \"/home/NFTInf3D\",\n        });\n      },\n    toInfPage(row) { \n      let NFTInf = {\n          saleId: row.saleId,\n          image: row.ipfspath,\n          nftName: row.nftName,\n          description: row.description,\n          nftAddress: row.nftAddress,\n          tokenId: row.tokenId,\n          isActive: row.isActive,\n          seller: row.currentowner,\n          price: row.price,\n      };\n        this.$store.commit(\"setNFTInf\", NFTInf);\n        this.$router.push({\n          path: \"/home/NFTInf\",\n        });\n    },\n    async toSearchPage() {\n      this.$router.push({\n        name: \"searchPage\",\n        params: {\n          searchVo: this.SearchVo,\n          results: this.results\n        }\n      })\n    }\n    },\n  };\n</script>\n<style lang=\"scss\" scoped>\n@import \"@/style/topMenu/search.scss\";\n</style>\n"],"mappings":";AAgBA,SAAAA,MAAA;AACA;EACAC,KAAA;IACA;MACAC,QAAA;QACAC,GAAA;MACA;MACAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA,GACA;EACAC,OAAA;IACA,MAAAC,iBAAAC,WAAA,EAAAC,EAAA;MACA,MAAAV,MAAA,MAAAE,QAAA,EAAAS,IAAA,CAAAC,EAAA;QAAA,KAAAR,OAAA,GAAAQ,EAAA,CAAAX,IAAA,CAAAA,IAAA;MAAA;MACA,IAAAG,OAAA,QAAAA,OAAA;MACA,IAAAA,OAAA,YAAAS,KAAA,IAAAT,OAAA,CAAAU,MAAA;QACAC,YAAA,MAAAV,OAAA;QACA,KAAAA,OAAA,GAAAW,UAAA;UACAN,EAAA,MAAAN,OAAA;QACA,UAAAa,IAAA,CAAAC,MAAA;MACA;QACAR,EAAA;MACA;IACA;IACAS,aAAAC,IAAA;MACA,IAAAA,IAAA,CAAAC,GAAA,CAAAC,WAAA;QACA,KAAAC,WAAA,CAAAH,IAAA,CAAAC,GAAA;MACA;QACA,KAAAG,SAAA,CAAAJ,IAAA,CAAAC,GAAA;MACA;IACA;IACAE,YAAAE,GAAA;MACA,IAAAC,MAAA;QACAC,MAAA,EAAAF,GAAA,CAAAE,MAAA;QACAC,SAAA,EAAAH,GAAA,CAAAI,QAAA;QACAC,OAAA,EAAAL,GAAA,CAAAK,OAAA;QACAR,WAAA,EAAAG,GAAA,CAAAH,WAAA;QACAS,UAAA,EAAAN,GAAA,CAAAM,UAAA;QACAC,OAAA,EAAAP,GAAA,CAAAO,OAAA;QACAC,QAAA,EAAAR,GAAA,CAAAQ,QAAA;QACAC,MAAA,EAAAT,GAAA,CAAAU,YAAA;QACAC,KAAA,EAAAX,GAAA,CAAAW;MACA;MACA,KAAAC,MAAA,CAAAC,MAAA,cAAAZ,MAAA;MACA,KAAAa,OAAA,CAAAC,IAAA;QACAC,IAAA;MACA;IACA;IACAjB,UAAAC,GAAA;MACA,IAAAC,MAAA;QACAC,MAAA,EAAAF,GAAA,CAAAE,MAAA;QACAe,KAAA,EAAAjB,GAAA,CAAAI,QAAA;QACAC,OAAA,EAAAL,GAAA,CAAAK,OAAA;QACAR,WAAA,EAAAG,GAAA,CAAAH,WAAA;QACAS,UAAA,EAAAN,GAAA,CAAAM,UAAA;QACAC,OAAA,EAAAP,GAAA,CAAAO,OAAA;QACAC,QAAA,EAAAR,GAAA,CAAAQ,QAAA;QACAC,MAAA,EAAAT,GAAA,CAAAU,YAAA;QACAC,KAAA,EAAAX,GAAA,CAAAW;MACA;MACA,KAAAC,MAAA,CAAAC,MAAA,cAAAZ,MAAA;MACA,KAAAa,OAAA,CAAAC,IAAA;QACAC,IAAA;MACA;IACA;IACA,MAAAE,aAAA;MACA,KAAAJ,OAAA,CAAAC,IAAA;QACAI,IAAA;QACAC,MAAA;UACAC,QAAA,OAAA5C,QAAA;UACAE,OAAA,OAAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}