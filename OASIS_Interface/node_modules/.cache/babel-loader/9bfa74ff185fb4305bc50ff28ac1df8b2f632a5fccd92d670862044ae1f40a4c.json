{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { isValidMultiaddr } from './utils.js';\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createAdd({\n  repo\n}) {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API<{}>[\"add\"]}\n   */\n  async function add(multiaddr, options = {}) {\n    if (!isValidMultiaddr(multiaddr)) {\n      throw new Error(`${multiaddr} is not a valid Multiaddr`);\n    }\n    const config = await repo.config.getAll(options);\n    const boostrappers = config.Bootstrap || [];\n    boostrappers.push(multiaddr.toString());\n    config.Bootstrap = Array.from(new Set(boostrappers)).sort((a, b) => a.localeCompare(b));\n    await repo.config.replace(config);\n    return {\n      Peers: [multiaddr]\n    };\n  }\n  return withTimeoutOption(add);\n}","map":{"version":3,"names":["isValidMultiaddr","withTimeoutOption","createAdd","repo","add","multiaddr","options","Error","config","getAll","boostrappers","Bootstrap","push","toString","Array","from","Set","sort","a","b","localeCompare","replace","Peers"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-core@0.18.1/node_modules/ipfs-core/src/components/bootstrap/add.js"],"sourcesContent":["import { isValidMultiaddr } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createAdd ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API<{}>[\"add\"]}\n   */\n  async function add (multiaddr, options = {}) {\n    if (!isValidMultiaddr(multiaddr)) {\n      throw new Error(`${multiaddr} is not a valid Multiaddr`)\n    }\n\n    const config = await repo.config.getAll(options)\n    const boostrappers = config.Bootstrap || []\n    boostrappers.push(multiaddr.toString())\n\n    config.Bootstrap = Array.from(\n      new Set(boostrappers)\n    ).sort((a, b) => a.localeCompare(b))\n\n    await repo.config.replace(config)\n\n    return {\n      Peers: [multiaddr]\n    }\n  }\n\n  return withTimeoutOption(add)\n}\n"],"mappings":";AAAA,SAASA,gBAAgB,QAAQ,YAAY;AAC7C,SAASC,iBAAiB,QAAQ,qCAAqC;;AAEvE;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAAE;EAAEC;AAAK,CAAC,EAAE;EACnC;AACF;AACA;EACE,eAAeC,GAAGA,CAAEC,SAAS,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC3C,IAAI,CAACN,gBAAgB,CAACK,SAAS,CAAC,EAAE;MAChC,MAAM,IAAIE,KAAK,CAAE,GAAEF,SAAU,2BAA0B,CAAC;IAC1D;IAEA,MAAMG,MAAM,GAAG,MAAML,IAAI,CAACK,MAAM,CAACC,MAAM,CAACH,OAAO,CAAC;IAChD,MAAMI,YAAY,GAAGF,MAAM,CAACG,SAAS,IAAI,EAAE;IAC3CD,YAAY,CAACE,IAAI,CAACP,SAAS,CAACQ,QAAQ,CAAC,CAAC,CAAC;IAEvCL,MAAM,CAACG,SAAS,GAAGG,KAAK,CAACC,IAAI,CAC3B,IAAIC,GAAG,CAACN,YAAY,CACtB,CAAC,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,aAAa,CAACD,CAAC,CAAC,CAAC;IAEpC,MAAMhB,IAAI,CAACK,MAAM,CAACa,OAAO,CAACb,MAAM,CAAC;IAEjC,OAAO;MACLc,KAAK,EAAE,CAACjB,SAAS;IACnB,CAAC;EACH;EAEA,OAAOJ,iBAAiB,CAACG,GAAG,CAAC;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}