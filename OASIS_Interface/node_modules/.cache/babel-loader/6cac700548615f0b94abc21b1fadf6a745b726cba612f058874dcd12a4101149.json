{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\nimport { multiaddr } from '@multiformats/multiaddr';\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createList({\n  repo\n}) {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API<{}>[\"list\"]}\n   */\n  async function list(options = {}) {\n    /** @type {string[]|null} */\n    const peers = await repo.config.get('Bootstrap', options);\n    return {\n      Peers: (peers || []).map(ma => multiaddr(ma))\n    };\n  }\n  return withTimeoutOption(list);\n}","map":{"version":3,"names":["withTimeoutOption","multiaddr","createList","repo","list","options","peers","config","get","Peers","map","ma"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-core@0.18.1/node_modules/ipfs-core/src/components/bootstrap/list.js"],"sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createList ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API<{}>[\"list\"]}\n   */\n  async function list (options = {}) {\n    /** @type {string[]|null} */\n    const peers = (await repo.config.get('Bootstrap', options))\n    return { Peers: (peers || []).map(ma => multiaddr(ma)) }\n  }\n\n  return withTimeoutOption(list)\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,qCAAqC;AACvE,SAASC,SAAS,QAAQ,yBAAyB;;AAEnD;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAAE;EAAEC;AAAK,CAAC,EAAE;EACpC;AACF;AACA;EACE,eAAeC,IAAIA,CAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACjC;IACA,MAAMC,KAAK,GAAI,MAAMH,IAAI,CAACI,MAAM,CAACC,GAAG,CAAC,WAAW,EAAEH,OAAO,CAAE;IAC3D,OAAO;MAAEI,KAAK,EAAE,CAACH,KAAK,IAAI,EAAE,EAAEI,GAAG,CAACC,EAAE,IAAIV,SAAS,CAACU,EAAE,CAAC;IAAE,CAAC;EAC1D;EAEA,OAAOX,iBAAiB,CAACI,IAAI,CAAC;AAChC"},"metadata":{},"sourceType":"module","externalDependencies":[]}