{"ast":null,"code":"/**\n * This code is based on `latency-monitor` (https://github.com/mlucool/latency-monitor) by `mlucool` (https://github.com/mlucool), available under Apache License 2.0 (https://github.com/mlucool/latency-monitor/blob/master/LICENSE)\n */\nimport { CustomEvent, EventEmitter } from '@libp2p/interfaces/events';\nimport { logger } from '@libp2p/logger';\nconst log = logger('libp2p:connection-manager:latency-monitor:visibility-change-emitter');\n/**\n * Listen to page visibility change events (i.e. when the page is focused / blurred) by an event emitter.\n *\n * Warning: This does not work on all browsers, but should work on all modern browsers\n *\n * @example\n *\n *     const myVisibilityEmitter = new VisibilityChangeEmitter();\n *\n *     myVisibilityEmitter.on('visibilityChange', (pageInFocus) => {\n *        if ( pageInFocus ){\n *            // Page is in focus\n *            console.log('In focus');\n *        }\n *        else {\n *            // Page is blurred\n *            console.log('Out of focus');\n *        }\n *     });\n *     // To access the visibility state directly, call:\n *     console.log('Am I focused now? ' + myVisibilityEmitter.isVisible());\n */\nexport class VisibilityChangeEmitter extends EventEmitter {\n  constructor() {\n    super();\n    this.hidden = 'hidden';\n    this.visibilityChange = 'visibilityChange';\n    if (globalThis.document != null) {\n      this._initializeVisibilityVarNames();\n      this._addVisibilityChangeListener();\n    }\n  }\n  /**\n   * document.hidden and document.visibilityChange are the two variables we need to check for;\n   * Since these variables are named differently in different browsers, this function sets\n   * the appropriate name based on the browser being used. Once executed, tha actual names of\n   * document.hidden and document.visibilityChange are found in this._hidden and this._visibilityChange\n   * respectively\n   *\n   * @private\n   */\n  _initializeVisibilityVarNames() {\n    let hidden = 'hidden';\n    let visibilityChange = 'visibilitychange';\n    if (typeof globalThis.document.hidden !== 'undefined') {\n      // Opera 12.10 and Firefox 18 and later support\n      hidden = 'hidden';\n      visibilityChange = 'visibilitychange';\n      // @ts-expect-error mozHidden is a non-standard field name\n    } else if (typeof globalThis.document.mozHidden !== 'undefined') {\n      hidden = 'mozHidden';\n      visibilityChange = 'mozvisibilitychange';\n      // @ts-expect-error msHidden is a non-standard field name\n    } else if (typeof globalThis.document.msHidden !== 'undefined') {\n      hidden = 'msHidden';\n      visibilityChange = 'msvisibilitychange';\n      // @ts-expect-error webkitHidden is a non-standard field name\n    } else if (typeof globalThis.document.webkitHidden !== 'undefined') {\n      hidden = 'webkitHidden';\n      visibilityChange = 'webkitvisibilitychange';\n    }\n    this.hidden = hidden;\n    this.visibilityChange = visibilityChange;\n  }\n  /**\n   * Adds an event listener on the document that listens to changes in document.visibilityChange\n   * (or whatever name by which the visibilityChange variable is known in the browser)\n   *\n   * @private\n   */\n  _addVisibilityChangeListener() {\n    // @ts-expect-error cannot index document object with string key\n    if (typeof globalThis.document.addEventListener === 'undefined' || typeof document[this.hidden] === 'undefined') {\n      log('Checking page visibility requires a browser that supports the Page Visibility API.');\n    } else {\n      // Handle page visibility change\n      globalThis.document.addEventListener(this.visibilityChange, this._handleVisibilityChange.bind(this), false);\n    }\n  }\n  /**\n   * The function returns ```true``` if the page is visible or ```false``` if the page is not visible and\n   * ```undefined``` if the page visibility API is not supported by the browser.\n   */\n  isVisible() {\n    // @ts-expect-error cannot index document object with string key\n    if (this.hidden === undefined || document[this.hidden] === undefined) {\n      return undefined;\n    }\n    // @ts-expect-error cannot index document object with string key\n    return document[this.hidden] == null;\n  }\n  /**\n   * The function that is called when document.visibilityChange has changed\n   * It emits an event called visibilityChange and sends the value of document.hidden as a\n   * parameter\n   *\n   * @private\n   */\n  _handleVisibilityChange() {\n    // @ts-expect-error cannot index document object with string key\n    const visible = globalThis.document[this.hidden] === false;\n    log(visible ? 'Page Visible' : 'Page Hidden');\n    // Emit the event\n    this.dispatchEvent(new CustomEvent('visibilityChange', {\n      detail: visible\n    }));\n  }\n}","map":{"version":3,"names":["CustomEvent","EventEmitter","logger","log","VisibilityChangeEmitter","constructor","hidden","visibilityChange","globalThis","document","_initializeVisibilityVarNames","_addVisibilityChangeListener","mozHidden","msHidden","webkitHidden","addEventListener","_handleVisibilityChange","bind","isVisible","undefined","visible","dispatchEvent","detail"],"sources":["../../../src/connection-manager/visibility-change-emitter.ts"],"sourcesContent":[null],"mappings":"AAAA;;;AAIA,SAASA,WAAW,EAAEC,YAAY,QAAQ,2BAA2B;AACrE,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,MAAMC,GAAG,GAAGD,MAAM,CAAC,qEAAqE,CAAC;AAQzF;;;;;;;;;;;;;;;;;;;;;;AAsBA,OAAM,MAAOE,uBAAwB,SAAQH,YAA2C;EAItFI,YAAA;IACE,KAAK,EAAE;IAEP,IAAI,CAACC,MAAM,GAAG,QAAQ;IACtB,IAAI,CAACC,gBAAgB,GAAG,kBAAkB;IAE1C,IAAIC,UAAU,CAACC,QAAQ,IAAI,IAAI,EAAE;MAC/B,IAAI,CAACC,6BAA6B,EAAE;MACpC,IAAI,CAACC,4BAA4B,EAAE;;EAEvC;EAEA;;;;;;;;;EASAD,6BAA6BA,CAAA;IAC3B,IAAIJ,MAAM,GAAW,QAAQ;IAC7B,IAAIC,gBAAgB,GAAG,kBAAkB;IAEzC,IAAI,OAAOC,UAAU,CAACC,QAAQ,CAACH,MAAM,KAAK,WAAW,EAAE;MAAE;MACvDA,MAAM,GAAG,QAAQ;MACjBC,gBAAgB,GAAG,kBAAkB;MACrC;KACD,MAAM,IAAI,OAAOC,UAAU,CAACC,QAAQ,CAACG,SAAS,KAAK,WAAW,EAAE;MAC/DN,MAAM,GAAG,WAAW;MACpBC,gBAAgB,GAAG,qBAAqB;MACxC;KACD,MAAM,IAAI,OAAOC,UAAU,CAACC,QAAQ,CAACI,QAAQ,KAAK,WAAW,EAAE;MAC9DP,MAAM,GAAG,UAAU;MACnBC,gBAAgB,GAAG,oBAAoB;MACvC;KACD,MAAM,IAAI,OAAOC,UAAU,CAACC,QAAQ,CAACK,YAAY,KAAK,WAAW,EAAE;MAClER,MAAM,GAAG,cAAc;MACvBC,gBAAgB,GAAG,wBAAwB;;IAG7C,IAAI,CAACD,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;EAC1C;EAEA;;;;;;EAMAI,4BAA4BA,CAAA;IAC1B;IACA,IAAI,OAAOH,UAAU,CAACC,QAAQ,CAACM,gBAAgB,KAAK,WAAW,IAAI,OAAON,QAAQ,CAAC,IAAI,CAACH,MAAM,CAAC,KAAK,WAAW,EAAE;MAC/GH,GAAG,CAAC,oFAAoF,CAAC;KAC1F,MAAM;MACL;MACAK,UAAU,CAACC,QAAQ,CAACM,gBAAgB,CAAC,IAAI,CAACR,gBAAgB,EAAE,IAAI,CAACS,uBAAuB,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC;;EAE/G;EAEA;;;;EAIAC,SAASA,CAAA;IACP;IACA,IAAI,IAAI,CAACZ,MAAM,KAAKa,SAAS,IAAIV,QAAQ,CAAC,IAAI,CAACH,MAAM,CAAC,KAAKa,SAAS,EAAE;MACpE,OAAOA,SAAS;;IAGlB;IACA,OAAOV,QAAQ,CAAC,IAAI,CAACH,MAAM,CAAC,IAAI,IAAI;EACtC;EAEA;;;;;;;EAOAU,uBAAuBA,CAAA;IACrB;IACA,MAAMI,OAAO,GAAGZ,UAAU,CAACC,QAAQ,CAAC,IAAI,CAACH,MAAM,CAAC,KAAK,KAAK;IAC1DH,GAAG,CAACiB,OAAO,GAAG,cAAc,GAAG,aAAa,CAAC;IAE7C;IACA,IAAI,CAACC,aAAa,CAAC,IAAIrB,WAAW,CAAU,kBAAkB,EAAE;MAC9DsB,MAAM,EAAEF;KACT,CAAC,CAAC;EACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}