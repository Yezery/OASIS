{"ast":null,"code":"export function registerMetrics(metrics) {\n  return {\n    xxHandshakeSuccesses: metrics.registerCounter('libp2p_noise_xxhandshake_successes_total', {\n      help: 'Total count of noise xxHandshakes successes_'\n    }),\n    xxHandshakeErrors: metrics.registerCounter('libp2p_noise_xxhandshake_error_total', {\n      help: 'Total count of noise xxHandshakes errors'\n    }),\n    encryptedPackets: metrics.registerCounter('libp2p_noise_encrypted_packets_total', {\n      help: 'Total count of noise encrypted packets successfully'\n    }),\n    decryptedPackets: metrics.registerCounter('libp2p_noise_decrypted_packets_total', {\n      help: 'Total count of noise decrypted packets'\n    }),\n    decryptErrors: metrics.registerCounter('libp2p_noise_decrypt_errors_total', {\n      help: 'Total count of noise decrypt errors'\n    })\n  };\n}","map":{"version":3,"names":["registerMetrics","metrics","xxHandshakeSuccesses","registerCounter","help","xxHandshakeErrors","encryptedPackets","decryptedPackets","decryptErrors"],"sources":["../../src/metrics.ts"],"sourcesContent":[null],"mappings":"AAIA,OAAM,SAAUA,eAAeA,CAAEC,OAAgB;EAC/C,OAAO;IACLC,oBAAoB,EAAED,OAAO,CAACE,eAAe,CAC3C,0CAA0C,EAAE;MAC1CC,IAAI,EAAE;KACP,CAAC;IAEJC,iBAAiB,EAAEJ,OAAO,CAACE,eAAe,CACxC,sCAAsC,EAAE;MACtCC,IAAI,EAAE;KACP,CAAC;IAEJE,gBAAgB,EAAEL,OAAO,CAACE,eAAe,CACvC,sCAAsC,EAAE;MACtCC,IAAI,EAAE;KACP,CAAC;IAEJG,gBAAgB,EAAEN,OAAO,CAACE,eAAe,CACvC,sCAAsC,EAAE;MACtCC,IAAI,EAAE;KACP,CAAC;IAEJI,aAAa,EAAEP,OAAO,CAACE,eAAe,CACpC,mCAAmC,EAAE;MACnCC,IAAI,EAAE;KACP;GACJ;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}