{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { CID } from 'multiformats/cid';\nimport { CodeError } from '@libp2p/interfaces/errors';\nimport { Message } from '../../message/index.js';\nimport { removePrivateAddresses, removePublicAddresses } from '../../utils.js';\nimport { logger } from '@libp2p/logger';\nconst log = logger('libp2p:kad-dht:rpc:handlers:get-providers');\nexport class GetProvidersHandler {\n  constructor(components, init) {\n    const {\n      peerRouting,\n      providers,\n      lan\n    } = init;\n    this.components = components;\n    this.peerRouting = peerRouting;\n    this.providers = providers;\n    this.lan = Boolean(lan);\n  }\n  async handle(peerId, msg) {\n    let cid;\n    try {\n      cid = CID.decode(msg.key);\n    } catch (err) {\n      throw new CodeError('Invalid CID', 'ERR_INVALID_CID');\n    }\n    log('%p asking for providers for %s', peerId, cid);\n    const [peers, closer] = await Promise.all([this.providers.getProviders(cid), this.peerRouting.getCloserPeersOffline(msg.key, peerId)]);\n    const providerPeers = await this._getPeers(peers);\n    const closerPeers = await this._getPeers(closer.map(({\n      id\n    }) => id));\n    const response = new Message(msg.type, msg.key, msg.clusterLevel);\n    if (providerPeers.length > 0) {\n      response.providerPeers = providerPeers;\n    }\n    if (closerPeers.length > 0) {\n      response.closerPeers = closerPeers;\n    }\n    log('got %s providers %s closerPeers', providerPeers.length, closerPeers.length);\n    return response;\n  }\n  async _getAddresses(peerId) {\n    const addrs = await this.components.peerStore.addressBook.get(peerId);\n    return addrs.map(address => address.multiaddr);\n  }\n  async _getPeers(peerIds) {\n    const output = [];\n    const addrFilter = this.lan ? removePublicAddresses : removePrivateAddresses;\n    for (const peerId of peerIds) {\n      const peer = addrFilter({\n        id: peerId,\n        multiaddrs: await this._getAddresses(peerId),\n        protocols: []\n      });\n      if (peer.multiaddrs.length > 0) {\n        output.push(peer);\n      }\n    }\n    return output;\n  }\n}","map":{"version":3,"names":["CID","CodeError","Message","removePrivateAddresses","removePublicAddresses","logger","log","GetProvidersHandler","constructor","components","init","peerRouting","providers","lan","Boolean","handle","peerId","msg","cid","decode","key","err","peers","closer","Promise","all","getProviders","getCloserPeersOffline","providerPeers","_getPeers","closerPeers","map","id","response","type","clusterLevel","length","_getAddresses","addrs","peerStore","addressBook","get","address","multiaddr","peerIds","output","addrFilter","peer","multiaddrs","protocols","push"],"sources":["../../../../src/rpc/handlers/get-providers.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}