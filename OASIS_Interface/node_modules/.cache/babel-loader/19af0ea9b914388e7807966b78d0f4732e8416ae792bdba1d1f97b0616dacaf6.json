{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { CodeError } from '@libp2p/interfaces/errors';\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport * as hmac from '../hmac/index.js';\nconst cipherMap = {\n  'AES-128': {\n    ivSize: 16,\n    keySize: 16\n  },\n  'AES-256': {\n    ivSize: 16,\n    keySize: 32\n  },\n  Blowfish: {\n    ivSize: 8,\n    keySize: 32\n  }\n};\n/**\n * Generates a set of keys for each party by stretching the shared key.\n * (myIV, theirIV, myCipherKey, theirCipherKey, myMACKey, theirMACKey)\n */\nexport async function keyStretcher(cipherType, hash, secret) {\n  const cipher = cipherMap[cipherType];\n  if (cipher == null) {\n    const allowed = Object.keys(cipherMap).join(' / ');\n    throw new CodeError(`unknown cipher type '${cipherType}'. Must be ${allowed}`, 'ERR_INVALID_CIPHER_TYPE');\n  }\n  if (hash == null) {\n    throw new CodeError('missing hash type', 'ERR_MISSING_HASH_TYPE');\n  }\n  const cipherKeySize = cipher.keySize;\n  const ivSize = cipher.ivSize;\n  const hmacKeySize = 20;\n  const seed = uint8ArrayFromString('key expansion');\n  const resultLength = 2 * (ivSize + cipherKeySize + hmacKeySize);\n  const m = await hmac.create(hash, secret);\n  let a = await m.digest(seed);\n  const result = [];\n  let j = 0;\n  while (j < resultLength) {\n    const b = await m.digest(uint8ArrayConcat([a, seed]));\n    let todo = b.length;\n    if (j + todo > resultLength) {\n      todo = resultLength - j;\n    }\n    result.push(b);\n    j += todo;\n    a = await m.digest(a);\n  }\n  const half = resultLength / 2;\n  const resultBuffer = uint8ArrayConcat(result);\n  const r1 = resultBuffer.subarray(0, half);\n  const r2 = resultBuffer.subarray(half, resultLength);\n  const createKey = res => ({\n    iv: res.subarray(0, ivSize),\n    cipherKey: res.subarray(ivSize, ivSize + cipherKeySize),\n    macKey: res.subarray(ivSize + cipherKeySize)\n  });\n  return {\n    k1: createKey(r1),\n    k2: createKey(r2)\n  };\n}","map":{"version":3,"names":["CodeError","concat","uint8ArrayConcat","fromString","uint8ArrayFromString","hmac","cipherMap","ivSize","keySize","Blowfish","keyStretcher","cipherType","hash","secret","cipher","allowed","Object","keys","join","cipherKeySize","hmacKeySize","seed","resultLength","m","create","a","digest","result","j","b","todo","length","push","half","resultBuffer","r1","subarray","r2","createKey","res","iv","cipherKey","macKey","k1","k2"],"sources":["../../../src/keys/key-stretcher.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}