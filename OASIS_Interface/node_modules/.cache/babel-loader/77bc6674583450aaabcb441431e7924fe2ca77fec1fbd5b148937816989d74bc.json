{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @param {object} config\n * @param {import('../../types').Preload} config.preload\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createGet({\n  preload,\n  repo\n}) {\n  /**\n   * @type {import('ipfs-core-types/src/block').API<{}>[\"get\"]}\n   */\n  async function get(cid, options = {}) {\n    // eslint-disable-line require-await\n    if (options.preload !== false) {\n      preload(cid);\n    }\n    return repo.blocks.get(cid, options);\n  }\n  return withTimeoutOption(get);\n}","map":{"version":3,"names":["withTimeoutOption","createGet","preload","repo","get","cid","options","blocks"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-core@0.18.1/node_modules/ipfs-core/src/components/block/get.js"],"sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').Preload} config.preload\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createGet ({ preload, repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/block').API<{}>[\"get\"]}\n   */\n  async function get (cid, options = {}) { // eslint-disable-line require-await\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    return repo.blocks.get(cid, options)\n  }\n\n  return withTimeoutOption(get)\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,qCAAqC;;AAEvE;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAAE;EAAEC,OAAO;EAAEC;AAAK,CAAC,EAAE;EAC5C;AACF;AACA;EACE,eAAeC,GAAGA,CAAEC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAAE;IACvC,IAAIA,OAAO,CAACJ,OAAO,KAAK,KAAK,EAAE;MAC7BA,OAAO,CAACG,GAAG,CAAC;IACd;IAEA,OAAOF,IAAI,CAACI,MAAM,CAACH,GAAG,CAACC,GAAG,EAAEC,OAAO,CAAC;EACtC;EAEA,OAAON,iBAAiB,CAACI,GAAG,CAAC;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}