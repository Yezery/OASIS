{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nconst {\n  fromCallback\n} = require('catering');\nconst ModuleError = require('module-error');\nconst {\n  getOptions,\n  getCallback\n} = require('./lib/common');\nconst kPromise = Symbol('promise');\nconst kCallback = Symbol('callback');\nconst kWorking = Symbol('working');\nconst kHandleOne = Symbol('handleOne');\nconst kHandleMany = Symbol('handleMany');\nconst kAutoClose = Symbol('autoClose');\nconst kFinishWork = Symbol('finishWork');\nconst kReturnMany = Symbol('returnMany');\nconst kClosing = Symbol('closing');\nconst kHandleClose = Symbol('handleClose');\nconst kClosed = Symbol('closed');\nconst kCloseCallbacks = Symbol('closeCallbacks');\nconst kKeyEncoding = Symbol('keyEncoding');\nconst kValueEncoding = Symbol('valueEncoding');\nconst kAbortOnClose = Symbol('abortOnClose');\nconst kLegacy = Symbol('legacy');\nconst kKeys = Symbol('keys');\nconst kValues = Symbol('values');\nconst kLimit = Symbol('limit');\nconst kCount = Symbol('count');\nconst emptyOptions = Object.freeze({});\nconst noop = () => {};\nlet warnedEnd = false;\n\n// This class is an internal utility for common functionality between AbstractIterator,\n// AbstractKeyIterator and AbstractValueIterator. It's not exported.\nclass CommonIterator {\n  constructor(db, options, legacy) {\n    if (typeof db !== 'object' || db === null) {\n      const hint = db === null ? 'null' : typeof db;\n      throw new TypeError(`The first argument must be an abstract-level database, received ${hint}`);\n    }\n    if (typeof options !== 'object' || options === null) {\n      throw new TypeError('The second argument must be an options object');\n    }\n    this[kClosed] = false;\n    this[kCloseCallbacks] = [];\n    this[kWorking] = false;\n    this[kClosing] = false;\n    this[kAutoClose] = false;\n    this[kCallback] = null;\n    this[kHandleOne] = this[kHandleOne].bind(this);\n    this[kHandleMany] = this[kHandleMany].bind(this);\n    this[kHandleClose] = this[kHandleClose].bind(this);\n    this[kKeyEncoding] = options[kKeyEncoding];\n    this[kValueEncoding] = options[kValueEncoding];\n    this[kLegacy] = legacy;\n    this[kLimit] = Number.isInteger(options.limit) && options.limit >= 0 ? options.limit : Infinity;\n    this[kCount] = 0;\n\n    // Undocumented option to abort pending work on close(). Used by the\n    // many-level module as a temporary solution to a blocked close().\n    // TODO (next major): consider making this the default behavior. Native\n    // implementations should have their own logic to safely close iterators.\n    this[kAbortOnClose] = !!options.abortOnClose;\n    this.db = db;\n    this.db.attachResource(this);\n    this.nextTick = db.nextTick;\n  }\n  get count() {\n    return this[kCount];\n  }\n  get limit() {\n    return this[kLimit];\n  }\n  next(callback) {\n    let promise;\n    if (callback === undefined) {\n      promise = new Promise((resolve, reject) => {\n        callback = (err, key, value) => {\n          if (err) reject(err);else if (!this[kLegacy]) resolve(key);else if (key === undefined && value === undefined) resolve();else resolve([key, value]);\n        };\n      });\n    } else if (typeof callback !== 'function') {\n      throw new TypeError('Callback must be a function');\n    }\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call next() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }));\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call next() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }));\n    } else {\n      this[kWorking] = true;\n      this[kCallback] = callback;\n      if (this[kCount] >= this[kLimit]) this.nextTick(this[kHandleOne], null);else this._next(this[kHandleOne]);\n    }\n    return promise;\n  }\n  _next(callback) {\n    this.nextTick(callback);\n  }\n  nextv(size, options, callback) {\n    callback = getCallback(options, callback);\n    callback = fromCallback(callback, kPromise);\n    options = getOptions(options, emptyOptions);\n    if (!Number.isInteger(size)) {\n      this.nextTick(callback, new TypeError(\"The first argument 'size' must be an integer\"));\n      return callback[kPromise];\n    }\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call nextv() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }));\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call nextv() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }));\n    } else {\n      if (size < 1) size = 1;\n      if (this[kLimit] < Infinity) size = Math.min(size, this[kLimit] - this[kCount]);\n      this[kWorking] = true;\n      this[kCallback] = callback;\n      if (size <= 0) this.nextTick(this[kHandleMany], null, []);else this._nextv(size, options, this[kHandleMany]);\n    }\n    return callback[kPromise];\n  }\n  _nextv(size, options, callback) {\n    const acc = [];\n    const onnext = (err, key, value) => {\n      if (err) {\n        return callback(err);\n      } else if (this[kLegacy] ? key === undefined && value === undefined : key === undefined) {\n        return callback(null, acc);\n      }\n      acc.push(this[kLegacy] ? [key, value] : key);\n      if (acc.length === size) {\n        callback(null, acc);\n      } else {\n        this._next(onnext);\n      }\n    };\n    this._next(onnext);\n  }\n  all(options, callback) {\n    callback = getCallback(options, callback);\n    callback = fromCallback(callback, kPromise);\n    options = getOptions(options, emptyOptions);\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call all() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }));\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call all() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }));\n    } else {\n      this[kWorking] = true;\n      this[kCallback] = callback;\n      this[kAutoClose] = true;\n      if (this[kCount] >= this[kLimit]) this.nextTick(this[kHandleMany], null, []);else this._all(options, this[kHandleMany]);\n    }\n    return callback[kPromise];\n  }\n  _all(options, callback) {\n    // Must count here because we're directly calling _nextv()\n    let count = this[kCount];\n    const acc = [];\n    const nextv = () => {\n      // Not configurable, because implementations should optimize _all().\n      const size = this[kLimit] < Infinity ? Math.min(1e3, this[kLimit] - count) : 1e3;\n      if (size <= 0) {\n        this.nextTick(callback, null, acc);\n      } else {\n        this._nextv(size, emptyOptions, onnextv);\n      }\n    };\n    const onnextv = (err, items) => {\n      if (err) {\n        callback(err);\n      } else if (items.length === 0) {\n        callback(null, acc);\n      } else {\n        acc.push.apply(acc, items);\n        count += items.length;\n        nextv();\n      }\n    };\n    nextv();\n  }\n  [kFinishWork]() {\n    const cb = this[kCallback];\n\n    // Callback will be null if work was aborted on close\n    if (this[kAbortOnClose] && cb === null) return noop;\n    this[kWorking] = false;\n    this[kCallback] = null;\n    if (this[kClosing]) this._close(this[kHandleClose]);\n    return cb;\n  }\n  [kReturnMany](cb, err, items) {\n    if (this[kAutoClose]) {\n      this.close(cb.bind(null, err, items));\n    } else {\n      cb(err, items);\n    }\n  }\n  seek(target, options) {\n    options = getOptions(options, emptyOptions);\n    if (this[kClosing]) {\n      // Don't throw here, to be kind to implementations that wrap\n      // another db and don't necessarily control when the db is closed\n    } else if (this[kWorking]) {\n      throw new ModuleError('Iterator is busy: cannot call seek() until next() has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      });\n    } else {\n      const keyEncoding = this.db.keyEncoding(options.keyEncoding || this[kKeyEncoding]);\n      const keyFormat = keyEncoding.format;\n      if (options.keyEncoding !== keyFormat) {\n        options = {\n          ...options,\n          keyEncoding: keyFormat\n        };\n      }\n      const mapped = this.db.prefixKey(keyEncoding.encode(target), keyFormat);\n      this._seek(mapped, options);\n    }\n  }\n  _seek(target, options) {\n    throw new ModuleError('Iterator does not support seek()', {\n      code: 'LEVEL_NOT_SUPPORTED'\n    });\n  }\n  close(callback) {\n    callback = fromCallback(callback, kPromise);\n    if (this[kClosed]) {\n      this.nextTick(callback);\n    } else if (this[kClosing]) {\n      this[kCloseCallbacks].push(callback);\n    } else {\n      this[kClosing] = true;\n      this[kCloseCallbacks].push(callback);\n      if (!this[kWorking]) {\n        this._close(this[kHandleClose]);\n      } else if (this[kAbortOnClose]) {\n        // Don't wait for work to finish. Subsequently ignore the result.\n        const cb = this[kFinishWork]();\n        cb(new ModuleError('Aborted on iterator close()', {\n          code: 'LEVEL_ITERATOR_NOT_OPEN'\n        }));\n      }\n    }\n    return callback[kPromise];\n  }\n  _close(callback) {\n    this.nextTick(callback);\n  }\n  [kHandleClose]() {\n    this[kClosed] = true;\n    this.db.detachResource(this);\n    const callbacks = this[kCloseCallbacks];\n    this[kCloseCallbacks] = [];\n    for (const cb of callbacks) {\n      cb();\n    }\n  }\n  async *[Symbol.asyncIterator]() {\n    try {\n      let item;\n      while ((item = await this.next()) !== undefined) {\n        yield item;\n      }\n    } finally {\n      if (!this[kClosed]) await this.close();\n    }\n  }\n}\n\n// For backwards compatibility this class is not (yet) called AbstractEntryIterator.\nclass AbstractIterator extends CommonIterator {\n  constructor(db, options) {\n    super(db, options, true);\n    this[kKeys] = options.keys !== false;\n    this[kValues] = options.values !== false;\n  }\n  [kHandleOne](err, key, value) {\n    const cb = this[kFinishWork]();\n    if (err) return cb(err);\n    try {\n      key = this[kKeys] && key !== undefined ? this[kKeyEncoding].decode(key) : undefined;\n      value = this[kValues] && value !== undefined ? this[kValueEncoding].decode(value) : undefined;\n    } catch (err) {\n      return cb(new IteratorDecodeError('entry', err));\n    }\n    if (!(key === undefined && value === undefined)) {\n      this[kCount]++;\n    }\n    cb(null, key, value);\n  }\n  [kHandleMany](err, entries) {\n    const cb = this[kFinishWork]();\n    if (err) return this[kReturnMany](cb, err);\n    try {\n      for (const entry of entries) {\n        const key = entry[0];\n        const value = entry[1];\n        entry[0] = this[kKeys] && key !== undefined ? this[kKeyEncoding].decode(key) : undefined;\n        entry[1] = this[kValues] && value !== undefined ? this[kValueEncoding].decode(value) : undefined;\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('entries', err));\n    }\n    this[kCount] += entries.length;\n    this[kReturnMany](cb, null, entries);\n  }\n  end(callback) {\n    if (!warnedEnd && typeof console !== 'undefined') {\n      warnedEnd = true;\n      console.warn(new ModuleError('The iterator.end() method was renamed to close() and end() is an alias that will be removed in a future version', {\n        code: 'LEVEL_LEGACY'\n      }));\n    }\n    return this.close(callback);\n  }\n}\nclass AbstractKeyIterator extends CommonIterator {\n  constructor(db, options) {\n    super(db, options, false);\n  }\n  [kHandleOne](err, key) {\n    const cb = this[kFinishWork]();\n    if (err) return cb(err);\n    try {\n      key = key !== undefined ? this[kKeyEncoding].decode(key) : undefined;\n    } catch (err) {\n      return cb(new IteratorDecodeError('key', err));\n    }\n    if (key !== undefined) this[kCount]++;\n    cb(null, key);\n  }\n  [kHandleMany](err, keys) {\n    const cb = this[kFinishWork]();\n    if (err) return this[kReturnMany](cb, err);\n    try {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        keys[i] = key !== undefined ? this[kKeyEncoding].decode(key) : undefined;\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('keys', err));\n    }\n    this[kCount] += keys.length;\n    this[kReturnMany](cb, null, keys);\n  }\n}\nclass AbstractValueIterator extends CommonIterator {\n  constructor(db, options) {\n    super(db, options, false);\n  }\n  [kHandleOne](err, value) {\n    const cb = this[kFinishWork]();\n    if (err) return cb(err);\n    try {\n      value = value !== undefined ? this[kValueEncoding].decode(value) : undefined;\n    } catch (err) {\n      return cb(new IteratorDecodeError('value', err));\n    }\n    if (value !== undefined) this[kCount]++;\n    cb(null, value);\n  }\n  [kHandleMany](err, values) {\n    const cb = this[kFinishWork]();\n    if (err) return this[kReturnMany](cb, err);\n    try {\n      for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        values[i] = value !== undefined ? this[kValueEncoding].decode(value) : undefined;\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('values', err));\n    }\n    this[kCount] += values.length;\n    this[kReturnMany](cb, null, values);\n  }\n}\n\n// Internal utility, not typed or exported\nclass IteratorDecodeError extends ModuleError {\n  constructor(subject, cause) {\n    super(`Iterator could not decode ${subject}`, {\n      code: 'LEVEL_DECODE_ERROR',\n      cause\n    });\n  }\n}\n\n// To help migrating to abstract-level\nfor (const k of ['_ended property', '_nexting property', '_end method']) {\n  Object.defineProperty(AbstractIterator.prototype, k.split(' ')[0], {\n    get() {\n      throw new ModuleError(`The ${k} has been removed`, {\n        code: 'LEVEL_LEGACY'\n      });\n    },\n    set() {\n      throw new ModuleError(`The ${k} has been removed`, {\n        code: 'LEVEL_LEGACY'\n      });\n    }\n  });\n}\n\n// Exposed so that AbstractLevel can set these options\nAbstractIterator.keyEncoding = kKeyEncoding;\nAbstractIterator.valueEncoding = kValueEncoding;\nexports.AbstractIterator = AbstractIterator;\nexports.AbstractKeyIterator = AbstractKeyIterator;\nexports.AbstractValueIterator = AbstractValueIterator;","map":{"version":3,"names":["require","fromCallback","ModuleError","getOptions","getCallback","kPromise","Symbol","kCallback","kWorking","kHandleOne","kHandleMany","kAutoClose","kFinishWork","kReturnMany","kClosing","kHandleClose","kClosed","kCloseCallbacks","kKeyEncoding","kValueEncoding","kAbortOnClose","kLegacy","kKeys","kValues","kLimit","kCount","emptyOptions","Object","freeze","noop","warnedEnd","CommonIterator","constructor","db","options","legacy","hint","TypeError","bind","Number","isInteger","limit","Infinity","abortOnClose","attachResource","nextTick","count","next","callback","promise","undefined","Promise","resolve","reject","err","key","value","code","_next","nextv","size","Math","min","_nextv","acc","onnext","push","length","all","_all","onnextv","items","apply","cb","_close","close","seek","target","keyEncoding","keyFormat","format","mapped","prefixKey","encode","_seek","detachResource","callbacks","asyncIterator","item","AbstractIterator","keys","values","decode","IteratorDecodeError","entries","entry","end","console","warn","AbstractKeyIterator","i","AbstractValueIterator","subject","cause","k","defineProperty","prototype","split","get","set","valueEncoding","exports"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/abstract-level@1.0.3/node_modules/abstract-level/abstract-iterator.js"],"sourcesContent":["'use strict'\n\nconst { fromCallback } = require('catering')\nconst ModuleError = require('module-error')\nconst { getOptions, getCallback } = require('./lib/common')\n\nconst kPromise = Symbol('promise')\nconst kCallback = Symbol('callback')\nconst kWorking = Symbol('working')\nconst kHandleOne = Symbol('handleOne')\nconst kHandleMany = Symbol('handleMany')\nconst kAutoClose = Symbol('autoClose')\nconst kFinishWork = Symbol('finishWork')\nconst kReturnMany = Symbol('returnMany')\nconst kClosing = Symbol('closing')\nconst kHandleClose = Symbol('handleClose')\nconst kClosed = Symbol('closed')\nconst kCloseCallbacks = Symbol('closeCallbacks')\nconst kKeyEncoding = Symbol('keyEncoding')\nconst kValueEncoding = Symbol('valueEncoding')\nconst kAbortOnClose = Symbol('abortOnClose')\nconst kLegacy = Symbol('legacy')\nconst kKeys = Symbol('keys')\nconst kValues = Symbol('values')\nconst kLimit = Symbol('limit')\nconst kCount = Symbol('count')\n\nconst emptyOptions = Object.freeze({})\nconst noop = () => {}\nlet warnedEnd = false\n\n// This class is an internal utility for common functionality between AbstractIterator,\n// AbstractKeyIterator and AbstractValueIterator. It's not exported.\nclass CommonIterator {\n  constructor (db, options, legacy) {\n    if (typeof db !== 'object' || db === null) {\n      const hint = db === null ? 'null' : typeof db\n      throw new TypeError(`The first argument must be an abstract-level database, received ${hint}`)\n    }\n\n    if (typeof options !== 'object' || options === null) {\n      throw new TypeError('The second argument must be an options object')\n    }\n\n    this[kClosed] = false\n    this[kCloseCallbacks] = []\n    this[kWorking] = false\n    this[kClosing] = false\n    this[kAutoClose] = false\n    this[kCallback] = null\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n    this[kHandleClose] = this[kHandleClose].bind(this)\n    this[kKeyEncoding] = options[kKeyEncoding]\n    this[kValueEncoding] = options[kValueEncoding]\n    this[kLegacy] = legacy\n    this[kLimit] = Number.isInteger(options.limit) && options.limit >= 0 ? options.limit : Infinity\n    this[kCount] = 0\n\n    // Undocumented option to abort pending work on close(). Used by the\n    // many-level module as a temporary solution to a blocked close().\n    // TODO (next major): consider making this the default behavior. Native\n    // implementations should have their own logic to safely close iterators.\n    this[kAbortOnClose] = !!options.abortOnClose\n\n    this.db = db\n    this.db.attachResource(this)\n    this.nextTick = db.nextTick\n  }\n\n  get count () {\n    return this[kCount]\n  }\n\n  get limit () {\n    return this[kLimit]\n  }\n\n  next (callback) {\n    let promise\n\n    if (callback === undefined) {\n      promise = new Promise((resolve, reject) => {\n        callback = (err, key, value) => {\n          if (err) reject(err)\n          else if (!this[kLegacy]) resolve(key)\n          else if (key === undefined && value === undefined) resolve()\n          else resolve([key, value])\n        }\n      })\n    } else if (typeof callback !== 'function') {\n      throw new TypeError('Callback must be a function')\n    }\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call next() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call next() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }))\n    } else {\n      this[kWorking] = true\n      this[kCallback] = callback\n\n      if (this[kCount] >= this[kLimit]) this.nextTick(this[kHandleOne], null)\n      else this._next(this[kHandleOne])\n    }\n\n    return promise\n  }\n\n  _next (callback) {\n    this.nextTick(callback)\n  }\n\n  nextv (size, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, emptyOptions)\n\n    if (!Number.isInteger(size)) {\n      this.nextTick(callback, new TypeError(\"The first argument 'size' must be an integer\"))\n      return callback[kPromise]\n    }\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call nextv() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call nextv() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }))\n    } else {\n      if (size < 1) size = 1\n      if (this[kLimit] < Infinity) size = Math.min(size, this[kLimit] - this[kCount])\n\n      this[kWorking] = true\n      this[kCallback] = callback\n\n      if (size <= 0) this.nextTick(this[kHandleMany], null, [])\n      else this._nextv(size, options, this[kHandleMany])\n    }\n\n    return callback[kPromise]\n  }\n\n  _nextv (size, options, callback) {\n    const acc = []\n    const onnext = (err, key, value) => {\n      if (err) {\n        return callback(err)\n      } else if (this[kLegacy] ? key === undefined && value === undefined : key === undefined) {\n        return callback(null, acc)\n      }\n\n      acc.push(this[kLegacy] ? [key, value] : key)\n\n      if (acc.length === size) {\n        callback(null, acc)\n      } else {\n        this._next(onnext)\n      }\n    }\n\n    this._next(onnext)\n  }\n\n  all (options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, emptyOptions)\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call all() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call all() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }))\n    } else {\n      this[kWorking] = true\n      this[kCallback] = callback\n      this[kAutoClose] = true\n\n      if (this[kCount] >= this[kLimit]) this.nextTick(this[kHandleMany], null, [])\n      else this._all(options, this[kHandleMany])\n    }\n\n    return callback[kPromise]\n  }\n\n  _all (options, callback) {\n    // Must count here because we're directly calling _nextv()\n    let count = this[kCount]\n    const acc = []\n\n    const nextv = () => {\n      // Not configurable, because implementations should optimize _all().\n      const size = this[kLimit] < Infinity ? Math.min(1e3, this[kLimit] - count) : 1e3\n\n      if (size <= 0) {\n        this.nextTick(callback, null, acc)\n      } else {\n        this._nextv(size, emptyOptions, onnextv)\n      }\n    }\n\n    const onnextv = (err, items) => {\n      if (err) {\n        callback(err)\n      } else if (items.length === 0) {\n        callback(null, acc)\n      } else {\n        acc.push.apply(acc, items)\n        count += items.length\n        nextv()\n      }\n    }\n\n    nextv()\n  }\n\n  [kFinishWork] () {\n    const cb = this[kCallback]\n\n    // Callback will be null if work was aborted on close\n    if (this[kAbortOnClose] && cb === null) return noop\n\n    this[kWorking] = false\n    this[kCallback] = null\n\n    if (this[kClosing]) this._close(this[kHandleClose])\n\n    return cb\n  }\n\n  [kReturnMany] (cb, err, items) {\n    if (this[kAutoClose]) {\n      this.close(cb.bind(null, err, items))\n    } else {\n      cb(err, items)\n    }\n  }\n\n  seek (target, options) {\n    options = getOptions(options, emptyOptions)\n\n    if (this[kClosing]) {\n      // Don't throw here, to be kind to implementations that wrap\n      // another db and don't necessarily control when the db is closed\n    } else if (this[kWorking]) {\n      throw new ModuleError('Iterator is busy: cannot call seek() until next() has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      })\n    } else {\n      const keyEncoding = this.db.keyEncoding(options.keyEncoding || this[kKeyEncoding])\n      const keyFormat = keyEncoding.format\n\n      if (options.keyEncoding !== keyFormat) {\n        options = { ...options, keyEncoding: keyFormat }\n      }\n\n      const mapped = this.db.prefixKey(keyEncoding.encode(target), keyFormat)\n      this._seek(mapped, options)\n    }\n  }\n\n  _seek (target, options) {\n    throw new ModuleError('Iterator does not support seek()', {\n      code: 'LEVEL_NOT_SUPPORTED'\n    })\n  }\n\n  close (callback) {\n    callback = fromCallback(callback, kPromise)\n\n    if (this[kClosed]) {\n      this.nextTick(callback)\n    } else if (this[kClosing]) {\n      this[kCloseCallbacks].push(callback)\n    } else {\n      this[kClosing] = true\n      this[kCloseCallbacks].push(callback)\n\n      if (!this[kWorking]) {\n        this._close(this[kHandleClose])\n      } else if (this[kAbortOnClose]) {\n        // Don't wait for work to finish. Subsequently ignore the result.\n        const cb = this[kFinishWork]()\n\n        cb(new ModuleError('Aborted on iterator close()', {\n          code: 'LEVEL_ITERATOR_NOT_OPEN'\n        }))\n      }\n    }\n\n    return callback[kPromise]\n  }\n\n  _close (callback) {\n    this.nextTick(callback)\n  }\n\n  [kHandleClose] () {\n    this[kClosed] = true\n    this.db.detachResource(this)\n\n    const callbacks = this[kCloseCallbacks]\n    this[kCloseCallbacks] = []\n\n    for (const cb of callbacks) {\n      cb()\n    }\n  }\n\n  async * [Symbol.asyncIterator] () {\n    try {\n      let item\n\n      while ((item = (await this.next())) !== undefined) {\n        yield item\n      }\n    } finally {\n      if (!this[kClosed]) await this.close()\n    }\n  }\n}\n\n// For backwards compatibility this class is not (yet) called AbstractEntryIterator.\nclass AbstractIterator extends CommonIterator {\n  constructor (db, options) {\n    super(db, options, true)\n    this[kKeys] = options.keys !== false\n    this[kValues] = options.values !== false\n  }\n\n  [kHandleOne] (err, key, value) {\n    const cb = this[kFinishWork]()\n    if (err) return cb(err)\n\n    try {\n      key = this[kKeys] && key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n      value = this[kValues] && value !== undefined ? this[kValueEncoding].decode(value) : undefined\n    } catch (err) {\n      return cb(new IteratorDecodeError('entry', err))\n    }\n\n    if (!(key === undefined && value === undefined)) {\n      this[kCount]++\n    }\n\n    cb(null, key, value)\n  }\n\n  [kHandleMany] (err, entries) {\n    const cb = this[kFinishWork]()\n    if (err) return this[kReturnMany](cb, err)\n\n    try {\n      for (const entry of entries) {\n        const key = entry[0]\n        const value = entry[1]\n\n        entry[0] = this[kKeys] && key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n        entry[1] = this[kValues] && value !== undefined ? this[kValueEncoding].decode(value) : undefined\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('entries', err))\n    }\n\n    this[kCount] += entries.length\n    this[kReturnMany](cb, null, entries)\n  }\n\n  end (callback) {\n    if (!warnedEnd && typeof console !== 'undefined') {\n      warnedEnd = true\n      console.warn(new ModuleError(\n        'The iterator.end() method was renamed to close() and end() is an alias that will be removed in a future version',\n        { code: 'LEVEL_LEGACY' }\n      ))\n    }\n\n    return this.close(callback)\n  }\n}\n\nclass AbstractKeyIterator extends CommonIterator {\n  constructor (db, options) {\n    super(db, options, false)\n  }\n\n  [kHandleOne] (err, key) {\n    const cb = this[kFinishWork]()\n    if (err) return cb(err)\n\n    try {\n      key = key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n    } catch (err) {\n      return cb(new IteratorDecodeError('key', err))\n    }\n\n    if (key !== undefined) this[kCount]++\n    cb(null, key)\n  }\n\n  [kHandleMany] (err, keys) {\n    const cb = this[kFinishWork]()\n    if (err) return this[kReturnMany](cb, err)\n\n    try {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i]\n        keys[i] = key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('keys', err))\n    }\n\n    this[kCount] += keys.length\n    this[kReturnMany](cb, null, keys)\n  }\n}\n\nclass AbstractValueIterator extends CommonIterator {\n  constructor (db, options) {\n    super(db, options, false)\n  }\n\n  [kHandleOne] (err, value) {\n    const cb = this[kFinishWork]()\n    if (err) return cb(err)\n\n    try {\n      value = value !== undefined ? this[kValueEncoding].decode(value) : undefined\n    } catch (err) {\n      return cb(new IteratorDecodeError('value', err))\n    }\n\n    if (value !== undefined) this[kCount]++\n    cb(null, value)\n  }\n\n  [kHandleMany] (err, values) {\n    const cb = this[kFinishWork]()\n    if (err) return this[kReturnMany](cb, err)\n\n    try {\n      for (let i = 0; i < values.length; i++) {\n        const value = values[i]\n        values[i] = value !== undefined ? this[kValueEncoding].decode(value) : undefined\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('values', err))\n    }\n\n    this[kCount] += values.length\n    this[kReturnMany](cb, null, values)\n  }\n}\n\n// Internal utility, not typed or exported\nclass IteratorDecodeError extends ModuleError {\n  constructor (subject, cause) {\n    super(`Iterator could not decode ${subject}`, {\n      code: 'LEVEL_DECODE_ERROR',\n      cause\n    })\n  }\n}\n\n// To help migrating to abstract-level\nfor (const k of ['_ended property', '_nexting property', '_end method']) {\n  Object.defineProperty(AbstractIterator.prototype, k.split(' ')[0], {\n    get () { throw new ModuleError(`The ${k} has been removed`, { code: 'LEVEL_LEGACY' }) },\n    set () { throw new ModuleError(`The ${k} has been removed`, { code: 'LEVEL_LEGACY' }) }\n  })\n}\n\n// Exposed so that AbstractLevel can set these options\nAbstractIterator.keyEncoding = kKeyEncoding\nAbstractIterator.valueEncoding = kValueEncoding\n\nexports.AbstractIterator = AbstractIterator\nexports.AbstractKeyIterator = AbstractKeyIterator\nexports.AbstractValueIterator = AbstractValueIterator\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}