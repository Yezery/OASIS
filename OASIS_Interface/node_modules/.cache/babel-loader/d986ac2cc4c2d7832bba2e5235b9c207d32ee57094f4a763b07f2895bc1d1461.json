{"ast":null,"code":"import { normaliseContent } from './normalise-content.js';\nimport { normaliseCandidateMultiple } from './normalise-candidate-multiple.js';\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * Transforms any of the `ipfs.addAll` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidateStream} input\n */\nexport function normaliseInput(input) {\n  return normaliseCandidateMultiple(input, normaliseContent);\n}","map":{"version":3,"names":["normaliseContent","normaliseCandidateMultiple","normaliseInput","input"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-core-utils@0.18.1/node_modules/ipfs-core-utils/src/files/normalise-input-multiple.js"],"sourcesContent":["import { normaliseContent } from './normalise-content.js'\nimport { normaliseCandidateMultiple } from './normalise-candidate-multiple.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * Transforms any of the `ipfs.addAll` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidateStream} input\n */\nexport function normaliseInput (input) {\n  return normaliseCandidateMultiple(input, normaliseContent)\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,0BAA0B,QAAQ,mCAAmC;;AAE9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAAEC,KAAK,EAAE;EACrC,OAAOF,0BAA0B,CAACE,KAAK,EAAEH,gBAAgB,CAAC;AAC5D"},"metadata":{},"sourceType":"module","externalDependencies":[]}