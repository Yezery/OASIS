{"ast":null,"code":"import axios from 'axios';\n// import store from '@/store'\n// const IP = store.state.IP\nconst service = axios.create({\n  // baseURL: `http://${IP}:8082`,\n  baseURL: 'http://10.22.60.119:8082',\n  timeout: 10000\n});\nconsole.log(token);\n// 请求拦截器\nservice.interceptors.request.use(config => {\n  // 在请求头中添加授权信息\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  // 请求错误处理\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","service","create","baseURL","timeout","console","log","token","interceptors","request","use","config","headers","error","Promise","reject"],"sources":["/Users/yezery/OASIS/OASIS_Interface/src/utils/axiosRequest.js"],"sourcesContent":["import axios from 'axios'\n// import store from '@/store'\n// const IP = store.state.IP\nconst service = axios.create({\n    // baseURL: `http://${IP}:8082`,\n    baseURL: 'http://10.22.60.119:8082',\n    timeout: 10000,\n})\n\n\nconsole.log(token);\n// 请求拦截器\nservice.interceptors.request.use(\n    config => {\n      // 在请求头中添加授权信息\n      if (token) {\n        config.headers['Authorization'] = `Bearer ${token}`;\n      }\n      return config;\n    },\n    error => {\n      // 请求错误处理\n      return Promise.reject(error);\n    }\n);\n  \nexport default service\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA;AACA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EACzB;EACAC,OAAO,EAAE,0BAA0B;EACnCC,OAAO,EAAE;AACb,CAAC,CAAC;AAGFC,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;AAClB;AACAN,OAAO,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5BC,MAAM,IAAI;EACR;EACA,IAAIJ,KAAK,EAAE;IACTI,MAAM,CAACC,OAAO,CAAC,eAAe,CAAC,GAAI,UAASL,KAAM,EAAC;EACrD;EACA,OAAOI,MAAM;AACf,CAAC,EACDE,KAAK,IAAI;EACP;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACJ,CAAC;AAED,eAAeZ,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}