{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/* global crypto */\n\nimport { from } from './hasher.js';\n\n/**\n * @param {AlgorithmIdentifier} name\n */\nconst sha = name =>\n/**\n * @param {Uint8Array} data\n */\nasync data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n});","map":{"version":3,"names":["from","sha","name","data","Uint8Array","crypto","subtle","digest","sha256","code","encode","sha512"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/multiformats@12.1.1/node_modules/multiformats/src/hashes/sha2-browser.js"],"sourcesContent":["/* global crypto */\n\nimport { from } from './hasher.js'\n\n/**\n * @param {AlgorithmIdentifier} name\n */\nconst sha = name =>\n  /**\n   * @param {Uint8Array} data\n   */\n  async data => new Uint8Array(await crypto.subtle.digest(name, data))\n\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 0x12,\n  encode: sha('SHA-256')\n})\n\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 0x13,\n  encode: sha('SHA-512')\n})\n"],"mappings":";;;AAAA;;AAEA,SAASA,IAAI,QAAQ,aAAa;;AAElC;AACA;AACA;AACA,MAAMC,GAAG,GAAGC,IAAI;AACd;AACF;AACA;AACE,MAAMC,IAAI,IAAI,IAAIC,UAAU,CAAC,MAAMC,MAAM,CAACC,MAAM,CAACC,MAAM,CAACL,IAAI,EAAEC,IAAI,CAAC,CAAC;AAEtE,OAAO,MAAMK,MAAM,GAAGR,IAAI,CAAC;EACzBE,IAAI,EAAE,UAAU;EAChBO,IAAI,EAAE,IAAI;EACVC,MAAM,EAAET,GAAG,CAAC,SAAS;AACvB,CAAC,CAAC;AAEF,OAAO,MAAMU,MAAM,GAAGX,IAAI,CAAC;EACzBE,IAAI,EAAE,UAAU;EAChBO,IAAI,EAAE,IAAI;EACVC,MAAM,EAAET,GAAG,CAAC,SAAS;AACvB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}