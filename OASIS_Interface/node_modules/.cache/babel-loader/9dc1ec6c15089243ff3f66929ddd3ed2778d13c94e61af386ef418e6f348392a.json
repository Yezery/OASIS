{"ast":null,"code":"import { IpnsPubsubDatastore } from '../../../ipns/routing/pubsub-datastore.js';\nimport errcode from 'err-code';\n\n/**\n * @typedef {import('../../../types').ExperimentalOptions} ExperimentalOptions\n * @property {boolean} [ipnsPubsub] - Enable pub-sub on IPNS. (Default: `false`)\n */\n\n/**\n * Get pubsub from IPNS routing\n *\n * @param {import('../../ipns').IPNSAPI} ipns\n * @param {ExperimentalOptions} [options]\n */\nexport function getPubsubRouting(ipns, options) {\n  if (!ipns || !(options && options.ipnsPubsub)) {\n    throw errcode(new Error('IPNS pubsub subsystem is not enabled'), 'ERR_IPNS_PUBSUB_NOT_ENABLED');\n  }\n\n  // Only one store and it is pubsub\n  if (ipns.routing instanceof IpnsPubsubDatastore) {\n    return ipns.routing;\n  }\n\n  // Find in tiered\n  const pubsub = (ipns.routing.stores || []).find(s => s instanceof IpnsPubsubDatastore);\n  if (!pubsub) {\n    throw errcode(new Error('IPNS pubsub datastore not found'), 'ERR_PUBSUB_DATASTORE_NOT_FOUND');\n  }\n  return pubsub;\n}","map":{"version":3,"names":["IpnsPubsubDatastore","errcode","getPubsubRouting","ipns","options","ipnsPubsub","Error","routing","pubsub","stores","find","s"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-core@0.18.1/node_modules/ipfs-core/src/components/name/pubsub/utils.js"],"sourcesContent":["import { IpnsPubsubDatastore } from '../../../ipns/routing/pubsub-datastore.js'\nimport errcode from 'err-code'\n\n/**\n * @typedef {import('../../../types').ExperimentalOptions} ExperimentalOptions\n * @property {boolean} [ipnsPubsub] - Enable pub-sub on IPNS. (Default: `false`)\n */\n\n/**\n * Get pubsub from IPNS routing\n *\n * @param {import('../../ipns').IPNSAPI} ipns\n * @param {ExperimentalOptions} [options]\n */\nexport function getPubsubRouting (ipns, options) {\n  if (!ipns || !(options && options.ipnsPubsub)) {\n    throw errcode(new Error('IPNS pubsub subsystem is not enabled'), 'ERR_IPNS_PUBSUB_NOT_ENABLED')\n  }\n\n  // Only one store and it is pubsub\n  if (ipns.routing instanceof IpnsPubsubDatastore) {\n    return ipns.routing\n  }\n\n  // Find in tiered\n  const pubsub = (ipns.routing.stores || []).find(s => s instanceof IpnsPubsubDatastore)\n\n  if (!pubsub) {\n    throw errcode(new Error('IPNS pubsub datastore not found'), 'ERR_PUBSUB_DATASTORE_NOT_FOUND')\n  }\n\n  return pubsub\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,2CAA2C;AAC/E,OAAOC,OAAO,MAAM,UAAU;;AAE9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAAEC,IAAI,EAAEC,OAAO,EAAE;EAC/C,IAAI,CAACD,IAAI,IAAI,EAAEC,OAAO,IAAIA,OAAO,CAACC,UAAU,CAAC,EAAE;IAC7C,MAAMJ,OAAO,CAAC,IAAIK,KAAK,CAAC,sCAAsC,CAAC,EAAE,6BAA6B,CAAC;EACjG;;EAEA;EACA,IAAIH,IAAI,CAACI,OAAO,YAAYP,mBAAmB,EAAE;IAC/C,OAAOG,IAAI,CAACI,OAAO;EACrB;;EAEA;EACA,MAAMC,MAAM,GAAG,CAACL,IAAI,CAACI,OAAO,CAACE,MAAM,IAAI,EAAE,EAAEC,IAAI,CAACC,CAAC,IAAIA,CAAC,YAAYX,mBAAmB,CAAC;EAEtF,IAAI,CAACQ,MAAM,EAAE;IACX,MAAMP,OAAO,CAAC,IAAIK,KAAK,CAAC,iCAAiC,CAAC,EAAE,gCAAgC,CAAC;EAC/F;EAEA,OAAOE,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}