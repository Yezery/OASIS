{"ast":null,"code":"const RateLimiterRes = require(\"./RateLimiterRes\");\n\n/**\n * Bursty rate limiter exposes only msBeforeNext time and doesn't expose points from bursty limiter by default\n * @type {BurstyRateLimiter}\n */\nmodule.exports = class BurstyRateLimiter {\n  constructor(rateLimiter, burstLimiter) {\n    this._rateLimiter = rateLimiter;\n    this._burstLimiter = burstLimiter;\n  }\n\n  /**\n   * Merge rate limiter response objects. Responses can be null\n   *\n   * @param {RateLimiterRes} [rlRes] Rate limiter response\n   * @param {RateLimiterRes} [blRes] Bursty limiter response\n   */\n  _combineRes(rlRes, blRes) {\n    if (!rlRes) {\n      return null;\n    }\n    return new RateLimiterRes(rlRes.remainingPoints, Math.min(rlRes.msBeforeNext, blRes ? blRes.msBeforeNext : 0), rlRes.consumedPoints, rlRes.isFirstInDuration);\n  }\n\n  /**\n   * @param key\n   * @param pointsToConsume\n   * @param options\n   * @returns {Promise<any>}\n   */\n  consume(key, pointsToConsume = 1, options = {}) {\n    return this._rateLimiter.consume(key, pointsToConsume, options).catch(rlRej => {\n      if (rlRej instanceof RateLimiterRes) {\n        return this._burstLimiter.consume(key, pointsToConsume, options).then(blRes => {\n          return Promise.resolve(this._combineRes(rlRej, blRes));\n        }).catch(blRej => {\n          if (blRej instanceof RateLimiterRes) {\n            return Promise.reject(this._combineRes(rlRej, blRej));\n          } else {\n            return Promise.reject(blRej);\n          }\n        });\n      } else {\n        return Promise.reject(rlRej);\n      }\n    });\n  }\n\n  /**\n   * It doesn't expose available points from burstLimiter\n   *\n   * @param key\n   * @returns {Promise<RateLimiterRes>}\n   */\n  get(key) {\n    return Promise.all([this._rateLimiter.get(key), this._burstLimiter.get(key)]).then(([rlRes, blRes]) => {\n      return this._combineRes(rlRes, blRes);\n    });\n  }\n  get points() {\n    return this._rateLimiter.points;\n  }\n};","map":{"version":3,"names":["RateLimiterRes","require","module","exports","BurstyRateLimiter","constructor","rateLimiter","burstLimiter","_rateLimiter","_burstLimiter","_combineRes","rlRes","blRes","remainingPoints","Math","min","msBeforeNext","consumedPoints","isFirstInDuration","consume","key","pointsToConsume","options","catch","rlRej","then","Promise","resolve","blRej","reject","get","all","points"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/rate-limiter-flexible@2.4.2/node_modules/rate-limiter-flexible/lib/BurstyRateLimiter.js"],"sourcesContent":["const RateLimiterRes = require(\"./RateLimiterRes\");\n\n/**\n * Bursty rate limiter exposes only msBeforeNext time and doesn't expose points from bursty limiter by default\n * @type {BurstyRateLimiter}\n */\nmodule.exports = class BurstyRateLimiter {\n  constructor(rateLimiter, burstLimiter) {\n    this._rateLimiter = rateLimiter;\n    this._burstLimiter = burstLimiter\n  }\n\n  /**\n   * Merge rate limiter response objects. Responses can be null\n   *\n   * @param {RateLimiterRes} [rlRes] Rate limiter response\n   * @param {RateLimiterRes} [blRes] Bursty limiter response\n   */\n  _combineRes(rlRes, blRes) {\n    if (!rlRes) {\n      return null\n    }\n\n    return new RateLimiterRes(\n      rlRes.remainingPoints,\n      Math.min(rlRes.msBeforeNext, blRes ? blRes.msBeforeNext : 0),\n      rlRes.consumedPoints,\n      rlRes.isFirstInDuration\n    )\n  }\n\n  /**\n   * @param key\n   * @param pointsToConsume\n   * @param options\n   * @returns {Promise<any>}\n   */\n  consume(key, pointsToConsume = 1, options = {}) {\n    return this._rateLimiter.consume(key, pointsToConsume, options)\n      .catch((rlRej) => {\n        if (rlRej instanceof RateLimiterRes) {\n          return this._burstLimiter.consume(key, pointsToConsume, options)\n            .then((blRes) => {\n              return Promise.resolve(this._combineRes(rlRej, blRes))\n            })\n            .catch((blRej) => {\n                if (blRej instanceof RateLimiterRes) {\n                  return Promise.reject(this._combineRes(rlRej, blRej))\n                } else {\n                  return Promise.reject(blRej)\n                }\n              }\n            )\n        } else {\n          return Promise.reject(rlRej)\n        }\n      })\n  }\n\n  /**\n   * It doesn't expose available points from burstLimiter\n   *\n   * @param key\n   * @returns {Promise<RateLimiterRes>}\n   */\n  get(key) {\n    return Promise.all([\n      this._rateLimiter.get(key),\n      this._burstLimiter.get(key),\n    ]).then(([rlRes, blRes]) => {\n      return this._combineRes(rlRes, blRes);\n    });\n  }\n\n  get points() {\n    return this._rateLimiter.points;\n  }\n};\n"],"mappings":"AAAA,MAAMA,cAAc,GAAGC,OAAO,CAAC,kBAAkB,CAAC;;AAElD;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,MAAMC,iBAAiB,CAAC;EACvCC,WAAWA,CAACC,WAAW,EAAEC,YAAY,EAAE;IACrC,IAAI,CAACC,YAAY,GAAGF,WAAW;IAC/B,IAAI,CAACG,aAAa,GAAGF,YAAY;EACnC;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEG,WAAWA,CAACC,KAAK,EAAEC,KAAK,EAAE;IACxB,IAAI,CAACD,KAAK,EAAE;MACV,OAAO,IAAI;IACb;IAEA,OAAO,IAAIX,cAAc,CACvBW,KAAK,CAACE,eAAe,EACrBC,IAAI,CAACC,GAAG,CAACJ,KAAK,CAACK,YAAY,EAAEJ,KAAK,GAAGA,KAAK,CAACI,YAAY,GAAG,CAAC,CAAC,EAC5DL,KAAK,CAACM,cAAc,EACpBN,KAAK,CAACO,iBACR,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,OAAOA,CAACC,GAAG,EAAEC,eAAe,GAAG,CAAC,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IAC9C,OAAO,IAAI,CAACd,YAAY,CAACW,OAAO,CAACC,GAAG,EAAEC,eAAe,EAAEC,OAAO,CAAC,CAC5DC,KAAK,CAAEC,KAAK,IAAK;MAChB,IAAIA,KAAK,YAAYxB,cAAc,EAAE;QACnC,OAAO,IAAI,CAACS,aAAa,CAACU,OAAO,CAACC,GAAG,EAAEC,eAAe,EAAEC,OAAO,CAAC,CAC7DG,IAAI,CAAEb,KAAK,IAAK;UACf,OAAOc,OAAO,CAACC,OAAO,CAAC,IAAI,CAACjB,WAAW,CAACc,KAAK,EAAEZ,KAAK,CAAC,CAAC;QACxD,CAAC,CAAC,CACDW,KAAK,CAAEK,KAAK,IAAK;UACd,IAAIA,KAAK,YAAY5B,cAAc,EAAE;YACnC,OAAO0B,OAAO,CAACG,MAAM,CAAC,IAAI,CAACnB,WAAW,CAACc,KAAK,EAAEI,KAAK,CAAC,CAAC;UACvD,CAAC,MAAM;YACL,OAAOF,OAAO,CAACG,MAAM,CAACD,KAAK,CAAC;UAC9B;QACF,CACF,CAAC;MACL,CAAC,MAAM;QACL,OAAOF,OAAO,CAACG,MAAM,CAACL,KAAK,CAAC;MAC9B;IACF,CAAC,CAAC;EACN;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEM,GAAGA,CAACV,GAAG,EAAE;IACP,OAAOM,OAAO,CAACK,GAAG,CAAC,CACjB,IAAI,CAACvB,YAAY,CAACsB,GAAG,CAACV,GAAG,CAAC,EAC1B,IAAI,CAACX,aAAa,CAACqB,GAAG,CAACV,GAAG,CAAC,CAC5B,CAAC,CAACK,IAAI,CAAC,CAAC,CAACd,KAAK,EAAEC,KAAK,CAAC,KAAK;MAC1B,OAAO,IAAI,CAACF,WAAW,CAACC,KAAK,EAAEC,KAAK,CAAC;IACvC,CAAC,CAAC;EACJ;EAEA,IAAIoB,MAAMA,CAAA,EAAG;IACX,OAAO,IAAI,CAACxB,YAAY,CAACwB,MAAM;EACjC;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}