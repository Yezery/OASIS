{"ast":null,"code":"import { Key } from 'interface-datastore';\nimport sortKeys from 'sort-keys';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nconst specKey = new Key('datastore_spec');\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nexport function spec(store) {\n  return {\n    /**\n     * Check if a datastore spec file exists.\n     *\n     */\n    exists() {\n      return store.has(specKey);\n    },\n    /**\n     * Get the current datastore spec.\n     *\n     * @returns {Promise<Uint8Array>}\n     */\n    async get() {\n      const buf = await store.get(specKey);\n      return JSON.parse(uint8ArrayToString(buf));\n    },\n    /**\n     * Set the datastore spec of the repo, writing it to the underlying store.\n     * TODO unclear on what the type should be or if it's required\n     *\n     * @param {any} spec\n     * @returns {Promise<void>}\n     */\n    async set(spec) {\n      return store.put(specKey, uint8ArrayFromString(JSON.stringify(sortKeys(spec, {\n        deep: true\n      }))));\n    }\n  };\n}","map":{"version":3,"names":["Key","sortKeys","toString","uint8ArrayToString","fromString","uint8ArrayFromString","specKey","spec","store","exists","has","get","buf","JSON","parse","set","put","stringify","deep"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-repo@17.0.0/node_modules/ipfs-repo/src/spec.js"],"sourcesContent":["\nimport { Key } from 'interface-datastore'\nimport sortKeys from 'sort-keys'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\nconst specKey = new Key('datastore_spec')\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nexport function spec (store) {\n  return {\n    /**\n     * Check if a datastore spec file exists.\n     *\n     */\n    exists () {\n      return store.has(specKey)\n    },\n    /**\n     * Get the current datastore spec.\n     *\n     * @returns {Promise<Uint8Array>}\n     */\n    async get () {\n      const buf = await store.get(specKey)\n      return JSON.parse(uint8ArrayToString(buf))\n    },\n    /**\n     * Set the datastore spec of the repo, writing it to the underlying store.\n     * TODO unclear on what the type should be or if it's required\n     *\n     * @param {any} spec\n     * @returns {Promise<void>}\n     */\n    async set (spec) {\n      return store.put(specKey, uint8ArrayFromString(JSON.stringify(sortKeys(spec, { deep: true }))))\n    }\n  }\n}\n"],"mappings":"AACA,SAASA,GAAG,QAAQ,qBAAqB;AACzC,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,QAAQ,IAAIC,kBAAkB,QAAQ,uBAAuB;AACtE,SAASC,UAAU,IAAIC,oBAAoB,QAAQ,yBAAyB;AAE5E,MAAMC,OAAO,GAAG,IAAIN,GAAG,CAAC,gBAAgB,CAAC;;AAEzC;AACA;AACA;AACA;AACA,OAAO,SAASO,IAAIA,CAAEC,KAAK,EAAE;EAC3B,OAAO;IACL;AACJ;AACA;AACA;IACIC,MAAMA,CAAA,EAAI;MACR,OAAOD,KAAK,CAACE,GAAG,CAACJ,OAAO,CAAC;IAC3B,CAAC;IACD;AACJ;AACA;AACA;AACA;IACI,MAAMK,GAAGA,CAAA,EAAI;MACX,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACG,GAAG,CAACL,OAAO,CAAC;MACpC,OAAOO,IAAI,CAACC,KAAK,CAACX,kBAAkB,CAACS,GAAG,CAAC,CAAC;IAC5C,CAAC;IACD;AACJ;AACA;AACA;AACA;AACA;AACA;IACI,MAAMG,GAAGA,CAAER,IAAI,EAAE;MACf,OAAOC,KAAK,CAACQ,GAAG,CAACV,OAAO,EAAED,oBAAoB,CAACQ,IAAI,CAACI,SAAS,CAAChB,QAAQ,CAACM,IAAI,EAAE;QAAEW,IAAI,EAAE;MAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACjG;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}