{"ast":null,"code":"import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0x0;\nconst name = 'identity';\n\n/** @type {(input:Uint8Array) => Uint8Array} */\nconst encode = coerce;\n\n/**\n * @param {Uint8Array} input\n * @returns {Digest.Digest<typeof code, number>}\n */\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","map":{"version":3,"names":["coerce","Digest","code","name","encode","digest","input","create","identity"],"sources":["/Users/yezery/OASIS/OASIS_Interface/node_modules/.store/multiformats@11.0.2/node_modules/multiformats/src/hashes/identity.js"],"sourcesContent":["import { coerce } from '../bytes.js'\nimport * as Digest from './digest.js'\n\nconst code = 0x0\nconst name = 'identity'\n\n/** @type {(input:Uint8Array) => Uint8Array} */\nconst encode = coerce\n\n/**\n * @param {Uint8Array} input\n * @returns {Digest.Digest<typeof code, number>}\n */\nconst digest = (input) => Digest.create(code, encode(input))\n\nexport const identity = { code, name, encode, digest }\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,aAAa;AACpC,OAAO,KAAKC,MAAM,MAAM,aAAa;AAErC,MAAMC,IAAI,GAAG,GAAG;AAChB,MAAMC,IAAI,GAAG,UAAU;;AAEvB;AACA,MAAMC,MAAM,GAAGJ,MAAM;;AAErB;AACA;AACA;AACA;AACA,MAAMK,MAAM,GAAIC,KAAK,IAAKL,MAAM,CAACM,MAAM,CAACL,IAAI,EAAEE,MAAM,CAACE,KAAK,CAAC,CAAC;AAE5D,OAAO,MAAME,QAAQ,GAAG;EAAEN,IAAI;EAAEC,IAAI;EAAEC,MAAM;EAAEC;AAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}