{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { CodeError } from '@libp2p/interfaces/errors';\nimport { verifyRecord } from '@libp2p/record/validators';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { Message, MESSAGE_TYPE } from '../message/index.js';\nimport * as utils from '../utils.js';\nimport { queryErrorEvent, finalPeerEvent, valueEvent } from '../query/events.js';\nimport { PeerDistanceList } from '../peer-list/peer-distance-list.js';\nimport { Libp2pRecord } from '@libp2p/record';\nimport { logger } from '@libp2p/logger';\nimport { keys } from '@libp2p/crypto';\nimport { peerIdFromKeys } from '@libp2p/peer-id';\nexport class PeerRouting {\n  constructor(components, init) {\n    const {\n      routingTable,\n      network,\n      validators,\n      queryManager,\n      lan\n    } = init;\n    this.components = components;\n    this.routingTable = routingTable;\n    this.network = network;\n    this.validators = validators;\n    this.queryManager = queryManager;\n    this.log = logger(`libp2p:kad-dht:${lan ? 'lan' : 'wan'}:peer-routing`);\n  }\n  /**\n   * Look if we are connected to a peer with the given id.\n   * Returns its id and addresses, if found, otherwise `undefined`.\n   */\n  async findPeerLocal(peer) {\n    let peerData;\n    const p = await this.routingTable.find(peer);\n    if (p != null) {\n      this.log('findPeerLocal found %p in routing table', peer);\n      try {\n        peerData = await this.components.peerStore.get(p);\n      } catch (err) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err;\n        }\n      }\n    }\n    if (peerData == null) {\n      try {\n        peerData = await this.components.peerStore.get(peer);\n      } catch (err) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err;\n        }\n      }\n    }\n    if (peerData != null) {\n      this.log('findPeerLocal found %p in peer store', peer);\n      return {\n        id: peerData.id,\n        multiaddrs: peerData.addresses.map(address => address.multiaddr),\n        protocols: []\n      };\n    }\n    return undefined;\n  }\n  /**\n   * Get a value via rpc call for the given parameters\n   */\n  async *_getValueSingle(peer, key, options = {}) {\n    const msg = new Message(MESSAGE_TYPE.GET_VALUE, key, 0);\n    yield* this.network.sendRequest(peer, msg, options);\n  }\n  /**\n   * Get the public key directly from a node\n   */\n  async *getPublicKeyFromNode(peer, options = {}) {\n    const pkKey = utils.keyForPublicKey(peer);\n    for await (const event of this._getValueSingle(peer, pkKey, options)) {\n      yield event;\n      if (event.name === 'PEER_RESPONSE' && event.record != null) {\n        const recPeer = await peerIdFromKeys(keys.marshalPublicKey({\n          bytes: event.record.value\n        }));\n        // compare hashes of the pub key\n        if (!recPeer.equals(peer)) {\n          throw new CodeError('public key does not match id', 'ERR_PUBLIC_KEY_DOES_NOT_MATCH_ID');\n        }\n        if (recPeer.publicKey == null) {\n          throw new CodeError('public key missing', 'ERR_PUBLIC_KEY_MISSING');\n        }\n        yield valueEvent({\n          from: peer,\n          value: recPeer.publicKey\n        });\n      }\n    }\n    throw new CodeError(`Node not responding with its public key: ${peer.toString()}`, 'ERR_INVALID_RECORD');\n  }\n  /**\n   * Search for a peer with the given ID\n   */\n  async *findPeer(id, options = {}) {\n    this.log('findPeer %p', id);\n    // Try to find locally\n    const pi = await this.findPeerLocal(id);\n    // already got it\n    if (pi != null) {\n      this.log('found local');\n      yield finalPeerEvent({\n        from: this.components.peerId,\n        peer: pi\n      });\n      return;\n    }\n    const key = await utils.convertPeerId(id);\n    const peers = this.routingTable.closestPeers(key);\n    // sanity check\n    const match = peers.find(p => p.equals(id));\n    if (match != null) {\n      try {\n        const peer = await this.components.peerStore.get(id);\n        this.log('found in peerStore');\n        yield finalPeerEvent({\n          from: this.components.peerId,\n          peer: {\n            id: peer.id,\n            multiaddrs: peer.addresses.map(address => address.multiaddr),\n            protocols: []\n          }\n        });\n        return;\n      } catch (err) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err;\n        }\n      }\n    }\n    const self = this; // eslint-disable-line @typescript-eslint/no-this-alias\n    const findPeerQuery = async function* ({\n      peer,\n      signal\n    }) {\n      const request = new Message(MESSAGE_TYPE.FIND_NODE, id.toBytes(), 0);\n      for await (const event of self.network.sendRequest(peer, request, {\n        signal\n      })) {\n        yield event;\n        if (event.name === 'PEER_RESPONSE') {\n          const match = event.closer.find(p => p.id.equals(id));\n          // found the peer\n          if (match != null) {\n            yield finalPeerEvent({\n              from: event.from,\n              peer: match\n            });\n          }\n        }\n      }\n    };\n    let foundPeer = false;\n    for await (const event of this.queryManager.run(id.toBytes(), peers, findPeerQuery, options)) {\n      if (event.name === 'FINAL_PEER') {\n        foundPeer = true;\n      }\n      yield event;\n    }\n    if (!foundPeer) {\n      yield queryErrorEvent({\n        from: this.components.peerId,\n        error: new CodeError('Not found', 'ERR_NOT_FOUND')\n      });\n    }\n  }\n  /**\n   * Kademlia 'node lookup' operation on a key, which could be a the\n   * bytes from a multihash or a peer ID\n   */\n  async *getClosestPeers(key, options = {}) {\n    this.log('getClosestPeers to %b', key);\n    const id = await utils.convertBuffer(key);\n    const tablePeers = this.routingTable.closestPeers(id);\n    const self = this; // eslint-disable-line @typescript-eslint/no-this-alias\n    const peers = new PeerDistanceList(id, this.routingTable.kBucketSize);\n    await Promise.all(tablePeers.map(async peer => {\n      await peers.add(peer);\n    }));\n    const getCloserPeersQuery = async function* ({\n      peer,\n      signal\n    }) {\n      self.log('closerPeersSingle %s from %p', uint8ArrayToString(key, 'base32'), peer);\n      const request = new Message(MESSAGE_TYPE.FIND_NODE, key, 0);\n      yield* self.network.sendRequest(peer, request, {\n        signal\n      });\n    };\n    for await (const event of this.queryManager.run(key, tablePeers, getCloserPeersQuery, options)) {\n      yield event;\n      if (event.name === 'PEER_RESPONSE') {\n        await Promise.all(event.closer.map(async peerData => {\n          await peers.add(peerData.id);\n        }));\n      }\n    }\n    this.log('found %d peers close to %b', peers.length, key);\n    for (const peer of peers.peers) {\n      yield finalPeerEvent({\n        from: this.components.peerId,\n        peer: {\n          id: peer,\n          multiaddrs: ((await this.components.peerStore.addressBook.get(peer)) ?? []).map(addr => addr.multiaddr),\n          protocols: []\n        }\n      });\n    }\n  }\n  /**\n   * Query a particular peer for the value for the given key.\n   * It will either return the value or a list of closer peers.\n   *\n   * Note: The peerStore is updated with new addresses found for the given peer.\n   */\n  async *getValueOrPeers(peer, key, options = {}) {\n    for await (const event of this._getValueSingle(peer, key, options)) {\n      if (event.name === 'PEER_RESPONSE') {\n        if (event.record != null) {\n          // We have a record\n          try {\n            await this._verifyRecordOnline(event.record);\n          } catch (err) {\n            const errMsg = 'invalid record received, discarded';\n            this.log(errMsg);\n            yield queryErrorEvent({\n              from: event.from,\n              error: new CodeError(errMsg, 'ERR_INVALID_RECORD')\n            });\n            continue;\n          }\n        }\n      }\n      yield event;\n    }\n  }\n  /**\n   * Verify a record, fetching missing public keys from the network.\n   * Throws an error if the record is invalid.\n   */\n  async _verifyRecordOnline(record) {\n    if (record.timeReceived == null) {\n      throw new CodeError('invalid record received', 'ERR_INVALID_RECORD');\n    }\n    await verifyRecord(this.validators, new Libp2pRecord(record.key, record.value, record.timeReceived));\n  }\n  /**\n   * Get the nearest peers to the given query, but if closer\n   * than self\n   */\n  async getCloserPeersOffline(key, closerThan) {\n    const id = await utils.convertBuffer(key);\n    const ids = this.routingTable.closestPeers(id);\n    const output = [];\n    for (const peerId of ids) {\n      if (peerId.equals(closerThan)) {\n        continue;\n      }\n      try {\n        const addresses = await this.components.peerStore.addressBook.get(peerId);\n        const protocols = await this.components.peerStore.protoBook.get(peerId);\n        output.push({\n          id: peerId,\n          multiaddrs: addresses.map(address => address.multiaddr),\n          protocols\n        });\n      } catch (err) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err;\n        }\n      }\n    }\n    if (output.length > 0) {\n      this.log('getCloserPeersOffline found %d peer(s) closer to %b than %p', output.length, key, closerThan);\n    } else {\n      this.log('getCloserPeersOffline could not find peer closer to %b than %p', key, closerThan);\n    }\n    return output;\n  }\n}","map":{"version":3,"names":["CodeError","verifyRecord","toString","uint8ArrayToString","Message","MESSAGE_TYPE","utils","queryErrorEvent","finalPeerEvent","valueEvent","PeerDistanceList","Libp2pRecord","logger","keys","peerIdFromKeys","PeerRouting","constructor","components","init","routingTable","network","validators","queryManager","lan","log","findPeerLocal","peer","peerData","p","find","peerStore","get","err","code","id","multiaddrs","addresses","map","address","multiaddr","protocols","undefined","_getValueSingle","key","options","msg","GET_VALUE","sendRequest","getPublicKeyFromNode","pkKey","keyForPublicKey","event","name","record","recPeer","marshalPublicKey","bytes","value","equals","publicKey","from","findPeer","pi","peerId","convertPeerId","peers","closestPeers","match","self","findPeerQuery","signal","request","FIND_NODE","toBytes","closer","foundPeer","run","error","getClosestPeers","convertBuffer","tablePeers","kBucketSize","Promise","all","add","getCloserPeersQuery","length","addressBook","addr","getValueOrPeers","_verifyRecordOnline","errMsg","timeReceived","getCloserPeersOffline","closerThan","ids","output","protoBook","push"],"sources":["../../../src/peer-routing/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}