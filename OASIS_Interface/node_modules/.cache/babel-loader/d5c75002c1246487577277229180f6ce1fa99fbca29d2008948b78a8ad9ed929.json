{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { EventDispatcher, MOUSE, Quaternion, Spherical, TOUCH, Vector2, Vector3, Plane, Ray, MathUtils } from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = {\n  type: 'change'\n};\nconst _startEvent = {\n  type: 'start'\n};\nconst _endEvent = {\n  type: 'end'\n};\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos(70 * MathUtils.DEG2RAD);\nclass OrbitControls extends EventDispatcher {\n  constructor(object, domElement) {\n    super();\n    this.object = object;\n    this.domElement = domElement;\n    this.domElement.style.touchAction = 'none'; // disable touch scroll\n\n    // Set to false to disable this control\n    this.enabled = true;\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new Vector3();\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0;\n    this.maxZoom = Infinity;\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0; // radians\n    this.maxPolarAngle = Math.PI; // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n    this.minAzimuthAngle = -Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false;\n    this.dampingFactor = 0.05;\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n\n    // Set to false to disable rotating\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0;\n\n    // Set to false to disable panning\n    this.enablePan = true;\n    this.panSpeed = 1.0;\n    this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n    this.zoomToCursor = false;\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n    // The four arrow keys\n    this.keys = {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    };\n\n    // Mouse buttons\n    this.mouseButtons = {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    };\n\n    // Touch fingers\n    this.touches = {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    };\n\n    // for reset\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n\n    // the target DOM element for key events\n    this._domElementKeyEvents = null;\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n    this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n    this.getDistance = function () {\n      return this.object.position.distanceTo(this.target);\n    };\n    this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n    this.stopListenToKeyEvents = function () {\n      this._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = null;\n    };\n    this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n    this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(_changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    };\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = function () {\n      const offset = new Vector3();\n\n      // so camera.up is the orbit axis\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const lastTargetPosition = new Vector3();\n      const twoPI = 2 * Math.PI;\n      return function update(deltaTime = null) {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n\n        // rotate offset to \"y-axis-is-up\" space\n        offset.applyQuaternion(quat);\n\n        // angle from z-axis around y-axis\n        spherical.setFromVector3(offset);\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle(deltaTime));\n        }\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        }\n\n        // restrict theta to be between desired limits\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        }\n\n        // restrict phi to be between desired limits\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n\n        // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        // adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n        // we adjust zoom later in these cases\n        if (scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera) {\n          spherical.radius = clampDistance(spherical.radius);\n        } else {\n          spherical.radius = clampDistance(spherical.radius * scale);\n        }\n        offset.setFromSpherical(spherical);\n\n        // rotate offset back to \"camera-up-vector-is-up\" space\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        // adjust camera position\n        let zoomChanged = false;\n        if (scope.zoomToCursor && performCursorZoom) {\n          let newRadius = null;\n          if (scope.object.isPerspectiveCamera) {\n            // move the camera down the pointer ray\n            // this method avoids floating point error\n            const prevRadius = offset.length();\n            newRadius = clampDistance(prevRadius * scale);\n            const radiusDelta = prevRadius - newRadius;\n            scope.object.position.addScaledVector(dollyDirection, radiusDelta);\n            scope.object.updateMatrixWorld();\n          } else if (scope.object.isOrthographicCamera) {\n            // adjust the ortho camera position based on zoom changes\n            const mouseBefore = new Vector3(mouse.x, mouse.y, 0);\n            mouseBefore.unproject(scope.object);\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale));\n            scope.object.updateProjectionMatrix();\n            zoomChanged = true;\n            const mouseAfter = new Vector3(mouse.x, mouse.y, 0);\n            mouseAfter.unproject(scope.object);\n            scope.object.position.sub(mouseAfter).add(mouseBefore);\n            scope.object.updateMatrixWorld();\n            newRadius = offset.length();\n          } else {\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.');\n            scope.zoomToCursor = false;\n          }\n\n          // handle the placement of the target\n          if (newRadius !== null) {\n            if (this.screenSpacePanning) {\n              // position the orbit target in front of the new camera position\n              scope.target.set(0, 0, -1).transformDirection(scope.object.matrix).multiplyScalar(newRadius).add(scope.object.position);\n            } else {\n              // get the ray and translation plane to compute target\n              _ray.origin.copy(scope.object.position);\n              _ray.direction.set(0, 0, -1).transformDirection(scope.object.matrix);\n\n              // if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n              // extremely large values\n              if (Math.abs(scope.object.up.dot(_ray.direction)) < TILT_LIMIT) {\n                object.lookAt(scope.target);\n              } else {\n                _plane.setFromNormalAndCoplanarPoint(scope.object.up, scope.target);\n                _ray.intersectPlane(_plane, scope.target);\n              }\n            }\n          }\n        } else if (scope.object.isOrthographicCamera) {\n          scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / scale));\n          scope.object.updateProjectionMatrix();\n          zoomChanged = true;\n        }\n        scale = 1;\n        performCursorZoom = false;\n\n        // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS || lastTargetPosition.distanceToSquared(scope.target) > 0) {\n          scope.dispatchEvent(_changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          lastTargetPosition.copy(scope.target);\n          zoomChanged = false;\n          return true;\n        }\n        return false;\n      };\n    }();\n    this.dispose = function () {\n      scope.domElement.removeEventListener('contextmenu', onContextMenu);\n      scope.domElement.removeEventListener('pointerdown', onPointerDown);\n      scope.domElement.removeEventListener('pointercancel', onPointerUp);\n      scope.domElement.removeEventListener('wheel', onMouseWheel);\n      scope.domElement.removeEventListener('pointermove', onPointerMove);\n      scope.domElement.removeEventListener('pointerup', onPointerUp);\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n        scope._domElementKeyEvents = null;\n      }\n\n      //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    };\n\n    //\n    // internals\n    //\n\n    const scope = this;\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 0.000001;\n\n    // current position in spherical coordinates\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    const dollyDirection = new Vector3();\n    const mouse = new Vector2();\n    let performCursorZoom = false;\n    const pointers = [];\n    const pointerPositions = {};\n    function getAutoRotationAngle(deltaTime) {\n      if (deltaTime !== null) {\n        return 2 * Math.PI / 60 * scope.autoRotateSpeed * deltaTime;\n      } else {\n        return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n      }\n    }\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n    const panLeft = function () {\n      const v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }();\n    const panUp = function () {\n      const v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }();\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    const pan = function () {\n      const offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement;\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length();\n\n          // half of the fov is center to top of screen\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0);\n\n          // we use only clientHeight here so aspect ratio does not distort speed\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    }();\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera) {\n        scale /= dollyScale;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera) {\n        scale *= dollyScale;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n    function updateMouseParameters(event) {\n      if (!scope.zoomToCursor) {\n        return;\n      }\n      performCursorZoom = true;\n      const rect = scope.domElement.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      const w = rect.width;\n      const h = rect.height;\n      mouse.x = x / w * 2 - 1;\n      mouse.y = -(y / h) * 2 + 1;\n      dollyDirection.set(mouse.x, mouse.y, 1).unproject(scope.object).sub(scope.object.position).normalize();\n    }\n    function clampDistance(dist) {\n      return Math.max(scope.minDistance, Math.min(scope.maxDistance, dist));\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n      updateMouseParameters(event);\n      dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n    function handleMouseWheel(event) {\n      updateMouseParameters(event);\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n      scope.update();\n    }\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n      switch (event.code) {\n        case scope.keys.UP:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            rotateUp(2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight);\n          } else {\n            pan(0, scope.keyPanSpeed);\n          }\n          needsUpdate = true;\n          break;\n        case scope.keys.BOTTOM:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            rotateUp(-2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight);\n          } else {\n            pan(0, -scope.keyPanSpeed);\n          }\n          needsUpdate = true;\n          break;\n        case scope.keys.LEFT:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            rotateLeft(2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight);\n          } else {\n            pan(scope.keyPanSpeed, 0);\n          }\n          needsUpdate = true;\n          break;\n        case scope.keys.RIGHT:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            rotateLeft(-2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight);\n          } else {\n            pan(-scope.keyPanSpeed, 0);\n          }\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        const x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        const y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n    function handleTouchStartDolly() {\n      const dx = pointers[0].pageX - pointers[1].pageX;\n      const dy = pointers[0].pageY - pointers[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n    }\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        const position = getSecondPointerPosition(event);\n        const x = 0.5 * (event.pageX + position.x);\n        const y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n    function handleTouchMoveDolly(event) {\n      const position = getSecondPointerPosition(event);\n      const dx = event.pageX - position.x;\n      const dy = event.pageY - position.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId);\n        scope.domElement.addEventListener('pointermove', onPointerMove);\n        scope.domElement.addEventListener('pointerup', onPointerUp);\n      }\n\n      //\n\n      addPointer(event);\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n    function onPointerUp(event) {\n      removePointer(event);\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId);\n        scope.domElement.removeEventListener('pointermove', onPointerMove);\n        scope.domElement.removeEventListener('pointerup', onPointerUp);\n      }\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n    function onMouseDown(event) {\n      let mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n          break;\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n    function onMouseMove(event) {\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE) return;\n      event.preventDefault();\n      scope.dispatchEvent(_startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(_endEvent);\n    }\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n      trackPointer(event);\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n    function onTouchMove(event) {\n      trackPointer(event);\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n        default:\n          state = STATE.NONE;\n      }\n    }\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n    function addPointer(event) {\n      pointers.push(event);\n    }\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n      for (let i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n    function trackPointer(event) {\n      let position = pointerPositions[event.pointerId];\n      if (position === undefined) {\n        position = new Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n      position.set(event.pageX, event.pageY);\n    }\n    function getSecondPointerPosition(event) {\n      const pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    }\n\n    //\n\n    scope.domElement.addEventListener('contextmenu', onContextMenu);\n    scope.domElement.addEventListener('pointerdown', onPointerDown);\n    scope.domElement.addEventListener('pointercancel', onPointerUp);\n    scope.domElement.addEventListener('wheel', onMouseWheel, {\n      passive: false\n    });\n\n    // force an update at start\n\n    this.update();\n  }\n}\nexport { OrbitControls };","map":{"version":3,"names":["EventDispatcher","MOUSE","Quaternion","Spherical","TOUCH","Vector2","Vector3","Plane","Ray","MathUtils","_changeEvent","type","_startEvent","_endEvent","_ray","_plane","TILT_LIMIT","Math","cos","DEG2RAD","OrbitControls","constructor","object","domElement","style","touchAction","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","stopListenToKeyEvents","removeEventListener","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","lastTargetPosition","twoPI","deltaTime","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","min","max","isFinite","makeSafe","addScaledVector","panOffset","add","performCursorZoom","isOrthographicCamera","radius","clampDistance","scale","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","newRadius","isPerspectiveCamera","prevRadius","length","radiusDelta","dollyDirection","updateMatrixWorld","mouseBefore","mouse","x","y","unproject","mouseAfter","console","warn","transformDirection","matrix","origin","direction","abs","dot","setFromNormalAndCoplanarPoint","intersectPlane","distanceToSquared","EPS","quaternion","dispose","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","targetDistance","tan","fov","clientHeight","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","updateMouseParameters","event","rect","getBoundingClientRect","clientX","clientY","w","width","h","height","normalize","dist","handleMouseDownRotate","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","needsUpdate","code","ctrlKey","metaKey","shiftKey","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","trackPointer","DOLLY_ROTATE","push","i","splice","undefined","pointer","passive"],"sources":["/Users/yezery/Documents/大学素材/毕业设计/OASIS/OASIS_Interface/node_modules/.store/three@0.157.0/node_modules/three/examples/jsm/controls/OrbitControls.js"],"sourcesContent":["import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\t\t\tconst lastTargetPosition = new Vector3();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update( deltaTime = null ) {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle( deltaTime ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t\t\t// we adjust zoom later in these cases\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius * scale );\n\n\t\t\t\t}\n\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust camera position\n\t\t\t\tlet zoomChanged = false;\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom ) {\n\n\t\t\t\t\tlet newRadius = null;\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t\t\t// this method avoids floating point error\n\t\t\t\t\t\tconst prevRadius = offset.length();\n\t\t\t\t\t\tnewRadius = clampDistance( prevRadius * scale );\n\n\t\t\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\t\t\tscope.object.position.addScaledVector( dollyDirection, radiusDelta );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\t\t\tconst mouseBefore = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseBefore.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t\t\tconst mouseAfter = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseAfter.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tnewRadius = offset.length();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\t\t\tscope.zoomToCursor = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle the placement of the target\n\t\t\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\t\t\tscope.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t\t\t.transformDirection( scope.object.matrix )\n\t\t\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t\t\t.add( scope.object.position );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t\t\t_ray.origin.copy( scope.object.position );\n\t\t\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( scope.object.matrix );\n\n\t\t\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t\t\t// extremely large values\n\t\t\t\t\t\t\tif ( Math.abs( scope.object.up.dot( _ray.direction ) ) < TILT_LIMIT ) {\n\n\t\t\t\t\t\t\t\tobject.lookAt( scope.target );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( scope.object.up, scope.target );\n\t\t\t\t\t\t\t\t_ray.intersectPlane( _plane, scope.target );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tperformCursorZoom = false;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > 0 ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\n\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst dollyDirection = new Vector3();\n\t\tconst mouse = new Vector2();\n\t\tlet performCursorZoom = false;\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle( deltaTime ) {\n\n\t\t\tif ( deltaTime !== null ) {\n\n\t\t\t\treturn ( 2 * Math.PI / 60 * scope.autoRotateSpeed ) * deltaTime;\n\n\t\t\t} else {\n\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateMouseParameters( event ) {\n\n\t\t\tif ( ! scope.zoomToCursor ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tperformCursorZoom = true;\n\n\t\t\tconst rect = scope.domElement.getBoundingClientRect();\n\t\t\tconst x = event.clientX - rect.left;\n\t\t\tconst y = event.clientY - rect.top;\n\t\t\tconst w = rect.width;\n\t\t\tconst h = rect.height;\n\n\t\t\tmouse.x = ( x / w ) * 2 - 1;\n\t\t\tmouse.y = - ( y / h ) * 2 + 1;\n\n\t\t\tdollyDirection.set( mouse.x, mouse.y, 1 ).unproject( scope.object ).sub( scope.object.position ).normalize();\n\n\t\t}\n\n\t\tfunction clampDistance( dist ) {\n\n\t\t\treturn Math.max( scope.minDistance, Math.min( scope.maxDistance, dist ) );\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tupdateMouseParameters( event );\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tupdateMouseParameters( event );\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}