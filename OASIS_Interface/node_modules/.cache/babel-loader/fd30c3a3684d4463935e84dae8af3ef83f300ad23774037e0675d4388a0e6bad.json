{"ast":null,"code":"import { webcrypto as crypto } from 'crypto'; // remove when having crypto global\nimport { createRequire } from 'module';\nimport mergeOptions from 'merge-options';\nimport { defaultSocketOptions } from './default-socket-options.js';\nconst req = createRequire(import.meta.url);\nconst {\n  name,\n  version\n} = req('../../package.json');\nconst DEFAULT_SSDP_SIGNATURE = `node.js/${process.version.substring(1)} UPnP/1.1 ${name}/${version}`;\nexport function defaultSsdpOptions(options) {\n  return mergeOptions(options ?? {}, {\n    usn: `uuid:${crypto.randomUUID()}`,\n    signature: DEFAULT_SSDP_SIGNATURE,\n    sockets: [{}].map(defaultSocketOptions),\n    retry: {\n      times: 5,\n      interval: 5000\n    }\n  });\n}","map":{"version":3,"names":["webcrypto","crypto","createRequire","mergeOptions","defaultSocketOptions","req","import","meta","url","name","version","DEFAULT_SSDP_SIGNATURE","process","substring","defaultSsdpOptions","options","usn","randomUUID","signature","sockets","map","retry","times","interval"],"sources":["../../src/default-ssdp-options.ts"],"sourcesContent":[null],"mappings":"AACA,SAASA,SAAS,IAAIC,MAAM,QAAQ,QAAQ,EAAC;AAC7C,SAASC,aAAa,QAAQ,QAAQ;AACtC,OAAOC,YAAY,MAAM,eAAe;AACxC,SAASC,oBAAoB,QAAQ,6BAA6B;AAGlE,MAAMC,GAAG,GAAGH,aAAa,CAACI,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC;AAC1C,MAAM;EAAEC,IAAI;EAAEC;AAAO,CAAE,GAAGL,GAAG,CAAC,oBAAoB,CAAC;AAEnD,MAAMM,sBAAsB,GAAG,WAAWC,OAAO,CAACF,OAAO,CAACG,SAAS,CAAC,CAAC,CAAC,aAAaJ,IAAI,IAAIC,OAAO,EAAE;AAEpG,OAAM,SAAUI,kBAAkBA,CAAEC,OAA8B;EAChE,OAAOZ,YAAY,CAACY,OAAO,IAAI,EAAE,EAAE;IACjCC,GAAG,EAAE,QAAQf,MAAM,CAACgB,UAAU,EAAE,EAAE;IAClCC,SAAS,EAAEP,sBAAsB;IACjCQ,OAAO,EAAE,CAAC,EAAE,CAAC,CAACC,GAAG,CAAChB,oBAAoB,CAAC;IACvCiB,KAAK,EAAE;MACLC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE;;GAEb,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}