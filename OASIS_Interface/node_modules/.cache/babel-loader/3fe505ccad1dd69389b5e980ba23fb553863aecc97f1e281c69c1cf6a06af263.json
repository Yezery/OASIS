{"ast":null,"code":"import { fetch as nativeFetch, Headers } from 'native-fetch';\n/**\n * Build fetch resource for request\n */\nexport function buildResource(serverResolver, hostname, recordType) {\n  return `${serverResolver}?name=${hostname}&type=${recordType}`;\n}\n/**\n * Use fetch to find the record\n */\nexport async function request(resource, signal) {\n  const req = await nativeFetch(resource, {\n    headers: new Headers({\n      accept: 'application/dns-json'\n    }),\n    signal\n  });\n  const res = await req.json();\n  return res;\n}\n/**\n * Creates cache key composed by recordType and hostname\n *\n * @param {string} hostname\n * @param {string} recordType\n */\nexport function getCacheKey(hostname, recordType) {\n  return `${recordType}_${hostname}`;\n}","map":{"version":3,"names":["fetch","nativeFetch","Headers","buildResource","serverResolver","hostname","recordType","request","resource","signal","req","headers","accept","res","json","getCacheKey"],"sources":["../../src/utils.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,KAAK,IAAIC,WAAW,EAAEC,OAAO,QAAQ,cAAc;AAE5D;;;AAGA,OAAM,SAAUC,aAAaA,CAAEC,cAAsB,EAAEC,QAAgB,EAAEC,UAAkB;EACzF,OAAO,GAAGF,cAAc,SAASC,QAAQ,SAASC,UAAU,EAAE;AAChE;AAmBA;;;AAGA,OAAO,eAAeC,OAAOA,CAAEC,QAAgB,EAAEC,MAAmB;EAClE,MAAMC,GAAG,GAAG,MAAMT,WAAW,CAACO,QAAQ,EAAE;IACtCG,OAAO,EAAE,IAAIT,OAAO,CAAC;MACnBU,MAAM,EAAE;KACT,CAAC;IACFH;GACD,CAAC;EACF,MAAMI,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAI,EAAE;EAE5B,OAAOD,GAAc;AACvB;AAEA;;;;;;AAMA,OAAM,SAAUE,WAAWA,CAAEV,QAAgB,EAAEC,UAAkB;EAC/D,OAAO,GAAGA,UAAU,IAAID,QAAQ,EAAE;AACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}