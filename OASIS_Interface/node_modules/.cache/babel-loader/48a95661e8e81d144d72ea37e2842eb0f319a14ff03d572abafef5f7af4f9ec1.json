{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { UpSale, DownSale } from \"@/api/axios/contract\";\nimport ChatMemu from \"@/views/chat/ChatMemu.vue\";\nimport { getOwnerNFTsByAddress } from \"@/api/axios/ownerContractLIst\";\nexport default {\n  components: {\n    ChatMemu\n  },\n  data() {\n    return {\n      userBalance: 0,\n      userName: \"\",\n      userAvatar: require(\"@/assets/webAssets/MetaMask.png\"),\n      eChangTheme: null,\n      UserNFTList: [],\n      UserNFTListInf: [],\n      MintNFTContractAbi: this.$store.state.MintNFTContractAbi,\n      contractAddress: \"\",\n      NFTList: [],\n      contract: null,\n      value: 1,\n      seriesNFTArrays: [],\n      nftContractAddressList: [],\n      currentId: 0\n    };\n  },\n  mounted() {\n    // this.init();\n    this.getSetAddressArray();\n    this.UserNFTListInf = this.$store.state.ownerNFTList;\n  },\n  methods: {\n    // async init() {\n    //   let user = this.$store.state.currentAddress;\n    //   try {\n    //     this.userBalance = this.$store.state.Web3.utils\n    //       .fromWei(await this.$store.state.Web3.eth.getBalance(user), \"ether\")\n    //       .slice(0, 4);\n    //     this.userName = `${user.slice(0, 5)}...${user.slice(37)}`;\n    //     this.userAvatar =\n    //       \"data:image/png;base64,\" + new this.Identicon(user, 120).toString();\n    //   } catch (error) {\n    //     return;\n    //   }\n    // },\n    async UpSale(NFT) {\n      if (Number(NFT.price) == 0 || NFT.price == \"\") {\n        return;\n      }\n      await UpSale(NFT);\n      this.UserNFTListInf = await this.$store.state.ownerNFTList;\n    },\n    async downSale(NFT) {\n      await DownSale(NFT);\n      this.UserNFTListInf = this.$store.state.ownerNFTList;\n    },\n    async GetNFTContractNFT(contractAddress) {\n      let nft = {\n        ownerAddress: this.$store.state.currentAddress,\n        nftAddress: contractAddress\n      };\n      var NFTInfList;\n      await getOwnerNFTsByAddress(nft).then(re => {\n        NFTInfList = re;\n      });\n      for (let index = 0; index < NFTInfList.data.data.length; index++) {\n        this.NFTList[index] = NFTInfList.data.data[index];\n      }\n    },\n    // let contract;\n    // let currentId;\n    // let seriesNFTArrays = []; // 初始化为一个空数组\n    // await getNFTStruct(nftAddress).then((re) => {\n    //   contract = re;\n    // });\n    // await contract.methods\n    //   ._currentId()\n    //   .call()\n    //   .then((re) => {\n    //     currentId = re;\n    //   });\n    //   console.log(currentId);\n    // console.log(nftAddress);\n    // for (let index = 0; index < currentId+1 ; index++) {\n    //   await contract.methods\n    //     ._nftMetaData(index) // 使用当前索引获取元数据\n    //     .call()\n    //     .then((re) => {\n    //       seriesNFTArrays.push(JSON.parse(re));\n    //     });\n    // }\n    async getSetAddressArray() {\n      for (const nft of this.$store.state.ownerNFTList) {\n        this.nftContractAddressList.push(nft.nftAddress);\n      }\n      this.nftContractAddressList = new Set(this.nftContractAddressList);\n    }\n  }\n};","map":{"version":3,"names":["UpSale","DownSale","ChatMemu","getOwnerNFTsByAddress","components","data","userBalance","userName","userAvatar","require","eChangTheme","UserNFTList","UserNFTListInf","MintNFTContractAbi","$store","state","contractAddress","NFTList","contract","value","seriesNFTArrays","nftContractAddressList","currentId","mounted","getSetAddressArray","ownerNFTList","methods","NFT","Number","price","downSale","GetNFTContractNFT","nft","ownerAddress","currentAddress","nftAddress","NFTInfList","then","re","index","length","push","Set"],"sources":["src/views/user/UserHome.vue"],"sourcesContent":["<template>\n\n  <div class=\"userHomeMain\">\n    <el-container>\n      <el-aside style=\"width: auto;\" class=\"animate__animated animate__fadeInLeft\">\n        <ChatMemu ref=\"ChatMemu\">\n        </ChatMemu>\n      </el-aside>\n      <div class=\"inf\">\n        <div class=\"infBox\">\n          <el-container>\n            <div class=\"content \">\n              <div class=\"contentTop animate__animated animate__fadeInDown\">\n                <div class=\"userInf \">\n                  <div class=\"userInfTop\">\n                    <div class=\"userAvatarBox\">\n                      <img :src=\"userAvatar\" alt=\"\">\n                    </div>\n                    <div class=\"userName\">{{userName}}</div>\n                  </div>\n                  <div class=\"userInfBottom\">\n                    <div class=\"UserBalance\">\n                      <span style=\"font-size: 80px;font-weight: 800;\"> {{ userBalance }}</span> ETH\n                    </div>\n                  </div>\n                </div>\n                <div class=\"userPet\">\n                </div>\n              </div>\n              <div class=\"contentBottom animate__animated animate__fadeInUp\">\n                <div class=\"NFTListBox\">\n                  <div class=\"NFTList\">\n                    <el-collapse accordion>\n                      <el-collapse-item :title=\"address\" v-for=\"address,i in nftContractAddressList\" :key=\"i\" :name=\"address\">\n                        <div class=\"ToSellMain\">\n                          <div class=\"NFTInfBox\">\n                            <div class=\"NFTInf\" v-for=\"inf in  \" :key=\"inf.ipfsPath\">\n                              <div class=\"imageBox\">\n                                <img class=\"NFTImage\" :src=\"inf.ipfsPath\" alt=\"\" />\n                              </div>\n                              <div class=\"Inf\">\n                                <template v-if=\"inf.isActive\">\n                                  <div class=\"NFTName\">{{ inf.nftName }}</div>\n                                  <div class=\"ownerAndToSell\">\n                                    <div class=\"ToSellBox\">\n\n                                      <div v-if=\"!inf.isActive\" class=\"ToSellinnerBox animate__animated animate__fadeInUp\">\n                                        <i class=\"el-icon-sort\"></i>\n                                        <span class=\"apporve \" @click=\"inf.isActive = !inf.isActive\"> 上架 </span>\n\n                                      </div>\n                                      <div v-else class=\"downSale animate__animated animate__fadeInUp\" @click=\"downSale(inf)\">\n                                        <i class=\"el-icon-sort\"></i>\n                                        <span class=\"apporve \"> 下架 </span>\n                                      </div>\n\n                                    </div>\n\n                                  </div>\n                                </template>\n                                <template v-else>\n                                  <div class=\"NFTName animate__animated animate__fadeIn\"><el-input v-model=\"inf.price\" placeholder=\"请输入内容\"></el-input>\n                                    ETH\n                                  </div>\n                                  <div class=\"ownerAndToSell animate__animated animate__fadeInDown\">\n                                    <div class=\"ToSellBox\">\n                                      <div class=\"ToSellinnerBox\">\n                                        <i class=\"el-icon-sort\"></i>\n                                        <span class=\"apporve\" @click=\"UpSale(inf)\"> 确认 </span>\n                                      </div>\n                                      <div class=\"ToSellinnerBox \" style=\"background-color: rgba(225, 44, 44, 0.7);\">\n                                        <i class=\"el-icon-sort\" style=\"color: white;\"></i>\n                                        <span class=\"apporve\" style=\"color: white;\" @click=\"inf.isActive = !inf.isActive\"> 取消 </span>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </template>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"ADDNFT\">\n\n                            <!-- <router-link class=\"addImit\" :to=\"{ name: 'addImit',query:{nftContract:nft.nftAddress,symbol:nft.symbol,seriesName:nft.seriesName,maxmums:nft.maxmums} }\"><i class=\"el-icon-plus\"></i> -->\n                            <!-- </router-link> -->\n                          </div>\n                        </div>\n                      </el-collapse-item>\n                    </el-collapse>\n\n                  </div>\n\n                </div>\n              </div>\n            </div>\n            <el-aside class=\"Mainbar animate__animated animate__fadeInRight\">\n              <div class=\"barBox\">\n\n              </div>\n            </el-aside>\n          </el-container>\n        </div>\n\n      </div>\n    </el-container>\n  </div>\n\n</template>\n\n<script>\n  import { UpSale, DownSale } from \"@/api/axios/contract\";\n  import ChatMemu from \"@/views/chat/ChatMemu.vue\";\n  import { getOwnerNFTsByAddress } from \"@/api/axios/ownerContractLIst\";\n  export default {\n    components: { ChatMemu },\n    data() {\n      return {\n        userBalance: 0,\n        userName: \"\",\n        userAvatar: require(\"@/assets/webAssets/MetaMask.png\"),\n        eChangTheme: null,\n        UserNFTList: [],\n        UserNFTListInf: [],\n        MintNFTContractAbi: this.$store.state.MintNFTContractAbi,\n        contractAddress: \"\",\n        NFTList: [],\n        contract: null,\n        value: 1,\n        seriesNFTArrays: [],\n        nftContractAddressList: [],\n        currentId: 0,\n      };\n    },\n    mounted() {\n      // this.init();\n      this.getSetAddressArray();\n      this.UserNFTListInf = this.$store.state.ownerNFTList;\n    },\n    methods: {\n      // async init() {\n      //   let user = this.$store.state.currentAddress;\n      //   try {\n      //     this.userBalance = this.$store.state.Web3.utils\n      //       .fromWei(await this.$store.state.Web3.eth.getBalance(user), \"ether\")\n      //       .slice(0, 4);\n      //     this.userName = `${user.slice(0, 5)}...${user.slice(37)}`;\n      //     this.userAvatar =\n      //       \"data:image/png;base64,\" + new this.Identicon(user, 120).toString();\n      //   } catch (error) {\n      //     return;\n      //   }\n      // },\n      async UpSale(NFT) {\n        if (Number(NFT.price) == 0 || NFT.price == \"\") {\n          return;\n        }\n        await UpSale(NFT);\n        this.UserNFTListInf = await this.$store.state.ownerNFTList;\n      },\n      async downSale(NFT) {\n        await DownSale(NFT);\n        this.UserNFTListInf = this.$store.state.ownerNFTList;\n      },\n      async GetNFTContractNFT(contractAddress) {\n        \n        let nft = {\n          ownerAddress: this.$store.state.currentAddress,\n          nftAddress: contractAddress,\n        };\n         var NFTInfList;\n         await getOwnerNFTsByAddress(nft).then(re => {\n           NFTInfList = re\n         })\n         for (let index = 0; index < NFTInfList.data.data.length; index++) {\n          this.NFTList[index]=NFTInfList.data.data[index]\n         }\n      },\n      // let contract;\n      // let currentId;\n      // let seriesNFTArrays = []; // 初始化为一个空数组\n      // await getNFTStruct(nftAddress).then((re) => {\n      //   contract = re;\n      // });\n      // await contract.methods\n      //   ._currentId()\n      //   .call()\n      //   .then((re) => {\n      //     currentId = re;\n      //   });\n      //   console.log(currentId);\n      // console.log(nftAddress);\n      // for (let index = 0; index < currentId+1 ; index++) {\n      //   await contract.methods\n      //     ._nftMetaData(index) // 使用当前索引获取元数据\n      //     .call()\n      //     .then((re) => {\n      //       seriesNFTArrays.push(JSON.parse(re));\n      //     });\n      // }\n      async getSetAddressArray() {\n        for (const nft of this.$store.state.ownerNFTList) {\n          this.nftContractAddressList.push(nft.nftAddress);\n        }\n        this.nftContractAddressList = new Set(this.nftContractAddressList);\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n::-webkit-scrollbar {\n  width: 6px;\n  height: 8px;\n  display: none;\n  background-color: transparent;\n}\n::-webkit-scrollbar-thumb {\n  background-color: #ccc;\n  border-radius: 25px;\n}\n.userHomeMain {\n  width: 100%;\n  height: 100vh;\n  background-color: var(--White-eee--);\n\n  .inf {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    .infBox {\n      border-radius: 30px;\n      width: 95%;\n      height: 95%;\n\n      .content {\n        overflow: auto;\n        height: 100%;\n        width: 100%;\n        color: var(--Dark--);\n        background-color: var(--White-eee--);\n        .contentTop {\n          width: 100%;\n          display: flex;\n          justify-content: space-around;\n          align-items: center;\n          .userInf {\n            background-color: var(--White--);\n            border-radius: 50px;\n            width: 600px;\n            height: 280px;\n            display: flex;\n            justify-content: center;\n            flex-direction: column;\n            align-content: flex-start;\n            margin-right: 5%;\n            overflow: hidden;\n            padding: 0;\n            .userInfTop {\n              width: 100%;\n              height: 100%;\n              display: flex;\n              justify-content: flex-start;\n              align-items: center;\n              margin-top: 20px;\n              .userAvatarBox {\n                margin-left: 25px;\n                margin-right: 25px;\n                width: 95px;\n                height: 95px;\n                overflow: hidden;\n                border-radius: 50%;\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                background-color: rgba(230, 230, 230, 1);\n                img {\n                  object-fit: cover;\n                  width: 85px;\n                  height: 85px;\n                }\n              }\n              .userName {\n                font-weight: 800;\n                font-size: 25px;\n              }\n            }\n            .userInfBottom {\n              width: 100%;\n              height: 100%;\n              display: flex;\n              justify-content: flex-end;\n              align-items: center;\n              .UserBalance {\n                margin-right: 35px;\n                font-size: 20px;\n              }\n            }\n          }\n          .userPet {\n            @extend .userInf;\n          }\n          .TopBackground {\n            position: relative;\n            width: 100%;\n            height: 30%;\n            .userName {\n              position: absolute;\n              width: 726px;\n              height: 180px;\n              left: 113px;\n              top: 185px;\n              color: rgb(255, 255, 255);\n              font-family: Inter;\n              font-size: 5vw;\n              font-weight: 800;\n              line-height: 90px;\n              letter-spacing: -2px;\n              text-align: left;\n            }\n          }\n        }\n        .contentBottom {\n          width: 95%;\n          height: 90%;\n          margin-top: 5%;\n          display: flex;\n          justify-content: center;\n          .NFTListBox {\n            width: 100%;\n            height: 100%;\n            background-color: var(--White--);\n            border-radius: 50px;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            .NFTList {\n              width: 95%;\n              height: 100%;\n              margin-top: 10%;\n              .ToSellMain {\n                height: 100%;\n                width: 100%;\n                font-family: Arial, Helvetica, sans-serif;\n                margin-top: 2%;\n                display: flex;\n                justify-content: flex-start;\n                flex-wrap: wrap;\n                margin-left: 2%;\n                .NFTInfBox {\n                  transition: all 0.7s ease-in-out;\n                }\n                .NFTInfBox:hover {\n                  transition: all 0.6s ease-in-out;\n                  transform: translateY(-20px) perspective(1000px);\n                }\n                .NFTInfBox:hover > * {\n                  transform: none;\n                }\n                .NFTInf {\n                  background-color: var(--White--);\n                  border-radius: 30px;\n                  width: 215px;\n                  height: 290px;\n                  margin-left: 2%;\n                  display: inline-block;\n                  overflow: hidden;\n                  transition: all 0.3s ease-in-out;\n                  box-shadow: rgba(17, 17, 26, 0.05) 0px 1px 0px,\n                    rgba(17, 17, 26, 0.1) 0px 0px 8px;\n                }\n                .ADDNFT {\n                  @extend .NFTInf;\n                  cursor: pointer;\n                  display: flex;\n                  justify-content: center;\n                  align-items: center;\n                  i {\n                    font-size: 70px;\n                    color: var(--Dark--);\n                  }\n                }\n                .imageBox {\n                  width: 100%;\n                  height: 63%;\n                  border-radius: 30px;\n                  overflow: hidden;\n                }\n                .Inf {\n                  width: 100%;\n                  height: 100%;\n                  position: relative;\n                }\n                .NFTImage {\n                  object-fit: cover;\n                  width: 100%;\n                  transition: all 0.6s;\n                  cursor: pointer;\n\n                  overflow: hidden;\n                  &:hover {\n                    transform: scale(1.1);\n\n                    transition: all 0.6s;\n                  }\n                }\n                .NFTName {\n                  display: inline-block;\n                  color: var(--Dark--);\n                  font-weight: 800;\n                  text-align: left;\n                  margin-top: 20px;\n                  font-size: 13px;\n                }\n                .ownerAndToSell {\n                  width: 100%;\n                  display: flex;\n                  margin-top: 18px;\n                  justify-content: center;\n                  align-items: center;\n                }\n                .ToSellBox {\n                  display: flex;\n                  justify-content: flex-start;\n                  align-items: center;\n                }\n\n                .ToSellinnerBox {\n                  margin: 2%;\n                  width: 82.79px;\n                  padding: 8px 0px 8px 0px;\n                  color: #55c960;\n                  background-color: rgba(85, 201, 96, 0.12);\n                  border-radius: 10px;\n                  cursor: pointer;\n                  transition: all 0.3s ease-in-out;\n                  &:hover {\n                    background-color: rgba(85, 201, 96, 0.24);\n                    transition: all 0.3s ease-in-out;\n                  }\n                }\n                .downSale {\n                  @extend .ToSellinnerBox;\n                  background-color: #d63131e5;\n                  color: white;\n                  &:hover {\n                    background-color: rgb(255, 0, 0);\n                    transition: all 0.3s ease-in-out;\n                  }\n                }\n                .apporve {\n                  font-size: 12px;\n                  font-weight: 800;\n                }\n                .ToSellHeader {\n                  display: flex;\n                  justify-content: space-between;\n                  width: 95%;\n                  height: 10%;\n                  font-size: 25px;\n                  margin-top: 3%;\n                  border-radius: 30px;\n                  padding: 3.5% 0;\n                  font-weight: 800;\n                  color: var(--Dark--);\n                }\n                .ToSellHeaderBox {\n                  width: 100%;\n                  text-align: center;\n                  display: flex;\n                  justify-content: center;\n                  align-items: center;\n                }\n              }\n            }\n          }\n        }\n      }\n      .Mainbar {\n        padding: 0 !important;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background-color: transparent;\n        .barBox {\n          height: 100%;\n          background-color: var(--White--);\n          width: 95%;\n          border-radius: 50px;\n        }\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\" scoped>\n@import \"@/style/index.css\";\n</style>\n<style lang=\"scss\" scoped>\n@import \"@/style/MarketShop/index.scss\";\n</style> \n  "],"mappings":";AA6GA,SAAAA,MAAA,EAAAC,QAAA;AACA,OAAAC,QAAA;AACA,SAAAC,qBAAA;AACA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACA;MACAC,WAAA;MACAC,QAAA;MACAC,UAAA,EAAAC,OAAA;MACAC,WAAA;MACAC,WAAA;MACAC,cAAA;MACAC,kBAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,kBAAA;MACAG,eAAA;MACAC,OAAA;MACAC,QAAA;MACAC,KAAA;MACAC,eAAA;MACAC,sBAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA;IACA,KAAAC,kBAAA;IACA,KAAAZ,cAAA,QAAAE,MAAA,CAAAC,KAAA,CAAAU,YAAA;EACA;EACAC,OAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAA1B,OAAA2B,GAAA;MACA,IAAAC,MAAA,CAAAD,GAAA,CAAAE,KAAA,UAAAF,GAAA,CAAAE,KAAA;QACA;MACA;MACA,MAAA7B,MAAA,CAAA2B,GAAA;MACA,KAAAf,cAAA,cAAAE,MAAA,CAAAC,KAAA,CAAAU,YAAA;IACA;IACA,MAAAK,SAAAH,GAAA;MACA,MAAA1B,QAAA,CAAA0B,GAAA;MACA,KAAAf,cAAA,QAAAE,MAAA,CAAAC,KAAA,CAAAU,YAAA;IACA;IACA,MAAAM,kBAAAf,eAAA;MAEA,IAAAgB,GAAA;QACAC,YAAA,OAAAnB,MAAA,CAAAC,KAAA,CAAAmB,cAAA;QACAC,UAAA,EAAAnB;MACA;MACA,IAAAoB,UAAA;MACA,MAAAjC,qBAAA,CAAA6B,GAAA,EAAAK,IAAA,CAAAC,EAAA;QACAF,UAAA,GAAAE,EAAA;MACA;MACA,SAAAC,KAAA,MAAAA,KAAA,GAAAH,UAAA,CAAA/B,IAAA,CAAAA,IAAA,CAAAmC,MAAA,EAAAD,KAAA;QACA,KAAAtB,OAAA,CAAAsB,KAAA,IAAAH,UAAA,CAAA/B,IAAA,CAAAA,IAAA,CAAAkC,KAAA;MACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAAf,mBAAA;MACA,WAAAQ,GAAA,SAAAlB,MAAA,CAAAC,KAAA,CAAAU,YAAA;QACA,KAAAJ,sBAAA,CAAAoB,IAAA,CAAAT,GAAA,CAAAG,UAAA;MACA;MACA,KAAAd,sBAAA,OAAAqB,GAAA,MAAArB,sBAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}