{"ast":null,"code":"import { logger } from '@libp2p/logger';\nimport { codes } from '../errors.js';\nimport { setDelayedInterval, clearDelayedInterval\n// @ts-expect-error set-delayed-interval does not export types\n} from 'set-delayed-interval';\nimport { AutoRelay } from './auto-relay.js';\nimport { namespaceToCid } from './utils.js';\nimport { RELAY_RENDEZVOUS_NS } from './constants.js';\nconst log = logger('libp2p:relay');\nexport class Relay {\n  /**\n   * Creates an instance of Relay\n   */\n  constructor(components, init) {\n    this.components = components;\n    // Create autoRelay if enabled\n    this.autoRelay = init.autoRelay?.enabled !== false ? new AutoRelay(components, {\n      addressSorter: init.addressSorter,\n      ...init.autoRelay\n    }) : undefined;\n    this.started = false;\n    this.init = init;\n    this._advertiseService = this._advertiseService.bind(this);\n  }\n  isStarted() {\n    return this.started;\n  }\n  /**\n   * Start Relay service\n   */\n  async start() {\n    // Advertise service if HOP enabled\n    if (this.init.hop.enabled !== false && this.init.advertise.enabled !== false) {\n      this.timeout = setDelayedInterval(this._advertiseService, this.init.advertise.ttl, this.init.advertise.bootDelay);\n    }\n    this.started = true;\n  }\n  /**\n   * Stop Relay service\n   */\n  async stop() {\n    if (this.timeout != null) {\n      clearDelayedInterval(this.timeout);\n    }\n    this.started = false;\n  }\n  /**\n   * Advertise hop relay service in the network.\n   */\n  async _advertiseService() {\n    try {\n      const cid = await namespaceToCid(RELAY_RENDEZVOUS_NS);\n      await this.components.contentRouting.provide(cid);\n    } catch (err) {\n      if (err.code === codes.ERR_NO_ROUTERS_AVAILABLE) {\n        log.error('a content router, such as a DHT, must be provided in order to advertise the relay service', err);\n        // Stop the advertise\n        await this.stop();\n      } else {\n        log.error(err);\n      }\n    }\n  }\n}","map":{"version":3,"names":["logger","codes","setDelayedInterval","clearDelayedInterval","AutoRelay","namespaceToCid","RELAY_RENDEZVOUS_NS","log","Relay","constructor","components","init","autoRelay","enabled","addressSorter","undefined","started","_advertiseService","bind","isStarted","start","hop","advertise","timeout","ttl","bootDelay","stop","cid","contentRouting","provide","err","code","ERR_NO_ROUTERS_AVAILABLE","error"],"sources":["../../../src/circuit/index.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,MAAM,QAAQ,gBAAgB;AACvC,SAASC,KAAK,QAAQ,cAAc;AACpC,SACEC,kBAAkB,EAClBC;AACF;AAAA,OACO,sBAAsB;AAC7B,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,cAAc,QAAQ,YAAY;AAC3C,SACEC,mBAAmB,QACd,gBAAgB;AAsBvB,MAAMC,GAAG,GAAGP,MAAM,CAAC,cAAc,CAAC;AA6BlC,OAAM,MAAOQ,KAAK;EAQhB;;;EAGAC,YAAaC,UAA2B,EAAEC,IAAe;IACvD,IAAI,CAACD,UAAU,GAAGA,UAAU;IAC5B;IACA,IAAI,CAACE,SAAS,GAAGD,IAAI,CAACC,SAAS,EAAEC,OAAO,KAAK,KAAK,GAC9C,IAAIT,SAAS,CAACM,UAAU,EAAE;MAC1BI,aAAa,EAAEH,IAAI,CAACG,aAAa;MACjC,GAAGH,IAAI,CAACC;KACT,CAAC,GACAG,SAAS;IAEb,IAAI,CAACC,OAAO,GAAG,KAAK;IACpB,IAAI,CAACL,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACM,iBAAiB,GAAG,IAAI,CAACA,iBAAiB,CAACC,IAAI,CAAC,IAAI,CAAC;EAC5D;EAEAC,SAASA,CAAA;IACP,OAAO,IAAI,CAACH,OAAO;EACrB;EAEA;;;EAGA,MAAMI,KAAKA,CAAA;IACT;IACA,IAAI,IAAI,CAACT,IAAI,CAACU,GAAG,CAACR,OAAO,KAAK,KAAK,IAAI,IAAI,CAACF,IAAI,CAACW,SAAS,CAACT,OAAO,KAAK,KAAK,EAAE;MAC5E,IAAI,CAACU,OAAO,GAAGrB,kBAAkB,CAC/B,IAAI,CAACe,iBAAiB,EAAE,IAAI,CAACN,IAAI,CAACW,SAAS,CAACE,GAAG,EAAE,IAAI,CAACb,IAAI,CAACW,SAAS,CAACG,SAAS,CAC/E;;IAGH,IAAI,CAACT,OAAO,GAAG,IAAI;EACrB;EAEA;;;EAGA,MAAMU,IAAIA,CAAA;IACR,IAAI,IAAI,CAACH,OAAO,IAAI,IAAI,EAAE;MACxBpB,oBAAoB,CAAC,IAAI,CAACoB,OAAO,CAAC;;IAGpC,IAAI,CAACP,OAAO,GAAG,KAAK;EACtB;EAEA;;;EAGA,MAAMC,iBAAiBA,CAAA;IACrB,IAAI;MACF,MAAMU,GAAG,GAAG,MAAMtB,cAAc,CAACC,mBAAmB,CAAC;MACrD,MAAM,IAAI,CAACI,UAAU,CAACkB,cAAc,CAACC,OAAO,CAACF,GAAG,CAAC;KAClD,CAAC,OAAOG,GAAQ,EAAE;MACjB,IAAIA,GAAG,CAACC,IAAI,KAAK9B,KAAK,CAAC+B,wBAAwB,EAAE;QAC/CzB,GAAG,CAAC0B,KAAK,CAAC,2FAA2F,EAAEH,GAAG,CAAC;QAC3G;QACA,MAAM,IAAI,CAACJ,IAAI,EAAE;OAClB,MAAM;QACLnB,GAAG,CAAC0B,KAAK,CAACH,GAAG,CAAC;;;EAGpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}