{"ast":null,"code":"import { BaseDatastore } from './base.js';\nimport { Key } from 'interface-datastore/key';\nimport * as Errors from './errors.js';\n\n/**\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-store').Options} Options\n */\n\n/**\n * @class MemoryDatastore\n * @implements {Datastore}\n */\nexport class MemoryDatastore extends BaseDatastore {\n  constructor() {\n    super();\n\n    /** @type {Record<string, Uint8Array>} */\n    this.data = {};\n  }\n  open() {\n    return Promise.resolve();\n  }\n  close() {\n    return Promise.resolve();\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} val\n   */\n  async put(key, val) {\n    // eslint-disable-line require-await\n    this.data[key.toString()] = val;\n  }\n\n  /**\n   * @param {Key} key\n   */\n  async get(key) {\n    const exists = await this.has(key);\n    if (!exists) throw Errors.notFoundError();\n    return this.data[key.toString()];\n  }\n\n  /**\n   * @param {Key} key\n   */\n  async has(key) {\n    // eslint-disable-line require-await\n    return this.data[key.toString()] !== undefined;\n  }\n\n  /**\n   * @param {Key} key\n   */\n  async delete(key) {\n    // eslint-disable-line require-await\n    delete this.data[key.toString()];\n  }\n  async *_all() {\n    yield* Object.entries(this.data).map(([key, value]) => ({\n      key: new Key(key),\n      value\n    }));\n  }\n  async *_allKeys() {\n    yield* Object.entries(this.data).map(([key]) => new Key(key));\n  }\n}","map":{"version":3,"names":["BaseDatastore","Key","Errors","MemoryDatastore","constructor","data","open","Promise","resolve","close","put","key","val","toString","get","exists","has","notFoundError","undefined","delete","_all","Object","entries","map","value","_allKeys"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/datastore-core@8.0.4/node_modules/datastore-core/src/memory.js"],"sourcesContent":["import { BaseDatastore } from './base.js'\nimport { Key } from 'interface-datastore/key'\nimport * as Errors from './errors.js'\n\n/**\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-store').Options} Options\n */\n\n/**\n * @class MemoryDatastore\n * @implements {Datastore}\n */\nexport class MemoryDatastore extends BaseDatastore {\n  constructor () {\n    super()\n\n    /** @type {Record<string, Uint8Array>} */\n    this.data = {}\n  }\n\n  open () {\n    return Promise.resolve()\n  }\n\n  close () {\n    return Promise.resolve()\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} val\n   */\n  async put (key, val) { // eslint-disable-line require-await\n    this.data[key.toString()] = val\n  }\n\n  /**\n   * @param {Key} key\n   */\n  async get (key) {\n    const exists = await this.has(key)\n    if (!exists) throw Errors.notFoundError()\n    return this.data[key.toString()]\n  }\n\n  /**\n   * @param {Key} key\n   */\n  async has (key) { // eslint-disable-line require-await\n    return this.data[key.toString()] !== undefined\n  }\n\n  /**\n   * @param {Key} key\n   */\n  async delete (key) { // eslint-disable-line require-await\n    delete this.data[key.toString()]\n  }\n\n  async * _all () {\n    yield * Object.entries(this.data)\n      .map(([key, value]) => ({ key: new Key(key), value }))\n  }\n\n  async * _allKeys () {\n    yield * Object.entries(this.data)\n      .map(([key]) => new Key(key))\n  }\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,WAAW;AACzC,SAASC,GAAG,QAAQ,yBAAyB;AAC7C,OAAO,KAAKC,MAAM,MAAM,aAAa;;AAErC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,SAASH,aAAa,CAAC;EACjDI,WAAWA,CAAA,EAAI;IACb,KAAK,CAAC,CAAC;;IAEP;IACA,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC;EAChB;EAEAC,IAAIA,CAAA,EAAI;IACN,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC;EAC1B;EAEAC,KAAKA,CAAA,EAAI;IACP,OAAOF,OAAO,CAACC,OAAO,CAAC,CAAC;EAC1B;;EAEA;AACF;AACA;AACA;EACE,MAAME,GAAGA,CAAEC,GAAG,EAAEC,GAAG,EAAE;IAAE;IACrB,IAAI,CAACP,IAAI,CAACM,GAAG,CAACE,QAAQ,CAAC,CAAC,CAAC,GAAGD,GAAG;EACjC;;EAEA;AACF;AACA;EACE,MAAME,GAAGA,CAAEH,GAAG,EAAE;IACd,MAAMI,MAAM,GAAG,MAAM,IAAI,CAACC,GAAG,CAACL,GAAG,CAAC;IAClC,IAAI,CAACI,MAAM,EAAE,MAAMb,MAAM,CAACe,aAAa,CAAC,CAAC;IACzC,OAAO,IAAI,CAACZ,IAAI,CAACM,GAAG,CAACE,QAAQ,CAAC,CAAC,CAAC;EAClC;;EAEA;AACF;AACA;EACE,MAAMG,GAAGA,CAAEL,GAAG,EAAE;IAAE;IAChB,OAAO,IAAI,CAACN,IAAI,CAACM,GAAG,CAACE,QAAQ,CAAC,CAAC,CAAC,KAAKK,SAAS;EAChD;;EAEA;AACF;AACA;EACE,MAAMC,MAAMA,CAAER,GAAG,EAAE;IAAE;IACnB,OAAO,IAAI,CAACN,IAAI,CAACM,GAAG,CAACE,QAAQ,CAAC,CAAC,CAAC;EAClC;EAEA,OAAQO,IAAIA,CAAA,EAAI;IACd,OAAQC,MAAM,CAACC,OAAO,CAAC,IAAI,CAACjB,IAAI,CAAC,CAC9BkB,GAAG,CAAC,CAAC,CAACZ,GAAG,EAAEa,KAAK,CAAC,MAAM;MAAEb,GAAG,EAAE,IAAIV,GAAG,CAACU,GAAG,CAAC;MAAEa;IAAM,CAAC,CAAC,CAAC;EAC1D;EAEA,OAAQC,QAAQA,CAAA,EAAI;IAClB,OAAQJ,MAAM,CAACC,OAAO,CAAC,IAAI,CAACjB,IAAI,CAAC,CAC9BkB,GAAG,CAAC,CAAC,CAACZ,GAAG,CAAC,KAAK,IAAIV,GAAG,CAACU,GAAG,CAAC,CAAC;EACjC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}