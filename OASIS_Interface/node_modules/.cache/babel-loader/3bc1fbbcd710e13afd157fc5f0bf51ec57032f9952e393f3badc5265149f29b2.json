{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createWantlist({\n  network\n}) {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"wantlist\"]}\n   */\n  async function wantlist(options = {}) {\n    const {\n      bitswap\n    } = await network.use(options);\n    const list = bitswap.getWantlist();\n    return Array.from(list).map(e => e[1].cid);\n  }\n  return withTimeoutOption(wantlist);\n}","map":{"version":3,"names":["withTimeoutOption","createWantlist","network","wantlist","options","bitswap","use","list","getWantlist","Array","from","map","e","cid"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-core@0.18.1/node_modules/ipfs-core/src/components/bitswap/wantlist.js"],"sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createWantlist ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"wantlist\"]}\n   */\n  async function wantlist (options = {}) {\n    const { bitswap } = await network.use(options)\n    const list = bitswap.getWantlist()\n\n    return Array.from(list).map(e => e[1].cid)\n  }\n\n  return withTimeoutOption(wantlist)\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,qCAAqC;;AAEvE;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAAE;EAAEC;AAAQ,CAAC,EAAE;EAC3C;AACF;AACA;EACE,eAAeC,QAAQA,CAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACrC,MAAM;MAAEC;IAAQ,CAAC,GAAG,MAAMH,OAAO,CAACI,GAAG,CAACF,OAAO,CAAC;IAC9C,MAAMG,IAAI,GAAGF,OAAO,CAACG,WAAW,CAAC,CAAC;IAElC,OAAOC,KAAK,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC;EAC5C;EAEA,OAAOb,iBAAiB,CAACG,QAAQ,CAAC;AACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}