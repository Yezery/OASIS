{"ast":null,"code":"/**\n * Any object that implements this Symbol as a property should return a\n * PeerDiscovery instance as the property value, similar to how\n * `Symbol.Iterable` can be used to return an `Iterable` from an `Iterator`.\n *\n * @example\n *\n * ```js\n * import { peerDiscovery, PeerDiscovery } from '@libp2p/peer-discovery'\n *\n * class MyPeerDiscoverer implements PeerDiscovery {\n *   get [peerDiscovery] () {\n *     return this\n *   }\n *\n *   // ...other methods\n * }\n * ```\n */\nexport const peerDiscovery = Symbol.for('@libp2p/peer-discovery');\nexport const symbol = Symbol.for('@libp2p/peer-discovery');\nexport function isPeerDiscovery(other) {\n  return other != null && Boolean(other[symbol]);\n}","map":{"version":3,"names":["peerDiscovery","Symbol","for","symbol","isPeerDiscovery","other","Boolean"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"AAGA;;;;;;;;;;;;;;;;;;;AAmBA,OAAO,MAAMA,aAAa,GAAGC,MAAM,CAACC,GAAG,CAAC,wBAAwB,CAAC;AAEjE,OAAO,MAAMC,MAAM,GAAGF,MAAM,CAACC,GAAG,CAAC,wBAAwB,CAAC;AAkB1D,OAAM,SAAUE,eAAeA,CAAEC,KAAU;EACzC,OAAOA,KAAK,IAAI,IAAI,IAAIC,OAAO,CAACD,KAAK,CAACF,MAAM,CAAC,CAAC;AAChD"},"metadata":{},"sourceType":"module","externalDependencies":[]}