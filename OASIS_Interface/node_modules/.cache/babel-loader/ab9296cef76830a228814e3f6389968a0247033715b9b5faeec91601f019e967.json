{"ast":null,"code":"import { process } from \"@/utils/nsfwjs\";\nimport { MakeNFT } from \"@/api/axios/contract\";\nexport default {\n  data() {\n    return {\n      imageUrl: \"\",\n      fileList: [],\n      dialogImageUrl: \"\",\n      dialogVisible: false,\n      disabled: false,\n      Name: \"\",\n      Symbol: \"\",\n      FirstNFTName: \"\",\n      Description: \"\",\n      Maxmums: 1,\n      active: 1,\n      sumitEnable: true,\n      isRepeatClick: true,\n      isProcess: false,\n      processLoading: false,\n      noProcess: false,\n      isChanging: false\n    };\n  },\n  mounted() {},\n  computed: {\n    canSubmit() {\n      if (this.Name == \"\" || this.Symbol == \"\" || this.$refs.pictureUpload.uploadFiles.length == 0 || this.FirstNFTName == \"\" || !this.isProcess || this.Description == \"3D\") {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n  watch: {\n    Description(newData) {\n      if (newData == \"3D\") {\n        this.$notify({\n          title: \"不能为关键字\",\n          type: \"warning\",\n          position: \"top-left\",\n          offset: 200\n        });\n        this.Description = \"\";\n      }\n    }\n  },\n  methods: {\n    async setPicture() {\n      this.processLoading = true;\n      let prix = this.getFileExtendingName(this.$refs.pictureUpload.uploadFiles[0].raw.name);\n      if (prix == \".jepg\" || prix == \".png\" || prix == \".jpg\") {\n        setTimeout(async () => {\n          try {\n            await process(this.$refs.realPicture).then(re => {\n              this.processLoading = false;\n              if (re[0].className == \"Neutral\" || re[0].className == \"Drawing\") {\n                this.isProcess = true;\n              } else {\n                this.isProcess = false;\n                this.noProcess = true;\n              }\n            });\n          } catch (error) {\n            this.$notify.error({\n              title: \"系统异常\",\n              position: \"top-left\",\n              offset: 200\n            });\n            this.isProcess = false;\n            this.processLoading = false;\n            this.noProcess = false;\n            console.error(error);\n          }\n        }, 100);\n      } else {\n        if (prix == \".gif\") {\n          this.isProcess = true;\n          this.processLoading = false;\n          this.noProcess = false;\n        } else {\n          this.$notify.error({\n            title: \"不支持格式\",\n            position: \"top-left\",\n            offset: 200\n          });\n          this.isProcess = false;\n          this.processLoading = false;\n          this.noProcess = false;\n          this.handleRemove();\n        }\n      }\n    },\n    getFileExtendingName(filename) {\n      // 文件扩展名匹配正则\n      var reg = /.[^.]+$/;\n      var matches = reg.exec(filename);\n      if (matches) {\n        return matches[0];\n      }\n      return \"\";\n    },\n    async createNFT() {\n      if (this.isRepeatClick) {\n        this.isRepeatClick = false;\n        try {\n          this.isChanging = true;\n          await MakeNFT(this.Name, this.Symbol, this.$refs.pictureUpload.uploadFiles, this.Maxmums, this.FirstNFTName, this.Description);\n          this.isChanging = false;\n          this.$notify({\n            title: \"创造成功\",\n            type: \"success\",\n            position: \"top-left\",\n            offset: 200\n          });\n          this.fileList = [];\n          this.Name = \"\";\n          this.Symbol = \"\";\n          this.Maxmums = 1;\n          this.FirstNFTName = \"\";\n          this.Description = \"\";\n        } catch (error) {\n          this.isChanging = false;\n          this.$notify.error({\n            title: \"创造失败\",\n            position: \"top-left\",\n            offset: 200\n          });\n          return;\n        }\n      } else {\n        this.$notify({\n          title: \"请勿操作频繁\",\n          type: \"warning\",\n          position: \"top-left\",\n          offset: 200\n        });\n      }\n      setTimeout(() => {\n        this.isRepeatClick = true;\n      }, 5000);\n    },\n    handleRemove() {\n      // let uploadFiles = this.$refs.pictureUpload.uploadFiles;\n      // for (var i = 0; i < uploadFiles.length; i++) {\n      //   if (uploadFiles[i][\"url\"] == file.url) {\n      //     uploadFiles.splice(i, 1);\n      //   }\n      // }\n      this.$refs.pictureUpload.clearFiles();\n      this.isProcess = false;\n      this.noProcess = false;\n    }\n  }\n};","map":{"version":3,"names":["process","MakeNFT","data","imageUrl","fileList","dialogImageUrl","dialogVisible","disabled","Name","Symbol","FirstNFTName","Description","Maxmums","active","sumitEnable","isRepeatClick","isProcess","processLoading","noProcess","isChanging","mounted","computed","canSubmit","$refs","pictureUpload","uploadFiles","length","watch","newData","$notify","title","type","position","offset","methods","setPicture","prix","getFileExtendingName","raw","name","setTimeout","realPicture","then","re","className","error","console","handleRemove","filename","reg","matches","exec","createNFT","clearFiles"],"sources":["src/views/main/imit/imitNFT.vue"],"sourcesContent":["<template>\n  <div class=\"MainWindow animate__animated animate__fadeInRight\" v-loading.fullscreen.lock=\"isChanging\" element-loading-text=\"交易进行中\" element-loading-spinner=\"el-icon-loading\" element-loading-background=\"rgba(0, 0, 0, 0.8)\">\n    <div class=\"imitNFTFrame \">\n      <div class=\"imitNFTFrameTop\">\n        <div class=\"ImitTitle\">\n          Imit YOUR NFT\n        </div>\n        <div class=\"imitNFTFrameTop_tipsBox\">\n          铸造NFT\n        </div>\n      </div>\n      <div class=\"imitNFTFrameMain\">\n        <div class=\"imitNFTFrameMain_left\">\n          <div style=\"text-align: left;margin-bottom: 2%;\">\n            <span style=\"color: var(--Dark--);font-weight: 800;font-size: 1vw;\" v-if=\"processLoading\"><i class=\"el-icon-loading\" />审核中...</span>\n            <span style=\"color: rgb(1, 169, 1);font-weight: 800;font-size: 1vw;\" v-if=\"isProcess&&!processLoading\"><i class=\"el-icon-success\" /> 图片合规</span>\n            <span style=\"color: red;font-weight: 800;font-size: 1vw;\" v-else-if=\"!isProcess&&!processLoading&&noProcess\"><i class=\"el-icon-error\" /> 图片不合规</span>\n          </div>\n          <div class=\"imageUpLoad\">\n            <el-upload action=\"#\" list-type=\"picture-card\" ref=\"pictureUpload\" :file-list=\"fileList\" :on-change=\"setPicture\" :auto-upload=\"false\">\n              <i slot=\"default\" class=\"el-icon-picture\" style=\"\n              font-size: 82px;\n              color: var(--Dark--);\n              transition: all 0.3s ease-in-out;\n            \" />\n              <div slot=\"file\" slot-scope=\"{ file }\">\n                <img class=\"el-upload-list__item-thumbnail\" :src=\"file.url\" alt=\"\" ref=\"realPicture\">\n                <span class=\"el-upload-list__item-actions\">\n                  <span v-if=\"!disabled\" class=\"el-upload-list__item-delete\" @click=\"handleRemove(file)\">\n                    <i class=\"el-icon-delete\" />\n                  </span>\n                </span>\n              </div>\n            </el-upload>\n            <div style=\"margin-top: 3%;text-align: center\">\n              <span style=\"color: red\">*</span><span style=\"color: var(--Dark--);font-weight: 800;font-size: 1vw;\">支持 JPG、PNG、JEPG\n                、GIF 格式</span>\n            </div>\n          </div>\n        </div>\n        <div class=\"imitNFTFrameMain_right\">\n          <div class=\"selectBox\">\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  <span style=\"color: red\">*</span> Name\n                </div>\n                <div class=\"tipsTitle2\">\n                  NFT系列名\n                </div>\n              </div>\n              <el-input v-model=\"Name\" placeholder=\"Please enter a series name\" />\n            </div>\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  <span style=\"color: red\">*</span> Symbol\n                </div>\n                <div class=\"tipsTitle2\">\n                  该系列NFT代币符号 (要求字符长度不超过11个)\n                </div>\n              </div>\n              <el-input v-model=\"Symbol\" placeholder=\"Please enter the token symbol\" maxlength=\"11\" />\n            </div>\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  <span style=\"color: red\">*</span> Genesis NFT Name\n                </div>\n                <div class=\"tipsTitle2\">\n                  该系列的一号NFT\n                </div>\n              </div>\n              <el-input v-model=\"FirstNFTName\" placeholder=\"Please enter the name of Genesis NFT\" />\n            </div>\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  Description\n                </div>\n                <div class=\"tipsTitle2\">\n                  描述将包含在商品详情页面上图片下方 <span style=\"color: red\">(不能为关键字 '3D' )</span>\n                </div>\n              </div>\n              <el-input type=\"textarea\" v-model=\"Description\" placeholder=\"Please add a description\" />\n            </div>\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  <span style=\"color: red\">*</span> Supply\n                </div>\n                <div class=\"tipsTitle2\">\n                  可以铸造的物品数量。\n                </div>\n              </div>\n              <div class=\"input_number\">\n                <el-input-number v-model=\"Maxmums\" :min=\"1\" />\n              </div>\n            </div>\n            <div class=\"select\">\n              <div class=\"sumbitBox\">\n                <el-button @click=\"createNFT\" :disabled=\"!canSubmit\" class=\"createButton\">\n                  创造\n                </el-button>\n              </div>\n            </div>\n            <div class=\"select\">\n              <div class=\"sumbitBox\">\n                <router-link :to=\"{ name: 'Imit3DNFT' }\">\n                  <el-button class=\"createButton\" style=\"margin-top: 3%;width: 100%;background-color: var(--White--);color: var(--Dark--);\">\n                    To Imit3DNFT <i class=\"\nel-icon-d-arrow-right\" />\n                  </el-button>\n                </router-link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { process } from \"@/utils/nsfwjs\";\n  import { MakeNFT } from \"@/api/axios/contract\";\n  export default {\n    data() {\n      return {\n        imageUrl: \"\",\n        fileList: [],\n        dialogImageUrl: \"\",\n        dialogVisible: false,\n        disabled: false,\n        Name: \"\",\n        Symbol: \"\",\n        FirstNFTName: \"\",\n        Description: \"\",\n        Maxmums: 1,\n        active: 1,\n        sumitEnable: true,\n        isRepeatClick: true,\n\n        isProcess: false,\n        processLoading: false,\n        noProcess: false,\n        isChanging: false,\n      };\n    },\n    mounted() {},\n    computed: {\n      canSubmit() {\n        if (\n          this.Name == \"\" ||\n          this.Symbol == \"\" ||\n          this.$refs.pictureUpload.uploadFiles.length == 0 ||\n          this.FirstNFTName == \"\" ||\n          !this.isProcess ||\n          this.Description == \"3D\"\n        ) {\n          return false;\n        } else {\n          return true;\n        }\n      },\n    },\n    watch: {\n      Description(newData) {\n        if (newData == \"3D\") {\n          this.$notify({\n            title: \"不能为关键字\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200,\n          });\n          this.Description = \"\";\n        }\n      },\n    },\n    methods: {\n      async setPicture() {\n        this.processLoading = true;\n        let prix = this.getFileExtendingName(\n          this.$refs.pictureUpload.uploadFiles[0].raw.name\n        );\n        if (prix == \".jepg\" || prix == \".png\" || prix == \".jpg\") {\n          setTimeout(async () => {\n            try {\n              await process(this.$refs.realPicture).then((re) => {\n                this.processLoading = false;\n                if (\n                  re[0].className == \"Neutral\" ||\n                  re[0].className == \"Drawing\"\n                ) {\n                  this.isProcess = true;\n                } else {\n                  this.isProcess = false;\n                  this.noProcess = true;\n                }\n              });\n            } catch (error) {\n              this.$notify.error({\n                title: \"系统异常\",\n                position: \"top-left\",\n                offset: 200,\n              });\n              this.isProcess = false;\n              this.processLoading = false;\n              this.noProcess = false;\n              console.error(error);\n            }\n          }, 100);\n        } else {\n          if (prix == \".gif\") {\n            this.isProcess = true;\n            this.processLoading = false;\n            this.noProcess = false;\n          } else {\n            this.$notify.error({\n              title: \"不支持格式\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            this.isProcess = false;\n            this.processLoading = false;\n            this.noProcess = false;\n            this.handleRemove();\n          }\n        }\n      },\n      getFileExtendingName(filename) {\n        // 文件扩展名匹配正则\n        var reg = /.[^.]+$/;\n        var matches = reg.exec(filename);\n        if (matches) {\n          return matches[0];\n        }\n        return \"\";\n      },\n      async createNFT() {\n        if (this.isRepeatClick) {\n          this.isRepeatClick = false;\n          try {\n            this.isChanging = true;\n            await MakeNFT(\n              this.Name,\n              this.Symbol,\n              this.$refs.pictureUpload.uploadFiles,\n              this.Maxmums,\n              this.FirstNFTName,\n              this.Description\n            );\n            this.isChanging = false;\n            this.$notify({\n              title: \"创造成功\",\n              type: \"success\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            this.fileList = [];\n            this.Name = \"\";\n            this.Symbol = \"\";\n            this.Maxmums = 1;\n            this.FirstNFTName = \"\";\n            this.Description = \"\";\n          } catch (error) {\n            this.isChanging = false;\n            this.$notify.error({\n              title: \"创造失败\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            return;\n          }\n        } else {\n          this.$notify({\n            title: \"请勿操作频繁\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200,\n          });\n        }\n\n        setTimeout(() => {\n          this.isRepeatClick = true;\n        }, 5000);\n      },\n      handleRemove() {\n        // let uploadFiles = this.$refs.pictureUpload.uploadFiles;\n        // for (var i = 0; i < uploadFiles.length; i++) {\n        //   if (uploadFiles[i][\"url\"] == file.url) {\n        //     uploadFiles.splice(i, 1);\n        //   }\n        // }\n        this.$refs.pictureUpload.clearFiles();\n        this.isProcess = false;\n        this.noProcess = false;\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n@import  \"@/style/imitPage/imitNFT.scss\";\n\n// .NFTImageSelectBox {\n//   width: 76%;\n//   text-align: left;\n//   height: 100%;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   transition: all 0.3s ease-in-out;\n// }\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}