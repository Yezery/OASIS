{"ast":null,"code":"import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option';\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createUnwant({\n  network\n}) {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"unwant\"]}\n   */\n  async function unwant(cids, options = {}) {\n    const {\n      bitswap\n    } = await network.use(options);\n    if (!Array.isArray(cids)) {\n      cids = [cids];\n    }\n    return bitswap.unwant(cids);\n  }\n  return withTimeoutOption(unwant);\n}","map":{"version":3,"names":["withTimeoutOption","createUnwant","network","unwant","cids","options","bitswap","use","Array","isArray"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-core@0.18.1/node_modules/ipfs-core/src/components/bitswap/unwant.js"],"sourcesContent":["import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createUnwant ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"unwant\"]}\n   */\n  async function unwant (cids, options = {}) {\n    const { bitswap } = await network.use(options)\n\n    if (!Array.isArray(cids)) {\n      cids = [cids]\n    }\n\n    return bitswap.unwant(cids)\n  }\n\n  return withTimeoutOption(unwant)\n}\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,qCAAqC;;AAEvE;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAAE;EAAEC;AAAQ,CAAC,EAAE;EACzC;AACF;AACA;EACE,eAAeC,MAAMA,CAAEC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACzC,MAAM;MAAEC;IAAQ,CAAC,GAAG,MAAMJ,OAAO,CAACK,GAAG,CAACF,OAAO,CAAC;IAE9C,IAAI,CAACG,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,EAAE;MACxBA,IAAI,GAAG,CAACA,IAAI,CAAC;IACf;IAEA,OAAOE,OAAO,CAACH,MAAM,CAACC,IAAI,CAAC;EAC7B;EAEA,OAAOJ,iBAAiB,CAACG,MAAM,CAAC;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}