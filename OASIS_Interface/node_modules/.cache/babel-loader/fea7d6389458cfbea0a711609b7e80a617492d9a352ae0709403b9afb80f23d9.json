{"ast":null,"code":"import { createCodec, CODEC_TYPES } from '../codec.js';\nexport function enumeration(v) {\n  function findValue(val) {\n    // Use the reverse mapping to look up the enum key for the stored value\n    // https://www.typescriptlang.org/docs/handbook/enums.html#reverse-mappings\n    if (v[val.toString()] == null) {\n      throw new Error('Invalid enum value');\n    }\n    return v[val];\n  }\n  const encode = function enumEncode(val, writer) {\n    const enumValue = findValue(val);\n    writer.int32(enumValue);\n  };\n  const decode = function enumDecode(reader) {\n    const val = reader.int32();\n    return findValue(val);\n  };\n  // @ts-expect-error yeah yeah\n  return createCodec('enum', CODEC_TYPES.VARINT, encode, decode);\n}","map":{"version":3,"names":["createCodec","CODEC_TYPES","enumeration","v","findValue","val","toString","Error","encode","enumEncode","writer","enumValue","int32","decode","enumDecode","reader","VARINT"],"sources":["../../../src/codecs/enum.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAGtD,OAAM,SAAUC,WAAWA,CAAMC,CAAM;EACrC,SAASC,SAASA,CAAEC,GAAoB;IACtC;IACA;IACA,IAAIF,CAAC,CAACE,GAAG,CAACC,QAAQ,EAAE,CAAC,IAAI,IAAI,EAAE;MAC7B,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;;IAGvC,OAAOJ,CAAC,CAACE,GAAG,CAAC;EACf;EAEA,MAAMG,MAAM,GAAoC,SAASC,UAAUA,CAAEJ,GAAG,EAAEK,MAAM;IAC9E,MAAMC,SAAS,GAAGP,SAAS,CAACC,GAAG,CAAC;IAEhCK,MAAM,CAACE,KAAK,CAACD,SAAS,CAAC;EACzB,CAAC;EAED,MAAME,MAAM,GAAoC,SAASC,UAAUA,CAAEC,MAAM;IACzE,MAAMV,GAAG,GAAGU,MAAM,CAACH,KAAK,EAAE;IAE1B,OAAOR,SAAS,CAACC,GAAG,CAAC;EACvB,CAAC;EAED;EACA,OAAOL,WAAW,CAAC,MAAM,EAAEC,WAAW,CAACe,MAAM,EAAER,MAAM,EAAEK,MAAM,CAAC;AAChE"},"metadata":{},"sourceType":"module","externalDependencies":[]}