{"ast":null,"code":"import defer from 'p-defer';\nimport * as Headers from './extract-headers.js';\nimport { lteReader } from './lte-reader.js';\nfunction getPadding(size) {\n  size &= 511;\n  if (size !== 0) {\n    return 512 - size;\n  }\n  return 0;\n}\nasync function discardPadding(reader, size) {\n  const overflow = getPadding(size);\n  if (overflow > 0) {\n    await reader.next(overflow);\n  }\n}\nexport function extract(options = {}) {\n  options.highWaterMark = options.highWaterMark ?? 1024 * 16;\n  return async function* (source) {\n    const reader = lteReader(source);\n    let gnuLongPath, gnuLongLinkPath, paxGlobal, pax;\n    try {\n      while (true) {\n        let headerBytes;\n        try {\n          const result = await reader.next(512);\n          if (result.done === true) {\n            return;\n          }\n          headerBytes = result.value;\n        } catch (err) {\n          // Is ok, this is the end of the stream!\n          if (err.code === 'ERR_UNDER_READ') {\n            return;\n          }\n          throw err;\n        }\n        const header = Headers.decode(headerBytes, options.filenameEncoding);\n        if (header == null) {\n          continue;\n        }\n        if (header.type === 'gnu-long-path') {\n          const {\n            done,\n            value: gnuLongPathBytes\n          } = await reader.next(header.size);\n          if (done === true || gnuLongPathBytes == null) {\n            return;\n          }\n          gnuLongPath = Headers.decodeLongPath(gnuLongPathBytes, options.filenameEncoding);\n          await discardPadding(reader, header.size);\n          continue;\n        }\n        if (header.type === 'gnu-long-link-path') {\n          const {\n            done,\n            value: gnuLongLinkPathBytes\n          } = await reader.next(header.size);\n          if (done === true || gnuLongLinkPathBytes == null) {\n            return;\n          }\n          gnuLongLinkPath = Headers.decodeLongPath(gnuLongLinkPathBytes, options.filenameEncoding);\n          await discardPadding(reader, header.size);\n          continue;\n        }\n        if (header.type === 'pax-global-header') {\n          const {\n            done,\n            value: paxGlobalBytes\n          } = await reader.next(header.size);\n          if (done === true || paxGlobalBytes == null) {\n            return;\n          }\n          paxGlobal = Headers.decodePax(paxGlobalBytes, options.filenameEncoding);\n          await discardPadding(reader, header.size);\n          continue;\n        }\n        if (header.type === 'pax-header') {\n          const {\n            done,\n            value: paxBytes\n          } = await reader.next(header.size);\n          if (done === true || paxBytes == null) {\n            return;\n          }\n          pax = Headers.decodePax(paxBytes, options.filenameEncoding);\n          if (paxGlobal != null) {\n            pax = {\n              ...paxGlobal,\n              ...pax\n            };\n          }\n          await discardPadding(reader, header.size);\n          continue;\n        }\n        if (gnuLongPath != null) {\n          header.name = gnuLongPath;\n          gnuLongPath = null;\n        }\n        if (gnuLongLinkPath != null) {\n          header.linkname = gnuLongLinkPath;\n          gnuLongLinkPath = null;\n        }\n        if (pax != null) {\n          if (pax.path != null) {\n            header.name = pax.path;\n          }\n          if (pax.linkpath != null) {\n            header.linkname = pax.linkpath;\n          }\n          if (pax.size != null) {\n            header.size = parseInt(pax.size, 10);\n          }\n          header.pax = pax;\n          pax = null;\n        }\n        if (header.size == null || header.size === 0 || header.type === 'directory') {\n          yield {\n            header,\n            body: async function* () {}()\n          };\n          continue;\n        }\n        let bytesRemaining = header.size;\n        const bodyConsumed = defer();\n        // Prefetch the first chunk.\n        // This allows us to stream entries for small files from the tar without\n        // explicitly streaming the body of each.\n        const firstChunk = await reader.nextLte(Math.min(bytesRemaining, options.highWaterMark ?? Infinity));\n        bytesRemaining -= firstChunk.value.length;\n        if (bytesRemaining === 0) {\n          bodyConsumed.resolve();\n        }\n        const body = async function* () {\n          try {\n            yield firstChunk.value.subarray();\n            while (bytesRemaining > 0) {\n              const {\n                done,\n                value\n              } = await reader.nextLte(bytesRemaining);\n              if (done === true) {\n                bytesRemaining = 0;\n                return;\n              }\n              bytesRemaining -= value.length;\n              yield value.subarray();\n            }\n          } finally {\n            bodyConsumed.resolve();\n          }\n        }();\n        yield {\n          header,\n          body\n        };\n        // Wait for the body to be consumed\n        await bodyConsumed.promise;\n        // In case the body was not consumed entirely...\n        if (bytesRemaining > 0) {\n          for await (const _ of body) {} // eslint-disable-line no-unused-vars,no-empty,@typescript-eslint/no-unused-vars\n        }\n\n        await discardPadding(reader, header.size);\n      }\n    } finally {\n      await reader.return();\n    }\n  };\n}","map":{"version":3,"names":["defer","Headers","lteReader","getPadding","size","discardPadding","reader","overflow","next","extract","options","highWaterMark","source","gnuLongPath","gnuLongLinkPath","paxGlobal","pax","headerBytes","result","done","value","err","code","header","decode","filenameEncoding","type","gnuLongPathBytes","decodeLongPath","gnuLongLinkPathBytes","paxGlobalBytes","decodePax","paxBytes","name","linkname","path","linkpath","parseInt","body","bytesRemaining","bodyConsumed","firstChunk","nextLte","Math","min","Infinity","length","resolve","subarray","promise","_","return"],"sources":["../../src/extract.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}