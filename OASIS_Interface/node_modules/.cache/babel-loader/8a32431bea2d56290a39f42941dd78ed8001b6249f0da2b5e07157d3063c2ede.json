{"ast":null,"code":"import { logger } from '@libp2p/logger';\nimport errCode from 'err-code';\nimport { codes, messages } from './errors.js';\nimport { storeAddresses, uniquePeers, requirePeers } from './content-routing/utils.js';\nimport { TimeoutController } from 'timeout-abort-controller';\nimport merge from 'it-merge';\nimport { pipe } from 'it-pipe';\nimport first from 'it-first';\nimport drain from 'it-drain';\nimport filter from 'it-filter';\nimport { setDelayedInterval, clearDelayedInterval\n// @ts-expect-error module with no types\n} from 'set-delayed-interval';\nimport { setMaxListeners } from 'events';\nconst log = logger('libp2p:peer-routing');\nexport class DefaultPeerRouting {\n  constructor(components, init) {\n    this.components = components;\n    this.routers = init.routers ?? [];\n    this.refreshManagerInit = init.refreshManager ?? {};\n    this.started = false;\n    this._findClosestPeersTask = this._findClosestPeersTask.bind(this);\n  }\n  isStarted() {\n    return this.started;\n  }\n  /**\n   * Start peer routing service.\n   */\n  async start() {\n    if (this.started || this.routers.length === 0 || this.timeoutId != null || this.refreshManagerInit.enabled === false) {\n      return;\n    }\n    this.timeoutId = setDelayedInterval(this._findClosestPeersTask, this.refreshManagerInit.interval, this.refreshManagerInit.bootDelay);\n    this.started = true;\n  }\n  /**\n   * Recurrent task to find closest peers and add their addresses to the Address Book.\n   */\n  async _findClosestPeersTask() {\n    if (this.abortController != null) {\n      // we are already running the query\n      return;\n    }\n    try {\n      this.abortController = new TimeoutController(this.refreshManagerInit.timeout ?? 10e3);\n      // this controller may be used while dialing lots of peers so prevent MaxListenersExceededWarning\n      // appearing in the console\n      try {\n        // fails on node < 15.4\n        setMaxListeners?.(Infinity, this.abortController.signal);\n      } catch {}\n      // nb getClosestPeers adds the addresses to the address book\n      await drain(this.getClosestPeers(this.components.peerId.toBytes(), {\n        signal: this.abortController.signal\n      }));\n    } catch (err) {\n      log.error(err);\n    } finally {\n      this.abortController?.clear();\n      this.abortController = undefined;\n    }\n  }\n  /**\n   * Stop peer routing service.\n   */\n  async stop() {\n    clearDelayedInterval(this.timeoutId);\n    // abort query if it is in-flight\n    this.abortController?.abort();\n    this.started = false;\n  }\n  /**\n   * Iterates over all peer routers in parallel to find the given peer\n   */\n  async findPeer(id, options) {\n    if (this.routers.length === 0) {\n      throw errCode(new Error('No peer routers available'), codes.ERR_NO_ROUTERS_AVAILABLE);\n    }\n    if (id.toString() === this.components.peerId.toString()) {\n      throw errCode(new Error('Should not try to find self'), codes.ERR_FIND_SELF);\n    }\n    const output = await pipe(merge(...this.routers.map(router => async function* () {\n      try {\n        yield await router.findPeer(id, options);\n      } catch (err) {\n        log.error(err);\n      }\n    }())), source => filter(source, Boolean), source => storeAddresses(source, this.components.peerStore), async source => await first(source));\n    if (output != null) {\n      return output;\n    }\n    throw errCode(new Error(messages.NOT_FOUND), codes.ERR_NOT_FOUND);\n  }\n  /**\n   * Attempt to find the closest peers on the network to the given key\n   */\n  async *getClosestPeers(key, options) {\n    if (this.routers.length === 0) {\n      throw errCode(new Error('No peer routers available'), codes.ERR_NO_ROUTERS_AVAILABLE);\n    }\n    yield* pipe(merge(...this.routers.map(router => router.getClosestPeers(key, options))), source => storeAddresses(source, this.components.peerStore), source => uniquePeers(source), source => requirePeers(source));\n  }\n}","map":{"version":3,"names":["logger","errCode","codes","messages","storeAddresses","uniquePeers","requirePeers","TimeoutController","merge","pipe","first","drain","filter","setDelayedInterval","clearDelayedInterval","setMaxListeners","log","DefaultPeerRouting","constructor","components","init","routers","refreshManagerInit","refreshManager","started","_findClosestPeersTask","bind","isStarted","start","length","timeoutId","enabled","interval","bootDelay","abortController","timeout","Infinity","signal","getClosestPeers","peerId","toBytes","err","error","clear","undefined","stop","abort","findPeer","id","options","Error","ERR_NO_ROUTERS_AVAILABLE","toString","ERR_FIND_SELF","output","map","router","source","Boolean","peerStore","NOT_FOUND","ERR_NOT_FOUND","key"],"sources":["../../src/peer-routing.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,MAAM,QAAQ,gBAAgB;AACvC,OAAOC,OAAO,MAAM,UAAU;AAC9B,SAASC,KAAK,EAAEC,QAAQ,QAAQ,aAAa;AAC7C,SACEC,cAAc,EACdC,WAAW,EACXC,YAAY,QACP,4BAA4B;AACnC,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,OAAOC,KAAK,MAAM,UAAU;AAC5B,SAASC,IAAI,QAAQ,SAAS;AAC9B,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,MAAM,MAAM,WAAW;AAC9B,SACEC,kBAAkB,EAClBC;AACF;AAAA,OACO,sBAAsB;AAC7B,SAASC,eAAe,QAAQ,QAAQ;AAQxC,MAAMC,GAAG,GAAGhB,MAAM,CAAC,qBAAqB,CAAC;AAkCzC,OAAM,MAAOiB,kBAAkB;EAQ7BC,YAAaC,UAAwC,EAAEC,IAAqB;IAC1E,IAAI,CAACD,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACE,OAAO,GAAGD,IAAI,CAACC,OAAO,IAAI,EAAE;IACjC,IAAI,CAACC,kBAAkB,GAAGF,IAAI,CAACG,cAAc,IAAI,EAAE;IACnD,IAAI,CAACC,OAAO,GAAG,KAAK;IAEpB,IAAI,CAACC,qBAAqB,GAAG,IAAI,CAACA,qBAAqB,CAACC,IAAI,CAAC,IAAI,CAAC;EACpE;EAEAC,SAASA,CAAA;IACP,OAAO,IAAI,CAACH,OAAO;EACrB;EAEA;;;EAGA,MAAMI,KAAKA,CAAA;IACT,IAAI,IAAI,CAACJ,OAAO,IAAI,IAAI,CAACH,OAAO,CAACQ,MAAM,KAAK,CAAC,IAAI,IAAI,CAACC,SAAS,IAAI,IAAI,IAAI,IAAI,CAACR,kBAAkB,CAACS,OAAO,KAAK,KAAK,EAAE;MACpH;;IAGF,IAAI,CAACD,SAAS,GAAGjB,kBAAkB,CACjC,IAAI,CAACY,qBAAqB,EAAE,IAAI,CAACH,kBAAkB,CAACU,QAAQ,EAAE,IAAI,CAACV,kBAAkB,CAACW,SAAS,CAChG;IAED,IAAI,CAACT,OAAO,GAAG,IAAI;EACrB;EAEA;;;EAGA,MAAMC,qBAAqBA,CAAA;IACzB,IAAI,IAAI,CAACS,eAAe,IAAI,IAAI,EAAE;MAChC;MACA;;IAGF,IAAI;MACF,IAAI,CAACA,eAAe,GAAG,IAAI3B,iBAAiB,CAAC,IAAI,CAACe,kBAAkB,CAACa,OAAO,IAAI,IAAI,CAAC;MAErF;MACA;MACA,IAAI;QACF;QACApB,eAAe,GAAGqB,QAAQ,EAAE,IAAI,CAACF,eAAe,CAACG,MAAM,CAAC;OACzD,CAAC,MAAM;MAER;MACA,MAAM1B,KAAK,CAAC,IAAI,CAAC2B,eAAe,CAAC,IAAI,CAACnB,UAAU,CAACoB,MAAM,CAACC,OAAO,EAAE,EAAE;QAAEH,MAAM,EAAE,IAAI,CAACH,eAAe,CAACG;MAAM,CAAE,CAAC,CAAC;KAC7G,CAAC,OAAOI,GAAQ,EAAE;MACjBzB,GAAG,CAAC0B,KAAK,CAACD,GAAG,CAAC;KACf,SAAS;MACR,IAAI,CAACP,eAAe,EAAES,KAAK,EAAE;MAC7B,IAAI,CAACT,eAAe,GAAGU,SAAS;;EAEpC;EAEA;;;EAGA,MAAMC,IAAIA,CAAA;IACR/B,oBAAoB,CAAC,IAAI,CAACgB,SAAS,CAAC;IAEpC;IACA,IAAI,CAACI,eAAe,EAAEY,KAAK,EAAE;IAE7B,IAAI,CAACtB,OAAO,GAAG,KAAK;EACtB;EAEA;;;EAGA,MAAMuB,QAAQA,CAAEC,EAAU,EAAEC,OAAsB;IAChD,IAAI,IAAI,CAAC5B,OAAO,CAACQ,MAAM,KAAK,CAAC,EAAE;MAC7B,MAAM5B,OAAO,CAAC,IAAIiD,KAAK,CAAC,2BAA2B,CAAC,EAAEhD,KAAK,CAACiD,wBAAwB,CAAC;;IAGvF,IAAIH,EAAE,CAACI,QAAQ,EAAE,KAAK,IAAI,CAACjC,UAAU,CAACoB,MAAM,CAACa,QAAQ,EAAE,EAAE;MACvD,MAAMnD,OAAO,CAAC,IAAIiD,KAAK,CAAC,6BAA6B,CAAC,EAAEhD,KAAK,CAACmD,aAAa,CAAC;;IAG9E,MAAMC,MAAM,GAAG,MAAM7C,IAAI,CACvBD,KAAK,CACH,GAAG,IAAI,CAACa,OAAO,CAACkC,GAAG,CAACC,MAAM,IAAK,mBAAgB;MAC7C,IAAI;QACF,MAAM,MAAMA,MAAM,CAACT,QAAQ,CAACC,EAAE,EAAEC,OAAO,CAAC;OACzC,CAAC,OAAOR,GAAG,EAAE;QACZzB,GAAG,CAAC0B,KAAK,CAACD,GAAG,CAAC;;IAElB,CAAC,CAAC,CAAE,CAAC,CACN,EACAgB,MAAM,IAAK7C,MAAM,CAAC6C,MAAM,EAAEC,OAAO,CAAC,EAClCD,MAAM,IAAKrD,cAAc,CAACqD,MAAM,EAAE,IAAI,CAACtC,UAAU,CAACwC,SAAS,CAAC,EAC7D,MAAOF,MAAM,IAAK,MAAM/C,KAAK,CAAC+C,MAAM,CAAC,CACtC;IAED,IAAIH,MAAM,IAAI,IAAI,EAAE;MAClB,OAAOA,MAAM;;IAGf,MAAMrD,OAAO,CAAC,IAAIiD,KAAK,CAAC/C,QAAQ,CAACyD,SAAS,CAAC,EAAE1D,KAAK,CAAC2D,aAAa,CAAC;EACnE;EAEA;;;EAGA,OAAQvB,eAAeA,CAAEwB,GAAe,EAAEb,OAAsB;IAC9D,IAAI,IAAI,CAAC5B,OAAO,CAACQ,MAAM,KAAK,CAAC,EAAE;MAC7B,MAAM5B,OAAO,CAAC,IAAIiD,KAAK,CAAC,2BAA2B,CAAC,EAAEhD,KAAK,CAACiD,wBAAwB,CAAC;;IAGvF,OAAQ1C,IAAI,CACVD,KAAK,CACH,GAAG,IAAI,CAACa,OAAO,CAACkC,GAAG,CAACC,MAAM,IAAIA,MAAM,CAAClB,eAAe,CAACwB,GAAG,EAAEb,OAAO,CAAC,CAAC,CACpE,EACAQ,MAAM,IAAKrD,cAAc,CAACqD,MAAM,EAAE,IAAI,CAACtC,UAAU,CAACwC,SAAS,CAAC,EAC5DF,MAAM,IAAKpD,WAAW,CAACoD,MAAM,CAAC,EAC9BA,MAAM,IAAKnD,YAAY,CAACmD,MAAM,CAAC,CACjC;EACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}