{"ast":null,"code":"import { createRepo as create } from 'ipfs-repo';\nimport { LevelDatastore } from 'datastore-level';\nimport { BlockstoreDatastoreAdapter } from 'blockstore-datastore-adapter';\nimport { MemoryLock } from 'ipfs-repo/locks/memory';\n\n/**\n * @typedef {import('ipfs-repo-migrations').ProgressCallback} MigrationProgressCallback\n */\n\n/**\n * @param {(...args: any[]) => void} print\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {object} options\n * @param {string} [options.path]\n * @param {boolean} [options.autoMigrate]\n * @param {MigrationProgressCallback} [options.onMigrationProgress]\n * @param {number} [options.peerStoreCacheSize]\n */\nexport function createRepo(print, codecs, options) {\n  const repoPath = options.path || 'ipfs';\n  return create(repoPath, codeOrName => codecs.getCodec(codeOrName), {\n    root: new LevelDatastore(repoPath, {\n      prefix: '',\n      version: 2\n    }),\n    blocks: new BlockstoreDatastoreAdapter(new LevelDatastore(`${repoPath}/blocks`, {\n      prefix: '',\n      version: 2\n    })),\n    datastore: new LevelDatastore(`${repoPath}/datastore`, {\n      prefix: '',\n      version: 2\n    }),\n    keys: new LevelDatastore(`${repoPath}/keys`, {\n      prefix: '',\n      version: 2\n    }),\n    pins: new LevelDatastore(`${repoPath}/pins`, {\n      prefix: '',\n      version: 2\n    })\n  }, {\n    autoMigrate: options.autoMigrate,\n    onMigrationProgress: options.onMigrationProgress || print,\n    repoLock: MemoryLock\n  });\n}","map":{"version":3,"names":["createRepo","create","LevelDatastore","BlockstoreDatastoreAdapter","MemoryLock","print","codecs","options","repoPath","path","codeOrName","getCodec","root","prefix","version","blocks","datastore","keys","pins","autoMigrate","onMigrationProgress","repoLock"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-core-config@0.7.1/node_modules/ipfs-core-config/src/repo.browser.js"],"sourcesContent":["import { createRepo as create } from 'ipfs-repo'\nimport { LevelDatastore } from 'datastore-level'\nimport { BlockstoreDatastoreAdapter } from 'blockstore-datastore-adapter'\nimport { MemoryLock } from 'ipfs-repo/locks/memory'\n\n/**\n * @typedef {import('ipfs-repo-migrations').ProgressCallback} MigrationProgressCallback\n */\n\n/**\n * @param {(...args: any[]) => void} print\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {object} options\n * @param {string} [options.path]\n * @param {boolean} [options.autoMigrate]\n * @param {MigrationProgressCallback} [options.onMigrationProgress]\n * @param {number} [options.peerStoreCacheSize]\n */\nexport function createRepo (print, codecs, options) {\n  const repoPath = options.path || 'ipfs'\n\n  return create(repoPath, (codeOrName) => codecs.getCodec(codeOrName), {\n    root: new LevelDatastore(repoPath, {\n      prefix: '',\n      version: 2\n    }),\n    blocks: new BlockstoreDatastoreAdapter(\n      new LevelDatastore(`${repoPath}/blocks`, {\n        prefix: '',\n        version: 2\n      })\n    ),\n    datastore: new LevelDatastore(`${repoPath}/datastore`, {\n      prefix: '',\n      version: 2\n    }),\n    keys: new LevelDatastore(`${repoPath}/keys`, {\n      prefix: '',\n      version: 2\n    }),\n    pins: new LevelDatastore(`${repoPath}/pins`, {\n      prefix: '',\n      version: 2\n    })\n  }, {\n    autoMigrate: options.autoMigrate,\n    onMigrationProgress: options.onMigrationProgress || print,\n    repoLock: MemoryLock\n  })\n}\n"],"mappings":"AAAA,SAASA,UAAU,IAAIC,MAAM,QAAQ,WAAW;AAChD,SAASC,cAAc,QAAQ,iBAAiB;AAChD,SAASC,0BAA0B,QAAQ,8BAA8B;AACzE,SAASC,UAAU,QAAQ,wBAAwB;;AAEnD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASJ,UAAUA,CAAEK,KAAK,EAAEC,MAAM,EAAEC,OAAO,EAAE;EAClD,MAAMC,QAAQ,GAAGD,OAAO,CAACE,IAAI,IAAI,MAAM;EAEvC,OAAOR,MAAM,CAACO,QAAQ,EAAGE,UAAU,IAAKJ,MAAM,CAACK,QAAQ,CAACD,UAAU,CAAC,EAAE;IACnEE,IAAI,EAAE,IAAIV,cAAc,CAACM,QAAQ,EAAE;MACjCK,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACX,CAAC,CAAC;IACFC,MAAM,EAAE,IAAIZ,0BAA0B,CACpC,IAAID,cAAc,CAAE,GAAEM,QAAS,SAAQ,EAAE;MACvCK,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACX,CAAC,CACH,CAAC;IACDE,SAAS,EAAE,IAAId,cAAc,CAAE,GAAEM,QAAS,YAAW,EAAE;MACrDK,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACX,CAAC,CAAC;IACFG,IAAI,EAAE,IAAIf,cAAc,CAAE,GAAEM,QAAS,OAAM,EAAE;MAC3CK,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACX,CAAC,CAAC;IACFI,IAAI,EAAE,IAAIhB,cAAc,CAAE,GAAEM,QAAS,OAAM,EAAE;MAC3CK,MAAM,EAAE,EAAE;MACVC,OAAO,EAAE;IACX,CAAC;EACH,CAAC,EAAE;IACDK,WAAW,EAAEZ,OAAO,CAACY,WAAW;IAChCC,mBAAmB,EAAEb,OAAO,CAACa,mBAAmB,IAAIf,KAAK;IACzDgB,QAAQ,EAAEjB;EACZ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}