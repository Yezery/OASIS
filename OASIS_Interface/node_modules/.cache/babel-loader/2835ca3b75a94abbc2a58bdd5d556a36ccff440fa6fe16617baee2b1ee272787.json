{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n// @ts-expect-error no types\nimport isoConstants from 'iso-constants';\nimport toBuffer from 'it-to-buffer';\nimport { isUint8ArrayList, Uint8ArrayList } from 'uint8arraylist';\nimport * as Headers from './pack-headers.js';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nconst {\n  S_IFMT,\n  S_IFBLK,\n  S_IFCHR,\n  S_IFDIR,\n  S_IFIFO,\n  S_IFLNK\n} = isoConstants;\nconst DMODE = parseInt('755', 8);\nconst FMODE = parseInt('644', 8);\nconst END_OF_TAR = new Uint8Array(1024);\nfunction modeToType(mode = 0) {\n  switch (mode & S_IFMT) {\n    case S_IFBLK:\n      return 'block-device';\n    case S_IFCHR:\n      return 'character-device';\n    case S_IFDIR:\n      return 'directory';\n    case S_IFIFO:\n      return 'fifo';\n    case S_IFLNK:\n      return 'symlink';\n    default:\n      return 'file';\n  }\n}\nfunction getPadding(size) {\n  size &= 511;\n  if (size !== 0) {\n    return END_OF_TAR.subarray(0, 512 - size);\n  }\n  return new Uint8Array(0);\n}\nfunction encode(header) {\n  if (header.pax == null) {\n    const encoded = Headers.encode(header);\n    if (encoded != null) {\n      return encoded;\n    }\n  }\n  return encodePax(header);\n}\nfunction encodePax(header) {\n  const paxHeader = Headers.encodePax(header);\n  const newHeader = {\n    name: 'PaxHeader',\n    mode: header.mode,\n    uid: header.uid,\n    gid: header.gid,\n    size: paxHeader.length,\n    mtime: header.mtime,\n    type: 'pax-header',\n    linkname: header.linkname,\n    uname: header.uname,\n    gname: header.gname,\n    devmajor: header.devmajor,\n    devminor: header.devminor\n  };\n  return new Uint8ArrayList(Headers.encode(newHeader) ?? new Uint8Array(0), paxHeader, getPadding(paxHeader.length), Headers.encode({\n    ...newHeader,\n    size: header.size,\n    type: header.type\n  }) ?? new Uint8Array(0)).subarray();\n}\nexport function pack() {\n  return async function* (source) {\n    for await (let {\n      header: partialHeader,\n      body\n    } of source) {\n      const header = {\n        ...partialHeader,\n        size: partialHeader.type === 'symlink' ? 0 : partialHeader.size ?? 0,\n        type: partialHeader.type ?? modeToType(partialHeader.mode),\n        mode: partialHeader.mode ?? (partialHeader.type === 'directory' ? DMODE : FMODE),\n        uid: partialHeader.uid ?? 0,\n        gid: partialHeader.gid ?? 0,\n        mtime: partialHeader.mtime ?? new Date()\n      };\n      if (typeof body === 'string') {\n        body = uint8ArrayFromString(body);\n      }\n      if (body instanceof Uint8Array || isUint8ArrayList(body)) {\n        header.size = body.length;\n        yield encode(header);\n        yield isUint8ArrayList(body) ? body.subarray() : body;\n        yield getPadding(header.size);\n        continue;\n      }\n      if (header.type === 'symlink' && header.linkname == null) {\n        if (body == null) {\n          throw new Error('type was symlink but no linkname or body specified');\n        }\n        header.linkname = uint8ArrayToString(await toBuffer(body));\n        yield encode(header);\n        continue;\n      }\n      yield encode(header);\n      if (header.type !== 'file' && header.type !== 'contiguous-file') {\n        continue;\n      }\n      let written = 0;\n      for await (const chunk of body ?? []) {\n        written += chunk.length; // eslint-disable-line @typescript-eslint/restrict-plus-operands\n        yield isUint8ArrayList(chunk) ? chunk.subarray() : chunk;\n      }\n      if (written !== header.size) {\n        // corrupting tar\n        throw new Error(`size mismatch, wrote ${written} of ${header.size} bytes`);\n      }\n      yield getPadding(header.size);\n    }\n    yield END_OF_TAR;\n  };\n}","map":{"version":3,"names":["isoConstants","toBuffer","isUint8ArrayList","Uint8ArrayList","Headers","fromString","uint8ArrayFromString","toString","uint8ArrayToString","S_IFMT","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","DMODE","parseInt","FMODE","END_OF_TAR","Uint8Array","modeToType","mode","getPadding","size","subarray","encode","header","pax","encoded","encodePax","paxHeader","newHeader","name","uid","gid","length","mtime","type","linkname","uname","gname","devmajor","devminor","pack","source","partialHeader","body","Date","Error","written","chunk"],"sources":["../../src/pack.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}