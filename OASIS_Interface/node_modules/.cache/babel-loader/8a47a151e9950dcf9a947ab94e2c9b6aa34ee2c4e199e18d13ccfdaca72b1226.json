{"ast":null,"code":"import { Key } from 'interface-datastore/key';\n// @ts-expect-error readme is unused\n// eslint-disable-next-line no-unused-vars\nimport readme from './shard-readme.js';\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('./types').Shard} Shard\n */\n\nexport const PREFIX = '/repo/flatfs/shard/';\nexport const SHARDING_FN = 'SHARDING';\nexport const README_FN = '_README';\n\n/**\n * @implements {Shard}\n */\nexport class ShardBase {\n  /**\n   * @param {any} param\n   */\n  constructor(param) {\n    this.param = param;\n    this.name = 'base';\n    this._padding = '';\n  }\n\n  /**\n   * @param {string} s\n   */\n  fun(s) {\n    return 'implement me';\n  }\n  toString() {\n    return `${PREFIX}v1/${this.name}/${this.param}`;\n  }\n}\n/**\n * @implements {Shard}\n */\nexport class Prefix extends ShardBase {\n  /**\n   * @param {number} prefixLen\n   */\n  constructor(prefixLen) {\n    super(prefixLen);\n    this._padding = ''.padStart(prefixLen, '_');\n    this.name = 'prefix';\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun(noslash) {\n    return (noslash + this._padding).slice(0, this.param);\n  }\n}\nexport class Suffix extends ShardBase {\n  /**\n   * @param {number} suffixLen\n   */\n  constructor(suffixLen) {\n    super(suffixLen);\n    this._padding = ''.padStart(suffixLen, '_');\n    this.name = 'suffix';\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun(noslash) {\n    const s = this._padding + noslash;\n    return s.slice(s.length - this.param);\n  }\n}\nexport class NextToLast extends ShardBase {\n  /**\n   * @param {number} suffixLen\n   */\n  constructor(suffixLen) {\n    super(suffixLen);\n    this._padding = ''.padStart(suffixLen + 1, '_');\n    this.name = 'next-to-last';\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun(noslash) {\n    const s = this._padding + noslash;\n    const offset = s.length - this.param - 1;\n    return s.slice(offset, offset + this.param);\n  }\n}\n\n/**\n * Convert a given string to the matching sharding function.\n *\n * @param {string} str\n * @returns {Shard}\n */\nexport function parseShardFun(str) {\n  str = str.trim();\n  if (str.length === 0) {\n    throw new Error('empty shard string');\n  }\n  if (!str.startsWith(PREFIX)) {\n    throw new Error(`invalid or no path prefix: ${str}`);\n  }\n  const parts = str.slice(PREFIX.length).split('/');\n  const version = parts[0];\n  if (version !== 'v1') {\n    throw new Error(`expect 'v1' version, got '${version}'`);\n  }\n  const name = parts[1];\n  if (!parts[2]) {\n    throw new Error('missing param');\n  }\n  const param = parseInt(parts[2], 10);\n  switch (name) {\n    case 'prefix':\n      return new Prefix(param);\n    case 'suffix':\n      return new Suffix(param);\n    case 'next-to-last':\n      return new NextToLast(param);\n    default:\n      throw new Error(`unkown sharding function: ${name}`);\n  }\n}\n\n/**\n * @param {string | Uint8Array} path\n * @param {Datastore} store\n */\nexport const readShardFun = async (path, store) => {\n  const key = new Key(path).child(new Key(SHARDING_FN));\n  // @ts-ignore\n  const get = typeof store.getRaw === 'function' ? store.getRaw.bind(store) : store.get.bind(store);\n  const res = await get(key);\n  return parseShardFun(new TextDecoder().decode(res || '').trim());\n};\nexport { default as readme } from './shard-readme.js';","map":{"version":3,"names":["Key","readme","PREFIX","SHARDING_FN","README_FN","ShardBase","constructor","param","name","_padding","fun","s","toString","Prefix","prefixLen","padStart","noslash","slice","Suffix","suffixLen","length","NextToLast","offset","parseShardFun","str","trim","Error","startsWith","parts","split","version","parseInt","readShardFun","path","store","key","child","get","getRaw","bind","res","TextDecoder","decode","default"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/datastore-core@8.0.4/node_modules/datastore-core/src/shard.js"],"sourcesContent":["import { Key } from 'interface-datastore/key'\n// @ts-expect-error readme is unused\n// eslint-disable-next-line no-unused-vars\nimport readme from './shard-readme.js'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('./types').Shard} Shard\n */\n\nexport const PREFIX = '/repo/flatfs/shard/'\nexport const SHARDING_FN = 'SHARDING'\nexport const README_FN = '_README'\n\n/**\n * @implements {Shard}\n */\nexport class ShardBase {\n  /**\n   * @param {any} param\n   */\n  constructor (param) {\n    this.param = param\n    this.name = 'base'\n    this._padding = ''\n  }\n\n  /**\n   * @param {string} s\n   */\n  fun (s) {\n    return 'implement me'\n  }\n\n  toString () {\n    return `${PREFIX}v1/${this.name}/${this.param}`\n  }\n}\n/**\n * @implements {Shard}\n */\nexport class Prefix extends ShardBase {\n  /**\n   * @param {number} prefixLen\n   */\n  constructor (prefixLen) {\n    super(prefixLen)\n    this._padding = ''.padStart(prefixLen, '_')\n    this.name = 'prefix'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    return (noslash + this._padding).slice(0, this.param)\n  }\n}\n\nexport class Suffix extends ShardBase {\n  /**\n   * @param {number} suffixLen\n   */\n  constructor (suffixLen) {\n    super(suffixLen)\n    this._padding = ''.padStart(suffixLen, '_')\n    this.name = 'suffix'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    const s = this._padding + noslash\n    return s.slice(s.length - this.param)\n  }\n}\n\nexport class NextToLast extends ShardBase {\n  /**\n   * @param {number} suffixLen\n   */\n  constructor (suffixLen) {\n    super(suffixLen)\n    this._padding = ''.padStart(suffixLen + 1, '_')\n    this.name = 'next-to-last'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    const s = this._padding + noslash\n    const offset = s.length - this.param - 1\n    return s.slice(offset, offset + this.param)\n  }\n}\n\n/**\n * Convert a given string to the matching sharding function.\n *\n * @param {string} str\n * @returns {Shard}\n */\nexport function parseShardFun (str) {\n  str = str.trim()\n\n  if (str.length === 0) {\n    throw new Error('empty shard string')\n  }\n\n  if (!str.startsWith(PREFIX)) {\n    throw new Error(`invalid or no path prefix: ${str}`)\n  }\n\n  const parts = str.slice(PREFIX.length).split('/')\n  const version = parts[0]\n\n  if (version !== 'v1') {\n    throw new Error(`expect 'v1' version, got '${version}'`)\n  }\n\n  const name = parts[1]\n\n  if (!parts[2]) {\n    throw new Error('missing param')\n  }\n\n  const param = parseInt(parts[2], 10)\n\n  switch (name) {\n    case 'prefix':\n      return new Prefix(param)\n    case 'suffix':\n      return new Suffix(param)\n    case 'next-to-last':\n      return new NextToLast(param)\n    default:\n      throw new Error(`unkown sharding function: ${name}`)\n  }\n}\n\n/**\n * @param {string | Uint8Array} path\n * @param {Datastore} store\n */\nexport const readShardFun = async (path, store) => {\n  const key = new Key(path).child(new Key(SHARDING_FN))\n  // @ts-ignore\n  const get = typeof store.getRaw === 'function' ? store.getRaw.bind(store) : store.get.bind(store)\n  const res = await get(key)\n  return parseShardFun(new TextDecoder().decode(res || '').trim())\n}\n\nexport { default as readme } from './shard-readme.js'\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}