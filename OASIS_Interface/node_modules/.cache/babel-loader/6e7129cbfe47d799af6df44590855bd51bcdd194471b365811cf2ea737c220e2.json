{"ast":null,"code":"import { getNFTStruct } from \"@/api/axios/contract\";\nimport { addMint } from \"@/api/axios/contract\";\nimport { savetoIPFS } from \"@/api/axios/contract\";\nimport Model from \"@/components/3DModelShow/3DModel.vue\";\nexport default {\n  components: {\n    Model\n  },\n  data() {\n    return {\n      // imageUrl: \"\",\n      // fileList: [],\n      // dialogImageUrl: \"\",\n      // dialogVisible: false,\n      // disabled: false,\n      // Name: \"\",\n      // Symbol: \"\",\n      // FirstNFTName: \"#0\",\n      // maximums: 1,\n      // active: 1,\n      // sumitEnable: true,\n      // isRepeatClick: true,\n      imageUrl: \"\",\n      dialogImageUrl: \"\",\n      dialogVisible: false,\n      disabled: false,\n      fileList: [],\n      seriesName: \"\",\n      symbol: \"\",\n      nftContractAddress: \"\",\n      Description: \"\",\n      maximums: 0,\n      NFTName: \"\",\n      to: this.$store.state.currentAddress,\n      sumitEnable: true,\n      isRepeatClick: true,\n      initModel: undefined,\n      model: undefined,\n      modelPath: \"\",\n      loading: false,\n      isShow3D: false,\n      isTypeOf3DModel: false,\n      isChanging: false\n    };\n  },\n  async mounted() {\n    this.nftContractAddress = this.$route.query.nftContract;\n    await this.init();\n  },\n  computed: {\n    canSubmit() {\n      if (this.seriesName == \"\" || this.symbol == \"\" || this.$refs.modelUpload.uploadFiles.length == 0 || this.NFTName == \"\" || !this.isTypeOf3DModel) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n  methods: {\n    async init() {\n      let contract = await getNFTStruct(this.nftContractAddress);\n      await contract.methods.symbol().call().then(re => {\n        this.symbol = re;\n      });\n      await contract.methods.name().call().then(re => {\n        this.seriesName = re;\n      });\n      await contract.methods._maximums().call().then(re => {\n        this.maximums = re;\n      });\n    },\n    seeModel(data) {\n      this.initModel = data;\n    },\n    async getModel() {\n      this.isShow3D = true;\n      this.loading = true;\n      let ipfsHash;\n      await savetoIPFS(this.$refs.modelUpload.uploadFiles).then(re => {\n        ipfsHash = re;\n      });\n      this.loading = false;\n      this.modelPath = `http://10.39.5.194:8080/ipfs/${ipfsHash}?filename=${this.FirstNFTName}`;\n    },\n    checkFileType() {\n      let prix = this.getFileExtendingName(this.$refs.modelUpload.uploadFiles[0].raw.name);\n      if (prix == \".gltf\" || prix == \".glb\") {\n        this.FirstNFTName = this.$refs.modelUpload.uploadFiles[0].name.replace(/(.*\\/)*([^.]+).*/gi, \"$2\");\n        this.isTypeOf3DModel = true;\n        this.getModel();\n      } else {\n        this.handleRemove();\n        this.$notify.error({\n          title: \"请上传gltf或glb格式的模型\",\n          position: \"top-left\",\n          offset: 200\n        });\n        this.isTypeOf3DModel = false;\n      }\n    },\n    getFileExtendingName(filename) {\n      // 文件扩展名匹配正则\n      var reg = /.[^.]+$/;\n      var matches = reg.exec(filename);\n      if (matches) {\n        return matches[0];\n      }\n      return \"\";\n    },\n    async addMint() {\n      if (this.isRepeatClick) {\n        this.isRepeatClick = false;\n        try {\n          this.isChanging = true;\n          await addMint(this.to, this.nftContractAddress, this.NFTName, \"3D\", this.$refs.modelUpload.uploadFiles, this.seriesName, this.symbol, this.maximums);\n          this.isChanging = false;\n          this.$notify({\n            title: \"添加成功\",\n            type: \"success\",\n            position: \"top-left\",\n            offset: 200\n          });\n          this.fileList = [];\n          this.NFTName = \"\";\n          this.maximums = 1;\n          this.Description = \"\";\n          this.handleRemove();\n        } catch (error) {\n          this.isChanging = false;\n          this.$notify.error({\n            title: \"添加失败\",\n            position: \"top-left\",\n            offset: 200\n          });\n          return;\n        }\n      } else {\n        this.$notify({\n          title: \"请勿操作频繁\",\n          type: \"warning\",\n          position: \"top-left\",\n          offset: 200\n        });\n      }\n      setTimeout(() => {\n        this.isRepeatClick = true;\n      }, 5000);\n    },\n    handleRemove() {\n      this.$refs.modelUpload.clearFiles();\n      this.isShow3D = false;\n      this.isTypeOf3DModel = false;\n    }\n  }\n};","map":{"version":3,"names":["getNFTStruct","addMint","savetoIPFS","Model","components","data","imageUrl","dialogImageUrl","dialogVisible","disabled","fileList","seriesName","symbol","nftContractAddress","Description","maximums","NFTName","to","$store","state","currentAddress","sumitEnable","isRepeatClick","initModel","undefined","model","modelPath","loading","isShow3D","isTypeOf3DModel","isChanging","mounted","$route","query","nftContract","init","computed","canSubmit","$refs","modelUpload","uploadFiles","length","methods","contract","call","then","re","name","_maximums","seeModel","getModel","ipfsHash","FirstNFTName","checkFileType","prix","getFileExtendingName","raw","replace","handleRemove","$notify","error","title","position","offset","filename","reg","matches","exec","type","setTimeout","clearFiles"],"sources":["src/views/main/mint/addMint3DNFT.vue"],"sourcesContent":["<template>\n  <div\n    class=\"MainWindow animate__animated animate__fadeInRight\"\n    v-loading.fullscreen.lock=\"isChanging\"\n    element-loading-text=\"交易进行中\"\n    element-loading-spinner=\"el-icon-loading\"\n    element-loading-background=\"rgba(0, 0, 0, 0.8)\"\n  >\n    <div class=\"mintNFTFrame \">\n      <div style=\"width: 100%;text-align: left;margin-left: 5%;margin-top: 3%; \">\n        <router-link :to=\"{ name: 'userhome' }\">\n          <i\n            class=\"el-icon-arrow-left\"\n            style=\"font-size: 2vw;color: var(--Dark--);\"\n          />\n        </router-link>\n      </div>\n      <div class=\"mintNFTFrameTop\">\n        <div class=\"mintTitle\">\n          Add 3DNFT \n        </div>\n        <div class=\"mintNFTFrameTop_tipsBox\">\n          为你的系列增加 3DNFT\n        </div>\n      </div>\n      <div class=\"mintNFTFrameMain\">\n        <div class=\"mintNFTFrameMain_right\">\n          <div class=\"selectBox\">\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  <span style=\"color: red\">*</span>Model file\n                </div>\n                <div class=\"tipsTitle2\">\n                  模型文件 (仅支持 .gltf 嵌入式格式与 .glb非分离格式)\n                </div>\n              </div>\n              <div class=\"imageUpLoad\">\n                <el-upload\n                  class=\"upload-demo\"\n                  ref=\"modelUpload\"\n                  :on-remove=\"handleRemove\"\n                  :file-list=\"fileList\"\n                  :auto-upload=\"false\"\n                  action=\"#\"\n                  :lmint=\"1\"\n                  :on-change=\"checkFileType\"\n                >\n                  <el-button\n                    class=\"select3DFile\"\n                    slot=\"trigger\"\n                    @click=\"handleRemove\"\n                  >\n                    选取3D文件\n                  </el-button>\n                </el-upload>\n                <div\n                  class=\"show3DBox\"\n                  v-loading=\"loading\"\n                  v-if=\"isShow3D\"\n                  element-loading-text=\"准备模型中...\"\n                >\n                  <Model\n                    :model-path=\"modelPath\"\n                    @initModel=\"seeModel\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  Name (NFT系列名)\n                </div>\n                <div class=\"tipsTitle2\">\n                  <span style=\"font-size: 1.5vw;font-weight: 800;margin-top: 2%;\"> {{ seriesName }}</span>\n                </div>\n              </div>\n            </div>\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  Symbol (该系列NFT代币符号)\n                </div>\n                <div class=\"tipsTitle2\">\n                  <span style=\"font-size: 1.5vw;font-weight: 800;margin-top: 2%\">{{ symbol }}</span>\n                </div>\n              </div>\n            </div>\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  <span style=\"color: red\">*</span> Add 3DNFT Name\n                </div>\n                <div class=\"tipsTitle2\">\n                  新增加的 3DNFT 名称\n                </div>\n              </div>\n              <el-input\n                v-model=\"NFTName\"\n                placeholder=\"Please enter the name of  3DNFT\"\n              />\n            </div>\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  As a gift (optional)\n                </div>\n                <div class=\"tipsTitle2\">\n                  作为礼物赠送（可选）\n                </div>\n              </div>\n              <el-input\n                placeholder=\"请输入赠送者地址\"\n                v-model=\"to\"\n              >\n                <template slot=\"prepend\">\n                  <img\n                    width=\"25px\"\n                    height=\"25px\"\n                    src=\"@/assets/SVG/Love.svg\"\n                    alt=\"SVG Image\"\n                    style=\"color:\"\n                  >\n                </template>\n              </el-input>\n            </div>\n            <div class=\"select\">\n              <div class=\"sumbitBox\">\n                <el-button\n                  @click=\"addMint\"\n                  :disabled=\"!canSubmit\"\n                  class=\"createButton\"\n                >\n                  添加\n                </el-button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { getNFTStruct } from \"@/api/axios/contract\";\n  import { addMint } from \"@/api/axios/contract\";\n  import { savetoIPFS } from \"@/api/axios/contract\";\n  import Model from \"@/components/3DModelShow/3DModel.vue\";\n  export default {\n    components: {\n      Model,\n    },\n    data() {\n      return {\n        // imageUrl: \"\",\n        // fileList: [],\n        // dialogImageUrl: \"\",\n        // dialogVisible: false,\n        // disabled: false,\n        // Name: \"\",\n        // Symbol: \"\",\n        // FirstNFTName: \"#0\",\n        // maximums: 1,\n        // active: 1,\n        // sumitEnable: true,\n        // isRepeatClick: true,\n        imageUrl: \"\",\n        dialogImageUrl: \"\",\n        dialogVisible: false,\n        disabled: false,\n        fileList: [],\n        seriesName: \"\",\n        symbol: \"\",\n        nftContractAddress: \"\",\n        Description: \"\",\n        maximums: 0,\n        NFTName: \"\",\n        to: this.$store.state.currentAddress,\n        sumitEnable: true,\n        isRepeatClick: true,\n\n        initModel: undefined,\n        model: undefined,\n        modelPath: \"\",\n        loading: false,\n        isShow3D: false,\n        isTypeOf3DModel: false,\n        isChanging: false,\n      };\n    },\n    async mounted() {\n      this.nftContractAddress = this.$route.query.nftContract;\n      await this.init();\n    },\n    computed: {\n      canSubmit() {\n        if (\n          this.seriesName == \"\" ||\n          this.symbol == \"\" ||\n          this.$refs.modelUpload.uploadFiles.length == 0 ||\n          this.NFTName == \"\" ||\n          !this.isTypeOf3DModel\n        ) {\n          return false;\n        } else {\n          return true;\n        }\n      },\n    },\n\n    methods: {\n      async init() {\n        let contract = await getNFTStruct(this.nftContractAddress);\n        await contract.methods\n          .symbol()\n          .call()\n          .then((re) => {\n            this.symbol = re;\n          });\n        await contract.methods\n          .name()\n          .call()\n          .then((re) => {\n            this.seriesName = re;\n          });\n        await contract.methods\n          ._maximums()\n          .call()\n          .then((re) => {\n            this.maximums = re;\n          });\n      },\n      seeModel(data) {\n        this.initModel = data;\n      },\n      async getModel() {\n        this.isShow3D = true;\n        this.loading = true;\n\n        let ipfsHash;\n        await savetoIPFS(this.$refs.modelUpload.uploadFiles).then((re) => {\n          ipfsHash = re;\n        });\n        this.loading = false;\n        this.modelPath = `http://10.39.5.194:8080/ipfs/${ipfsHash}?filename=${this.FirstNFTName}`;\n      },\n      checkFileType() {\n        let prix = this.getFileExtendingName(\n          this.$refs.modelUpload.uploadFiles[0].raw.name\n        );\n        if (prix == \".gltf\" || prix == \".glb\") {\n          this.FirstNFTName = this.$refs.modelUpload.uploadFiles[0].name.replace(\n            /(.*\\/)*([^.]+).*/gi,\n            \"$2\"\n          );\n          this.isTypeOf3DModel = true;\n          this.getModel();\n        } else {\n          this.handleRemove();\n          this.$notify.error({\n            title: \"请上传gltf或glb格式的模型\",\n            position: \"top-left\",\n            offset: 200,\n          });\n          this.isTypeOf3DModel = false;\n        }\n      },\n      getFileExtendingName(filename) {\n        // 文件扩展名匹配正则\n        var reg = /.[^.]+$/;\n        var matches = reg.exec(filename);\n        if (matches) {\n          return matches[0];\n        }\n        return \"\";\n      },\n      async addMint() {\n        if (this.isRepeatClick) {\n          this.isRepeatClick = false;\n          try {\n            this.isChanging=true\n            await addMint(\n              this.to,\n              this.nftContractAddress,\n              this.NFTName,\n              \"3D\",\n              this.$refs.modelUpload.uploadFiles,\n              this.seriesName,\n              this.symbol,\n              this.maximums\n            );\n            this.isChanging=false\n            this.$notify({\n              title: \"添加成功\",\n              type: \"success\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            \n            this.fileList = [];\n            this.NFTName = \"\";\n            this.maximums = 1;\n            this.Description = \"\";\n            this.handleRemove()\n          } catch (error) {\n            this.isChanging=false\n            this.$notify.error({\n              title: \"添加失败\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            return\n          }\n        } else {\n          this.$notify({\n            title: \"请勿操作频繁\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200,\n          });\n        }\n\n        setTimeout(() => {\n          this.isRepeatClick = true;\n        }, 5000);\n      },\n      handleRemove() {\n        this.$refs.modelUpload.clearFiles();\n        this.isShow3D = false;\n        this.isTypeOf3DModel = false;\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"@/style/mintPage/addMint3DNFT.scss\";\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}