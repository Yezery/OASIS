{"ast":null,"code":"'use strict';\n\nvar constants = require('./constants');\nmodule.exports = function (data, width, height, options) {\n  var outHasAlpha = options.colorType === constants.COLORTYPE_COLOR_ALPHA;\n  if (options.inputHasAlpha && outHasAlpha) {\n    return data;\n  }\n  if (!options.inputHasAlpha && !outHasAlpha) {\n    return data;\n  }\n  var outBpp = outHasAlpha ? 4 : 3;\n  var outData = new Buffer(width * height * outBpp);\n  var inBpp = options.inputHasAlpha ? 4 : 3;\n  var inIndex = 0;\n  var outIndex = 0;\n  var bgColor = options.bgColor || {};\n  if (bgColor.red === undefined) {\n    bgColor.red = 255;\n  }\n  if (bgColor.green === undefined) {\n    bgColor.green = 255;\n  }\n  if (bgColor.blue === undefined) {\n    bgColor.blue = 255;\n  }\n  for (var y = 0; y < height; y++) {\n    for (var x = 0; x < width; x++) {\n      var red = data[inIndex];\n      var green = data[inIndex + 1];\n      var blue = data[inIndex + 2];\n      var alpha;\n      if (options.inputHasAlpha) {\n        alpha = data[inIndex + 3];\n        if (!outHasAlpha) {\n          alpha /= 255;\n          red = Math.min(Math.max(Math.round((1 - alpha) * bgColor.red + alpha * red), 0), 255);\n          green = Math.min(Math.max(Math.round((1 - alpha) * bgColor.green + alpha * green), 0), 255);\n          blue = Math.min(Math.max(Math.round((1 - alpha) * bgColor.blue + alpha * blue), 0), 255);\n        }\n      } else {\n        alpha = 255;\n      }\n      outData[outIndex] = red;\n      outData[outIndex + 1] = green;\n      outData[outIndex + 2] = blue;\n      if (outHasAlpha) {\n        outData[outIndex + 3] = alpha;\n      }\n      inIndex += inBpp;\n      outIndex += outBpp;\n    }\n  }\n  return outData;\n};","map":{"version":3,"names":["constants","require","module","exports","data","width","height","options","outHasAlpha","colorType","COLORTYPE_COLOR_ALPHA","inputHasAlpha","outBpp","outData","Buffer","inBpp","inIndex","outIndex","bgColor","red","undefined","green","blue","y","x","alpha","Math","min","max","round"],"sources":["/Users/yezery/Desktop/OASIS/OASIS_Interface/node_modules/.store/pngjs-nozlib@1.0.0/node_modules/pngjs-nozlib/lib/bitpacker.js"],"sourcesContent":["'use strict';\n\nvar constants = require('./constants');\n\nmodule.exports = function(data, width, height, options) {\n  var outHasAlpha = options.colorType === constants.COLORTYPE_COLOR_ALPHA;\n  if (options.inputHasAlpha && outHasAlpha) {\n    return data;\n  }\n  if (!options.inputHasAlpha && !outHasAlpha) {\n    return data;\n  }\n\n  var outBpp = outHasAlpha ? 4 : 3;\n  var outData = new Buffer(width * height * outBpp);\n  var inBpp = options.inputHasAlpha ? 4 : 3;\n  var inIndex = 0;\n  var outIndex = 0;\n\n  var bgColor = options.bgColor || {};\n  if (bgColor.red === undefined) {\n    bgColor.red = 255;\n  }\n  if (bgColor.green === undefined) {\n    bgColor.green = 255;\n  }\n  if (bgColor.blue === undefined) {\n    bgColor.blue = 255;\n  }\n\n  for (var y = 0; y < height; y++) {\n    for (var x = 0; x < width; x++) {\n      var red = data[inIndex];\n      var green = data[inIndex + 1];\n      var blue = data[inIndex + 2];\n\n      var alpha;\n      if (options.inputHasAlpha) {\n        alpha = data[inIndex + 3];\n        if (!outHasAlpha) {\n          alpha /= 255;\n          red = Math.min(Math.max(Math.round((1 - alpha) * bgColor.red + alpha * red), 0), 255);\n          green = Math.min(Math.max(Math.round((1 - alpha) * bgColor.green + alpha * green), 0), 255);\n          blue = Math.min(Math.max(Math.round((1 - alpha) * bgColor.blue + alpha * blue), 0), 255);\n        }\n      }\n      else {\n        alpha = 255;\n      }\n\n      outData[outIndex] = red;\n      outData[outIndex + 1] = green;\n      outData[outIndex + 2] = blue;\n      if (outHasAlpha) {\n        outData[outIndex + 3] = alpha;\n      }\n\n      inIndex += inBpp;\n      outIndex += outBpp;\n    }\n  }\n\n  return outData;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}