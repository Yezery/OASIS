{"ast":null,"code":"const word = '[a-fA-F\\\\d:]';\nconst boundry = options => options && options.includeBoundaries ? `(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))` : '';\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\nconst v6segment = '[a-fA-F\\\\d]{1,4}';\nconst v6 = `\n(?:\n(?:${v6segment}:){7}(?:${v6segment}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6segment}:){6}(?:${v4}|:${v6segment}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6segment}:){5}(?::${v4}|(?::${v6segment}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6segment}:){4}(?:(?::${v6segment}){0,1}:${v4}|(?::${v6segment}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6segment}:){3}(?:(?::${v6segment}){0,2}:${v4}|(?::${v6segment}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6segment}:){2}(?:(?::${v6segment}){0,3}:${v4}|(?::${v6segment}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6segment}:){1}(?:(?::${v6segment}){0,4}:${v4}|(?::${v6segment}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6segment}){0,5}:${v4}|(?::${v6segment}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\n\n// Pre-compile only the exact regexes because adding a global flag make regexes stateful\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\nconst v4exact = new RegExp(`^${v4}$`);\nconst v6exact = new RegExp(`^${v6}$`);\nconst ipRegex = options => options && options.exact ? v46Exact : new RegExp(`(?:${boundry(options)}${v4}${boundry(options)})|(?:${boundry(options)}${v6}${boundry(options)})`, 'g');\nipRegex.v4 = options => options && options.exact ? v4exact : new RegExp(`${boundry(options)}${v4}${boundry(options)}`, 'g');\nipRegex.v6 = options => options && options.exact ? v6exact : new RegExp(`${boundry(options)}${v6}${boundry(options)}`, 'g');\nexport default ipRegex;","map":{"version":3,"names":["word","boundry","options","includeBoundaries","v4","v6segment","v6","replace","trim","v46Exact","RegExp","v4exact","v6exact","ipRegex","exact"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ip-regex@5.0.0/node_modules/ip-regex/index.js"],"sourcesContent":["const word = '[a-fA-F\\\\d:]';\n\nconst boundry = options => options && options.includeBoundaries\n\t? `(?:(?<=\\\\s|^)(?=${word})|(?<=${word})(?=\\\\s|$))`\n\t: '';\n\nconst v4 = '(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}';\n\nconst v6segment = '[a-fA-F\\\\d]{1,4}';\n\nconst v6 = `\n(?:\n(?:${v6segment}:){7}(?:${v6segment}|:)|                                    // 1:2:3:4:5:6:7::  1:2:3:4:5:6:7:8\n(?:${v6segment}:){6}(?:${v4}|:${v6segment}|:)|                             // 1:2:3:4:5:6::    1:2:3:4:5:6::8   1:2:3:4:5:6::8  1:2:3:4:5:6::1.2.3.4\n(?:${v6segment}:){5}(?::${v4}|(?::${v6segment}){1,2}|:)|                   // 1:2:3:4:5::      1:2:3:4:5::7:8   1:2:3:4:5::8    1:2:3:4:5::7:1.2.3.4\n(?:${v6segment}:){4}(?:(?::${v6segment}){0,1}:${v4}|(?::${v6segment}){1,3}|:)| // 1:2:3:4::        1:2:3:4::6:7:8   1:2:3:4::8      1:2:3:4::6:7:1.2.3.4\n(?:${v6segment}:){3}(?:(?::${v6segment}){0,2}:${v4}|(?::${v6segment}){1,4}|:)| // 1:2:3::          1:2:3::5:6:7:8   1:2:3::8        1:2:3::5:6:7:1.2.3.4\n(?:${v6segment}:){2}(?:(?::${v6segment}){0,3}:${v4}|(?::${v6segment}){1,5}|:)| // 1:2::            1:2::4:5:6:7:8   1:2::8          1:2::4:5:6:7:1.2.3.4\n(?:${v6segment}:){1}(?:(?::${v6segment}){0,4}:${v4}|(?::${v6segment}){1,6}|:)| // 1::              1::3:4:5:6:7:8   1::8            1::3:4:5:6:7:1.2.3.4\n(?::(?:(?::${v6segment}){0,5}:${v4}|(?::${v6segment}){1,7}|:))             // ::2:3:4:5:6:7:8  ::2:3:4:5:6:7:8  ::8             ::1.2.3.4\n)(?:%[0-9a-zA-Z]{1,})?                                             // %eth0            %1\n`.replace(/\\s*\\/\\/.*$/gm, '').replace(/\\n/g, '').trim();\n\n// Pre-compile only the exact regexes because adding a global flag make regexes stateful\nconst v46Exact = new RegExp(`(?:^${v4}$)|(?:^${v6}$)`);\nconst v4exact = new RegExp(`^${v4}$`);\nconst v6exact = new RegExp(`^${v6}$`);\n\nconst ipRegex = options => options && options.exact\n\t? v46Exact\n\t: new RegExp(`(?:${boundry(options)}${v4}${boundry(options)})|(?:${boundry(options)}${v6}${boundry(options)})`, 'g');\n\nipRegex.v4 = options => options && options.exact ? v4exact : new RegExp(`${boundry(options)}${v4}${boundry(options)}`, 'g');\nipRegex.v6 = options => options && options.exact ? v6exact : new RegExp(`${boundry(options)}${v6}${boundry(options)}`, 'g');\n\nexport default ipRegex;\n"],"mappings":"AAAA,MAAMA,IAAI,GAAG,cAAc;AAE3B,MAAMC,OAAO,GAAGC,OAAO,IAAIA,OAAO,IAAIA,OAAO,CAACC,iBAAiB,GAC3D,mBAAkBH,IAAK,SAAQA,IAAK,aAAY,GACjD,EAAE;AAEL,MAAMI,EAAE,GAAG,gGAAgG;AAE3G,MAAMC,SAAS,GAAG,kBAAkB;AAEpC,MAAMC,EAAE,GAAI;AACZ;AACA,KAAKD,SAAU,WAAUA,SAAU;AACnC,KAAKA,SAAU,WAAUD,EAAG,KAAIC,SAAU;AAC1C,KAAKA,SAAU,YAAWD,EAAG,QAAOC,SAAU;AAC9C,KAAKA,SAAU,eAAcA,SAAU,UAASD,EAAG,QAAOC,SAAU;AACpE,KAAKA,SAAU,eAAcA,SAAU,UAASD,EAAG,QAAOC,SAAU;AACpE,KAAKA,SAAU,eAAcA,SAAU,UAASD,EAAG,QAAOC,SAAU;AACpE,KAAKA,SAAU,eAAcA,SAAU,UAASD,EAAG,QAAOC,SAAU;AACpE,aAAaA,SAAU,UAASD,EAAG,QAAOC,SAAU;AACpD;AACA,CAAC,CAACE,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC;;AAEvD;AACA,MAAMC,QAAQ,GAAG,IAAIC,MAAM,CAAE,OAAMN,EAAG,UAASE,EAAG,IAAG,CAAC;AACtD,MAAMK,OAAO,GAAG,IAAID,MAAM,CAAE,IAAGN,EAAG,GAAE,CAAC;AACrC,MAAMQ,OAAO,GAAG,IAAIF,MAAM,CAAE,IAAGJ,EAAG,GAAE,CAAC;AAErC,MAAMO,OAAO,GAAGX,OAAO,IAAIA,OAAO,IAAIA,OAAO,CAACY,KAAK,GAChDL,QAAQ,GACR,IAAIC,MAAM,CAAE,MAAKT,OAAO,CAACC,OAAO,CAAE,GAAEE,EAAG,GAAEH,OAAO,CAACC,OAAO,CAAE,QAAOD,OAAO,CAACC,OAAO,CAAE,GAAEI,EAAG,GAAEL,OAAO,CAACC,OAAO,CAAE,GAAE,EAAE,GAAG,CAAC;AAErHW,OAAO,CAACT,EAAE,GAAGF,OAAO,IAAIA,OAAO,IAAIA,OAAO,CAACY,KAAK,GAAGH,OAAO,GAAG,IAAID,MAAM,CAAE,GAAET,OAAO,CAACC,OAAO,CAAE,GAAEE,EAAG,GAAEH,OAAO,CAACC,OAAO,CAAE,EAAC,EAAE,GAAG,CAAC;AAC3HW,OAAO,CAACP,EAAE,GAAGJ,OAAO,IAAIA,OAAO,IAAIA,OAAO,CAACY,KAAK,GAAGF,OAAO,GAAG,IAAIF,MAAM,CAAE,GAAET,OAAO,CAACC,OAAO,CAAE,GAAEI,EAAG,GAAEL,OAAO,CAACC,OAAO,CAAE,EAAC,EAAE,GAAG,CAAC;AAE3H,eAAeW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}