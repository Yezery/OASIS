{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getSaleListByContractAddress } from \"@/api/axios/Sale\";\nimport { getNFTStruct, Buy } from \"@/api/axios/contract\";\nexport default {\n  name: \"NFTInf\",\n  data() {\n    return {\n      NFTInf: null,\n      NFTMetaData: null,\n      NFTContract: null,\n      NFTContractAddress: null,\n      NFTSaleId: 0,\n      NFTTokenId: 0,\n      NFTPrice: 0,\n      NFTSeller: \"\",\n      NFTIsActive: false,\n      supplyer: \"\",\n      NFTName: \"\",\n      NFTImage: \"#\",\n      symbol: null,\n      NFTSeries: \"\",\n      description: \"\",\n      maximums: 0,\n      currentId: 0,\n      activeTab: \"first\",\n      seriesNFTArrays: [],\n      sale: {},\n      bought: false,\n      MessageShow: false,\n      changeNFT: {},\n      opt: 0\n    };\n  },\n  watch: {},\n  mounted() {\n    this.init();\n  },\n  methods: {\n    async init() {\n      if (typeof this.$store.state.marketNFTInf === typeof \"\") {\n        console.log(this.$store.state.marketNFTInf);\n        try {\n          this.NFTInf = await JSON.parse(this.$store.state.marketNFTInf);\n          console.log(this.NFTInf);\n          this.NFTMetaData = await JSON.parse(this.NFTInf[6]);\n          this.NFTContractAddress = this.NFTInf[2];\n          this.NFTSaleId = this.NFTInf[0];\n          this.NFTSeller = this.NFTInf[1];\n          this.NFTTokenId = this.NFTInf[3];\n          this.NFTPrice = this.NFTInf[4];\n          this.NFTName = this.NFTMetaData.name;\n          this.supplyer = `${this.NFTInf[1].slice(0, 5)}...${this.NFTInf[1].slice(37)}`;\n          this.NFTIsActive = this.NFTInf[5];\n          this.NFTImage = this.NFTMetaData.image;\n          this.description = this.NFTMetaData.description;\n          await getNFTStruct(this.NFTInf[2]).then(re => {\n            this.NFTContract = re;\n          });\n          await this.NFTContract.methods.symbol().call().then(re => {\n            this.symbol = re;\n          });\n          await this.NFTContract.methods.name().call().then(re => {\n            this.NFTSeries = re;\n          });\n          await this.NFTContract.methods._maximums().call().then(re => {\n            this.maximums = re;\n          });\n          await this.NFTContract.methods._currentId().call().then(re => {\n            this.currentId = re;\n          });\n          await this.getThisSeriesNFT();\n          this.makeSale();\n        } catch (error) {\n          console.log(error);\n        }\n      } else {\n        console.log(this.$store.state.marketNFTInf);\n        try {\n          this.NFTInf = this.$store.state.marketNFTInf;\n          this.NFTContractAddress = this.NFTInf.nftAddress;\n          this.NFTSaleId = this.NFTInf.saleId;\n          this.NFTSeller = this.NFTInf.currentowner;\n          this.NFTTokenId = this.NFTInf.tokenId;\n          this.NFTPrice = this.NFTInf.price;\n          this.NFTName = this.NFTInf.nftName;\n          this.NFTIsActive = this.NFTInf.isActive;\n          this.supplyer = `${this.NFTInf.ownerAddress.slice(0, 5)}...${this.NFTInf.ownerAddress.slice(37)}`;\n          this.NFTImage = this.NFTInf.ipfsPath;\n          this.description = this.NFTInf.description;\n          await getNFTStruct(this.NFTContractAddress).then(re => {\n            this.NFTContract = re;\n          });\n          await this.NFTContract.methods.symbol().call().then(re => {\n            this.symbol = re;\n          });\n          await this.NFTContract.methods.name().call().then(re => {\n            this.NFTSeries = re;\n          });\n          await this.NFTContract.methods._maximums().call().then(re => {\n            this.maximums = re;\n          });\n          await this.NFTContract.methods._currentId().call().then(re => {\n            this.currentId = re;\n          });\n          await this.getThisSeriesNFT();\n          this.makeSale();\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    },\n    OpenMessageBox(NFT) {\n      this.changeNFT = NFT;\n      this.MessageShow = true;\n    },\n    CloseMessageBox() {\n      this.MessageShow = false;\n      this.changeNFT = {};\n      this.$notify({\n        title: `您已取消购买`,\n        type: \"warning\",\n        position: \"top-left\",\n        offset: 200\n      });\n    },\n    makeSale() {\n      this.sale = {\n        isActive: true,\n        nftAddress: this.NFTContractAddress,\n        price: this.$store.state.Web3.utils.fromWei(this.NFTPrice, \"ether\"),\n        saleId: Number(this.NFTSaleId),\n        ownerAddress: this.NFTSeller,\n        tokenId: Number(this.NFTTokenId)\n      };\n    },\n    async getThisSeriesNFT() {\n      var NFTDto = {\n        nftAddress: this.NFTContractAddress\n      };\n      await getSaleListByContractAddress(NFTDto).then(re => {\n        this.seriesNFTArrays = re.data.data;\n      });\n    },\n    async Buy() {\n      try {\n        await Buy(this.changeNFT);\n        this.$notify({\n          title: \"购买成功\",\n          type: \"success\",\n          position: \"top-left\",\n          offset: 200\n        });\n        this.bought = true;\n      } catch (error) {\n        this.$notify.error({\n          title: \"购买失败\",\n          position: \"top-left\",\n          offset: 200\n        });\n      }\n    },\n    toMarketMain() {\n      this.$router.push(\"/\");\n      this.$store.commit(\"setIsSearch\", false);\n    }\n  }\n};","map":{"version":3,"names":["getSaleListByContractAddress","getNFTStruct","Buy","name","data","NFTInf","NFTMetaData","NFTContract","NFTContractAddress","NFTSaleId","NFTTokenId","NFTPrice","NFTSeller","NFTIsActive","supplyer","NFTName","NFTImage","symbol","NFTSeries","description","maximums","currentId","activeTab","seriesNFTArrays","sale","bought","MessageShow","changeNFT","opt","watch","mounted","init","methods","$store","state","marketNFTInf","console","log","JSON","parse","slice","image","then","re","call","_maximums","_currentId","getThisSeriesNFT","makeSale","error","nftAddress","saleId","currentowner","tokenId","price","nftName","isActive","ownerAddress","ipfsPath","OpenMessageBox","NFT","CloseMessageBox","$notify","title","type","position","offset","Web3","utils","fromWei","Number","NFTDto","toMarketMain","$router","push","commit"],"sources":["src/views/market/NFTInf.vue"],"sourcesContent":["<template>\n  <div class=\"NFTInfMainBox animate__animated animate__fadeInDown\">\n    <div class=\"NFTInfMain\">\n      <div\n        class=\"NFTInfBackground\"\n        @click=\"toMarketMain\"\n      >\n        <span class=\"toMarketmain\">\n          <i\n            class=\"el-icon-arrow-left\"\n            style=\"font-size: 3vw;\"\n          />\n        </span>\n      </div>\n      <div class=\"NFTInfContextBox\">\n        <div class=\"NFTInfBox\">\n          <div class=\"AvatarBox\">\n            <div class=\"AvatarBorder\">\n              <img\n                :src=\"NFTImage\"\n                alt=\"\"\n              >\n            </div>\n            <div class=\"Inf\">\n              <div class=\"NFTName\">\n                <h1>{{ NFTName }}</h1>\n              </div>\n              <div class=\"NFTContract\">\n                <div class=\"NFTSupplyer\">\n                  由 <span style=\"font-weight: 800;font-size: 1.2vw;\">{{ supplyer }}</span>\n                </div>\n                <div class=\"NFTInf\">\n                  <div class=\"NFTCounts\">\n                    系列<span style=\"font-weight: 800;\">{{ NFTSeries }}</span> ·\n                    代币符号<span style=\"font-weight: 800;\">{{ symbol }}</span> ·\n                    限量铸造<span style=\"font-weight: 800;\">{{ maximums }}</span> ·\n                    目前已铸造数量<span style=\"font-weight: 800;\">{{ currentId }}</span>\n                  </div>\n                  <div class=\"NFTdescription\">\n                    {{ description }}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <el-button\n            type=\"success\"\n            plain\n            class=\"Buy\"\n            @click=\"OpenMessageBox(sale, opt)\"\n            :disabled=\"!$store.state.isconnect || NFTSeller.toUpperCase() == $store.state.currentAddress.toUpperCase() || bought || !NFTIsActive\"\n          >\n            {{ bought?\"已购入\":\"购入\" }}\n          </el-button>\n        </div>\n        <div class=\"selectBox\">\n          <div class=\"selectBox-Button\">\n            <el-tabs v-model=\"activeTab\">\n              <el-tab-pane\n                label=\"正在售卖\"\n                name=\"first\"\n              >\n                <div class=\"SeriesNFT\">\n                  <div\n                    style=\"margin-top: 10%;margin-bottom: 10%;font-weight: 800;font-size: 1vw;\"\n                    v-if=\"seriesNFTArrays.filter(inf => inf.isActive && inf.ipfsPath !== NFTImage).length == 0\"\n                  >\n                    <el-empty description=\"无在售\" />\n                  </div>\n                  <div\n                    class=\"NFTInf\"\n                    v-for=\"inf in seriesNFTArrays.filter(inf => inf.isActive && inf.ipfsPath !== NFTImage)\"\n                    :key=\"inf.image\"\n                  >\n                    <div class=\"imageBox\">\n                      <img\n                        class=\"NFTImage\"\n                        :src=\"inf.ipfsPath\"\n                        alt=\"\"\n                      >\n                    </div>\n                    <div class=\"Inf\">\n                      <div class=\"NFTName\">\n                        {{ inf.nftName }}\n                      </div>\n                      <div class=\"ownerAndToSell\">\n                        <div class=\"ToSellBox\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </el-tab-pane>\n              <el-tab-pane\n                label=\"暂未发售\"\n                name=\"second\"\n              >\n                <div class=\"SeriesNFT\">\n                  <div\n                    style=\"margin-top: 10%;margin-bottom: 10%;font-weight: 800;font-size: 1vw;\"\n                    v-if=\"seriesNFTArrays.filter(inf => !inf.isActive).length == 0\"\n                  >\n                    <!-- <i class=\"el-icon-warning\"></i> 无数据 -->\n                    <el-empty description=\"无数据\" />\n                  </div>\n                  <div\n                    class=\"NFTInf\"\n                    v-for=\"inf in seriesNFTArrays.filter(inf => !inf.isActive)\"\n                    :key=\"inf.image\"\n                  >\n                    <div class=\"imageBox\">\n                      <img\n                        class=\"NFTImage\"\n                        :src=\"inf.image\"\n                        alt=\"\"\n                      >\n                    </div>\n                    <div class=\"Inf\">\n                      <div class=\"NFTName\">\n                        {{ inf.name }}\n                      </div>\n                      <div class=\"ownerAndToSell\">\n                        <div class=\"ToSellBox\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </el-tab-pane>\n              <el-tab-pane\n                label=\"系列NFT\"\n                name=\"third\"\n              >\n                <div class=\"SeriesNFT\">\n                  <div\n                    style=\"margin-top: 10%;margin-bottom: 10%;font-weight: 800;font-size: 1vw;\"\n                    v-if=\"seriesNFTArrays.length == 0\"\n                  >\n                    <el-empty description=\"无数据\" />\n                  </div>\n                  <div\n                    class=\"NFTInf\"\n                    v-for=\"inf in seriesNFTArrays\"\n                    :key=\"inf.image\"\n                  >\n                    <div class=\"imageBox\">\n                      <img\n                        class=\"NFTImage\"\n                        :src=\"inf.ipfsPath\"\n                        alt=\"\"\n                      >\n                    </div>\n                    <div class=\"Inf\">\n                      <div class=\"NFTName\">\n                        {{ inf.nftName }}\n                      </div>\n                      <div class=\"ownerAndToSell\">\n                        <div class=\"ToSellBox\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </el-tab-pane>\n            </el-tabs>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"MessageMask\" v-if=\"MessageShow\">\n      <div class=\"Message animate__animated animate__fadeInUp\">\n        <div class=\"MessageLeft\">\n          <div class=\"imageBox\">\n            <img :src=\"changeNFT.ipfsPath\" alt=\"\">\n          </div>\n        </div>\n        <div class=\"MessageRight\">\n          <div class=\"select\">\n            <div class=\"tipsBox\">\n              <div class=\"tipsTitle\">\n                系列名 <span class=\"tipshelp\">Series Name</span>\n              </div>\n              <div class=\"tipsTitle2\">\n                {{ changeNFT.seriesName }}\n              </div>\n            </div>\n          </div>\n          <div class=\"select\">\n            <div class=\"tipsBox\">\n              <div class=\"tipsTitle\">\n                代币符号 <span class=\"tipshelp\">Symbol</span>\n              </div>\n              <div class=\"tipsTitle2\">\n                {{ changeNFT.symbol }}\n              </div>\n            </div>\n          </div>\n          <div class=\"select\">\n            <div class=\"tipsBox\">\n              <div class=\"tipsTitle\">\n                名称 <span class=\"tipshelp\">NFT Name</span>\n              </div>\n              <div class=\"tipsTitle2\">\n                {{ changeNFT.nftName }}\n              </div>\n            </div>\n          </div>\n          <div class=\"select\">\n            <div class=\"tipsBox\">\n              <div class=\"tipsTitle\">\n                序号 <span class=\"tipshelp\">Token ID</span>\n              </div>\n              <div class=\"tipsTitle2\">\n                #{{ changeNFT.tokenId }}\n              </div>\n            </div>\n          </div>\n          <div class=\"select\">\n            <div class=\"tipsBox\">\n              <div class=\"tipsTitle2\">\n                <el-divider />\n              </div>\n            </div>\n          </div>\n          <div class=\"select\">\n            <div class=\"tipsBox\">\n              <div class=\"tipsTitle\">\n                价格 <span class=\"tipshelp\">Price</span>\n              </div>\n              <div class=\"tipsTitle2\">\n                <!-- {{ $store.state.Web3.utils.fromWei(changeNFT.price, 'ether') }} ETH -->\n              </div>\n            </div>\n          </div>\n          <div class=\"select\">\n            <div class=\"sumbitBox\">\n              <el-button @click=\"CloseMessageBox()\" class=\"createButton\" type=\"primary\" plain>\n                取消\n              </el-button>\n              <el-button @click=\"Buy\" class=\"createButton\" type=\"success\" plain>\n                购买\n              </el-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getSaleListByContractAddress } from \"@/api/axios/Sale\";\n  import { getNFTStruct, Buy } from \"@/api/axios/contract\";\n  export default {\n    name: \"NFTInf\",\n    data() {\n      return {\n        NFTInf: null,\n        NFTMetaData: null,\n        NFTContract: null,\n        NFTContractAddress: null,\n        NFTSaleId: 0,\n        NFTTokenId: 0,\n        NFTPrice: 0,\n        NFTSeller: \"\",\n        NFTIsActive:false,\n\n        supplyer: \"\",\n        NFTName: \"\",\n        NFTImage: \"#\",\n        symbol: null,\n        NFTSeries: \"\",\n        description: \"\",\n        maximums: 0,\n        currentId: 0,\n        activeTab: \"first\",\n        seriesNFTArrays: [],\n        sale: {},\n        bought: false,\n\n        MessageShow: false,\n        changeNFT: {},\n        opt: 0,\n      };\n    },\n    watch: {},\n    mounted() {\n      this.init();\n    },\n    methods: {\n      async init() {\n        if (typeof this.$store.state.marketNFTInf === typeof \"\") {\n          console.log(this.$store.state.marketNFTInf);\n          try {\n            this.NFTInf = await JSON.parse(this.$store.state.marketNFTInf);\n            console.log(this.NFTInf);\n            this.NFTMetaData = await JSON.parse(this.NFTInf[6]);\n            this.NFTContractAddress = this.NFTInf[2];\n            this.NFTSaleId = this.NFTInf[0];\n            this.NFTSeller = this.NFTInf[1];\n            this.NFTTokenId = this.NFTInf[3];\n            this.NFTPrice = this.NFTInf[4];\n            this.NFTName = this.NFTMetaData.name;\n            this.supplyer = `${this.NFTInf[1].slice(\n              0,\n              5\n            )}...${this.NFTInf[1].slice(37)}`;\n            this.NFTIsActive = this.NFTInf[5]\n            this.NFTImage = this.NFTMetaData.image;\n            this.description = this.NFTMetaData.description;\n\n            await getNFTStruct(this.NFTInf[2]).then((re) => {\n              this.NFTContract = re;\n            });\n            await this.NFTContract.methods\n              .symbol()\n              .call()\n              .then((re) => {\n                this.symbol = re;\n              });\n            await this.NFTContract.methods\n              .name()\n              .call()\n              .then((re) => {\n                this.NFTSeries = re;\n              });\n            await this.NFTContract.methods\n              ._maximums()\n              .call()\n              .then((re) => {\n                this.maximums = re;\n              });\n            await this.NFTContract.methods\n              ._currentId()\n              .call()\n              .then((re) => {\n                this.currentId = re;\n              });\n            await this.getThisSeriesNFT();\n            this.makeSale();\n          } catch (error) {\n            console.log(error);\n          }\n        } else {\n          console.log(this.$store.state.marketNFTInf);\n          try {\n            this.NFTInf = this.$store.state.marketNFTInf;\n            this.NFTContractAddress = this.NFTInf.nftAddress;\n            this.NFTSaleId = this.NFTInf.saleId;\n            this.NFTSeller = this.NFTInf.currentowner;\n            this.NFTTokenId = this.NFTInf.tokenId;\n            this.NFTPrice = this.NFTInf.price;\n            this.NFTName = this.NFTInf.nftName;\n            this.NFTIsActive = this.NFTInf.isActive\n            this.supplyer = `${this.NFTInf.ownerAddress.slice(\n              0,\n              5\n            )}...${this.NFTInf.ownerAddress.slice(37)}`;\n\n            this.NFTImage = this.NFTInf.ipfsPath;\n            this.description = this.NFTInf.description;\n            await getNFTStruct(this.NFTContractAddress).then((re) => {\n              this.NFTContract = re;\n            });\n            await this.NFTContract.methods\n              .symbol()\n              .call()\n              .then((re) => {\n                this.symbol = re;\n              });\n            await this.NFTContract.methods\n              .name()\n              .call()\n              .then((re) => {\n                this.NFTSeries = re;\n              });\n            await this.NFTContract.methods\n              ._maximums()\n              .call()\n              .then((re) => {\n                this.maximums = re;\n              });\n            await this.NFTContract.methods\n              ._currentId()\n              .call()\n              .then((re) => {\n                this.currentId = re;\n              });\n            await this.getThisSeriesNFT();\n            this.makeSale();\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      },\n      OpenMessageBox(NFT) {\n        this.changeNFT = NFT;\n        this.MessageShow = true;\n      },\n      CloseMessageBox() {\n        this.MessageShow = false;\n        this.changeNFT = {};\n          this.$notify({\n            title: `您已取消购买`,\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200,\n          });\n\n      },\n      makeSale() {\n        this.sale = {\n          isActive: true,\n          nftAddress: this.NFTContractAddress,\n          price: this.$store.state.Web3.utils.fromWei(this.NFTPrice, \"ether\"),\n          saleId: Number(this.NFTSaleId),\n          ownerAddress: this.NFTSeller,\n          tokenId: Number(this.NFTTokenId),\n        };\n      },\n      async getThisSeriesNFT() {\n        var NFTDto={\n          nftAddress: this.NFTContractAddress,\n        }\n        await getSaleListByContractAddress(NFTDto).then(re => {\n          this.seriesNFTArrays = re.data.data\n        })\n      },\n      async Buy() {\n        try {\n          await Buy(this.changeNFT);\n          this.$notify({\n            title: \"购买成功\",\n            type: \"success\",\n            position: \"top-left\",\n            offset: 200,\n          });\n          this.bought = true\n        } catch (error) {\n          this.$notify.error({\n            title: \"购买失败\",\n            position: \"top-left\",\n            offset: 200,\n          });\n        }\n      },\n      toMarketMain() {\n        this.$router.push(\"/\");\n        this.$store.commit(\"setIsSearch\", false);\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n.NFTInfMainBox {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  .NFTInfMain {\n    font-family: Arial, Helvetica, sans-serif;\n    min-width: min-content;\n    width: 95%;\n    height: 100%;\n    .NFTInfBackground {\n      width: 100%;\n      height: 270px;\n      background-image: url(\"@/assets/webAssets/logoGreen.png\");\n      background-size: contain;\n      text-align: left;\n      position: relative;\n      .toMarketmain {\n        position: absolute;\n        top: 5%;\n        left: 1%;\n        margin-top: 20px;\n        color: white;\n        cursor: pointer;\n      }\n    }\n    .NFTInfContextBox {\n      width: 100%;\n      height: 100%;\n      color: var(--Dark--);\n      .selectBox {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        height: fit-content;\n        padding-top: 2%;\n        background-color: var(--White--);\n\n        /deep/ .selectBox-Button {\n          width: 95%;\n          // border-bottom: 1px solid #dcdfe6;\n          .SeriesNFT {\n            height: 100%;\n            text-align: center;\n            width: 100%;\n            font-family: Arial, Helvetica, sans-serif;\n            .NFTInf {\n              margin: 2%;\n              background-color: white;\n              border-radius: 30px;\n              width: 315px;\n              height: 390px;\n              display: inline-block;\n              overflow: hidden;\n              margin-bottom: 10%;\n              box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px,\n                rgba(14, 30, 37, 0.32) 0px 2px 16px 0px;\n            }\n            .imageBox {\n              width: 100%;\n              height: 63%;\n              border-radius: 30px;\n\n              z-index: 1;\n              overflow: hidden;\n            }\n            .Inf {\n              width: 100%;\n              height: 100%;\n              position: relative;\n            }\n            .NFTImage {\n              object-fit: contain;\n              width: 100%;\n              transition: all 0.6s;\n              cursor: pointer;\n\n              overflow: hidden;\n              &:hover {\n                transform: scale(1.1);\n\n                transition: all 0.6s;\n              }\n            }\n            .NFTName {\n              display: inline-block;\n              color: black;\n              font-weight: 800;\n              text-align: left;\n              margin-top: 20px;\n              font-size: 13px;\n            }\n            .ownerAndToSell {\n              width: 100%;\n              display: flex;\n              margin-top: 18px;\n              justify-content: center;\n              align-items: center;\n            }\n            .ToSellBox {\n              display: flex;\n              justify-content: flex-start;\n              align-items: center;\n            }\n\n            .ToSellinnerBox {\n              margin: 2%;\n              width: 82.79px;\n              padding: 8px 0px 8px 0px;\n              color: #55c960;\n              background-color: rgba(85, 201, 96, 0.12);\n              border-radius: 10px;\n              cursor: pointer;\n              transition: all 0.3s ease-in-out;\n              &:hover {\n                background-color: rgba(85, 201, 96, 0.24);\n                transition: all 0.3s ease-in-out;\n              }\n            }\n            .downSale {\n              @extend .ToSellinnerBox;\n              background-color: #d63131e5;\n              color: white;\n              &:hover {\n                background-color: rgb(255, 0, 0);\n                transition: all 0.3s ease-in-out;\n              }\n            }\n            .apporve {\n              font-size: 12px;\n              font-weight: 800;\n            }\n            .ToSellHeader {\n              display: flex;\n              justify-content: space-between;\n              width: 95%;\n              height: 10%;\n              font-size: 25px;\n              margin-top: 3%;\n              border-radius: 30px;\n              padding: 3.5% 0;\n              font-weight: 800;\n              color: var(--Dark--);\n            }\n            .ToSellHeaderBox {\n              width: 100%;\n              text-align: center;\n              display: flex;\n              justify-content: center;\n              align-items: center;\n            }\n          }\n          .el-tabs__nav {\n            height: 60px;\n          }\n          .el-tabs {\n            color: #000;\n            border-radius: 20px;\n            left: 0px;\n            top: 0px;\n            position: relative;\n          }\n          /* 去除灰色横条 */\n          .el-tabs__nav-wrap::after {\n            position: static !important;\n          }\n          /* 设置滑块颜色 */\n          .el-tabs__active-bar {\n            background-color: var(--Dark--);\n            border: 1px solid white;\n          }\n          /* 设置滑块停止位置 */\n          .el-tabs__active-bar.is-top {\n            height: 100%;\n            width: 104px !important;\n            border-radius: 17px;\n            top: 0px !important;\n            left: -15px !important;\n            position: absolute !important;\n            z-index: 1;\n          }\n          /* 设置当前选中样式 */\n          .el-tabs__item.is-active {\n            background-color: transparent;\n            color: var(--White--) !important;\n\n            z-index: 2;\n          }\n          /* 设置未被选中样式 */\n          .el-tabs__item {\n            padding: 10px 20px !important;\n            width: auto;\n            font-size: 18px;\n            font-weight: 800;\n            box-sizing: border-box;\n            display: inline-block;\n            position: relative !important;\n            color: var(--Dark--) !important;\n            z-index: 2;\n          }\n\n          .selectBox-Active {\n            border: none;\n            font-size: 1vw;\n            border-radius: 20px;\n            transition: all 0.3s ease-in-out;\n            font-weight: 800;\n            border: none;\n            background-color: rgb(246, 246, 246);\n            &:hover {\n              background-color: rgb(246, 246, 246);\n              transition: all 0.3s ease-in-out;\n              color: white;\n            }\n          }\n          .selectBox-NOActive {\n            @extend .selectBox-Active;\n          }\n          .el-tabs__content{\n           height: 100%;\n           background-color: var(--White--);\n          }\n        }\n      }\n      .NFTInfBox {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        height: 25%;\n        background-color: var(--White--);\n        .AvatarBox {\n          width: 90%;\n          height: 100%;\n\n          position: relative;\n          .Inf {\n            line-height: 35px;\n            position: absolute;\n            left: 5%;\n            top: 25%;\n            .NFTName {\n              width: 100%;\n              height: auto;\n              font-weight: 800;\n              text-align: left;\n              font-size: 2vw;\n            }\n            .NFTContract {\n              margin-top: 4%;\n            }\n            .NFTSupplyer {\n              text-align: left;\n              font-size: 1.1vw;\n            }\n            .NFTInf {\n              float: left;\n              .NFTCounts {\n                margin-top: 2%;\n                text-align: left;\n                font-size: 1.1vw;\n                span {\n                  margin-left: 5px;\n                  margin-right: 10px;\n                }\n              }\n              .NFTdescription {\n                text-align: left;\n                margin-top: 1.5%;\n                font-size: 1vw;\n              }\n            }\n          }\n          .AvatarBorder {\n            border: 4px solid white;\n            width: 10vw;\n            height: 10vw;\n            max-height: 20vw;\n            position: absolute;\n            left: 5%;\n            top: -9vw;\n            border-radius: 16px;\n            overflow: hidden;\n            box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 5px 0px,\n              rgba(0, 0, 0, 0.1) 0px 0px 1px 0px;\n            img {\n              object-fit: contain;\n              min-width: 100%;\n              height: 100%;\n              border-radius: 20px;\n              transition: all 0.6s;\n              &:hover {\n                transform: scale(1.1);\n                transition: all 0.6s;\n              }\n            }\n          }\n        }\n        .Buy {\n          border-radius: 15px;\n          padding: 2% 3% 2% 3%;\n          margin-right: 20%;\n          transition: all 0.3s ease-in-out;\n          font-size: 1.3vw;\n          font-weight: 800;\n          &:hover {\n            transition: all 0.3s ease-in-out;\n          }\n        }\n      }\n      .MoreNFTInfBox {\n        width: 100%;\n        height: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        .seriesNFTBox {\n          background-color: var(--White--);\n          width: 100%;\n          height: 100%;\n        }\n      }\n    }\n  }\n  .MessageMask {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    .Message {\n      transition: all 0.3s ease-in-out;\n      overflow: hidden;\n      width: 70%;\n      height: 70%;\n      border-radius: 30px;\n      background-color: white;\n      display: flex;\n      box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\n        rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\n      .MessageLeft {\n        flex: 1;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        .imageBox {\n          width: 75%;\n          height: 75%;\n          border: 1px solid black;\n          border-radius: 30px;\n          overflow: hidden;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          background-color: transparent;\n          img {\n            object-fit: contain;\n          }\n        }\n      }\n      .MessageRight {\n        position: relative;\n        flex: 1;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n        /deep/ .select {\n          width: 100%;\n          text-align: left;\n          margin-bottom: 10px;\n          .tipsBox {\n            width: 100%;\n            color: rgb(105, 105, 105);\n            text-align: left;\n            transition: all 0.3s ease-in-out;\n            .tipsTitle2 {\n              margin-top: 2%;\n              margin-bottom: 1%;\n              font-size: 20px;\n              font-weight: 800;\n              color: black;\n              transition: all 0.3s ease-in-out;\n              width: 300px;\n            }\n            .tipsTitle {\n              font-size: 25px;\n              color: black;\n              .tipshelp {\n                color: rgb(105, 105, 105);\n                font-size: 20px;\n              }\n            }\n          }\n          .sumbitBox {\n            text-align: left;\n            margin-top: 3%;\n            .createButton {\n              padding: 20px 35px 18px 35px;\n              font-size: 17px;\n              border-radius: 15px;\n              transition: all 0.3s ease-in-out;\n              font-family: \"Transformers_Movie\";\n            }\n          }\n        }\n        .colseButton {\n          margin-right: 10%;\n        }\n      }\n    }\n  }\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}