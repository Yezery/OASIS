{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nconst {\n  AbstractChainedBatch\n} = require('../abstract-chained-batch');\nconst ModuleError = require('module-error');\nconst kEncoded = Symbol('encoded');\n\n// Functional default for chained batch, with support of deferred open\nclass DefaultChainedBatch extends AbstractChainedBatch {\n  constructor(db) {\n    super(db);\n    this[kEncoded] = [];\n  }\n  _put(key, value, options) {\n    this[kEncoded].push({\n      ...options,\n      type: 'put',\n      key,\n      value\n    });\n  }\n  _del(key, options) {\n    this[kEncoded].push({\n      ...options,\n      type: 'del',\n      key\n    });\n  }\n  _clear() {\n    this[kEncoded] = [];\n  }\n\n  // Assumes this[kEncoded] cannot change after write()\n  _write(options, callback) {\n    if (this.db.status === 'opening') {\n      this.db.defer(() => this._write(options, callback));\n    } else if (this.db.status === 'open') {\n      if (this[kEncoded].length === 0) this.nextTick(callback);else this.db._batch(this[kEncoded], options, callback);\n    } else {\n      this.nextTick(callback, new ModuleError('Batch is not open: cannot call write() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      }));\n    }\n  }\n}\nexports.DefaultChainedBatch = DefaultChainedBatch;","map":{"version":3,"names":["require","AbstractChainedBatch","ModuleError","kEncoded","Symbol","DefaultChainedBatch","constructor","db","_put","key","value","options","push","type","_del","_clear","_write","callback","status","defer","length","nextTick","_batch","code","exports"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/abstract-level@1.0.3/node_modules/abstract-level/lib/default-chained-batch.js"],"sourcesContent":["'use strict'\n\nconst { AbstractChainedBatch } = require('../abstract-chained-batch')\nconst ModuleError = require('module-error')\nconst kEncoded = Symbol('encoded')\n\n// Functional default for chained batch, with support of deferred open\nclass DefaultChainedBatch extends AbstractChainedBatch {\n  constructor (db) {\n    super(db)\n    this[kEncoded] = []\n  }\n\n  _put (key, value, options) {\n    this[kEncoded].push({ ...options, type: 'put', key, value })\n  }\n\n  _del (key, options) {\n    this[kEncoded].push({ ...options, type: 'del', key })\n  }\n\n  _clear () {\n    this[kEncoded] = []\n  }\n\n  // Assumes this[kEncoded] cannot change after write()\n  _write (options, callback) {\n    if (this.db.status === 'opening') {\n      this.db.defer(() => this._write(options, callback))\n    } else if (this.db.status === 'open') {\n      if (this[kEncoded].length === 0) this.nextTick(callback)\n      else this.db._batch(this[kEncoded], options, callback)\n    } else {\n      this.nextTick(callback, new ModuleError('Batch is not open: cannot call write() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      }))\n    }\n  }\n}\n\nexports.DefaultChainedBatch = DefaultChainedBatch\n"],"mappings":"AAAA,YAAY;;AAAAA,OAAA;AAEZ,MAAM;EAAEC;AAAqB,CAAC,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACrE,MAAME,WAAW,GAAGF,OAAO,CAAC,cAAc,CAAC;AAC3C,MAAMG,QAAQ,GAAGC,MAAM,CAAC,SAAS,CAAC;;AAElC;AACA,MAAMC,mBAAmB,SAASJ,oBAAoB,CAAC;EACrDK,WAAWA,CAAEC,EAAE,EAAE;IACf,KAAK,CAACA,EAAE,CAAC;IACT,IAAI,CAACJ,QAAQ,CAAC,GAAG,EAAE;EACrB;EAEAK,IAAIA,CAAEC,GAAG,EAAEC,KAAK,EAAEC,OAAO,EAAE;IACzB,IAAI,CAACR,QAAQ,CAAC,CAACS,IAAI,CAAC;MAAE,GAAGD,OAAO;MAAEE,IAAI,EAAE,KAAK;MAAEJ,GAAG;MAAEC;IAAM,CAAC,CAAC;EAC9D;EAEAI,IAAIA,CAAEL,GAAG,EAAEE,OAAO,EAAE;IAClB,IAAI,CAACR,QAAQ,CAAC,CAACS,IAAI,CAAC;MAAE,GAAGD,OAAO;MAAEE,IAAI,EAAE,KAAK;MAAEJ;IAAI,CAAC,CAAC;EACvD;EAEAM,MAAMA,CAAA,EAAI;IACR,IAAI,CAACZ,QAAQ,CAAC,GAAG,EAAE;EACrB;;EAEA;EACAa,MAAMA,CAAEL,OAAO,EAAEM,QAAQ,EAAE;IACzB,IAAI,IAAI,CAACV,EAAE,CAACW,MAAM,KAAK,SAAS,EAAE;MAChC,IAAI,CAACX,EAAE,CAACY,KAAK,CAAC,MAAM,IAAI,CAACH,MAAM,CAACL,OAAO,EAAEM,QAAQ,CAAC,CAAC;IACrD,CAAC,MAAM,IAAI,IAAI,CAACV,EAAE,CAACW,MAAM,KAAK,MAAM,EAAE;MACpC,IAAI,IAAI,CAACf,QAAQ,CAAC,CAACiB,MAAM,KAAK,CAAC,EAAE,IAAI,CAACC,QAAQ,CAACJ,QAAQ,CAAC,MACnD,IAAI,CAACV,EAAE,CAACe,MAAM,CAAC,IAAI,CAACnB,QAAQ,CAAC,EAAEQ,OAAO,EAAEM,QAAQ,CAAC;IACxD,CAAC,MAAM;MACL,IAAI,CAACI,QAAQ,CAACJ,QAAQ,EAAE,IAAIf,WAAW,CAAC,iEAAiE,EAAE;QACzGqB,IAAI,EAAE;MACR,CAAC,CAAC,CAAC;IACL;EACF;AACF;AAEAC,OAAO,CAACnB,mBAAmB,GAAGA,mBAAmB"},"metadata":{},"sourceType":"script","externalDependencies":[]}