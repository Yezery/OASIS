{"ast":null,"code":"import errCode from 'err-code';\nimport defer from 'p-defer';\nconst MAX_BUFFERED_AMOUNT = 64 * 1024;\nconst CHANNEL_CLOSING_TIMEOUT = 5 * 1000;\nexport class WebRTCDataChannel {\n  constructor(channel, opts) {\n    this.label = channel.label;\n    this.open = defer();\n    this.channel = channel;\n    this.channel.binaryType = 'arraybuffer';\n    this.log = opts.log;\n    if (typeof this.channel.bufferedAmountLowThreshold === 'number') {\n      this.channel.bufferedAmountLowThreshold = MAX_BUFFERED_AMOUNT;\n    }\n    channel.addEventListener('message', event => {\n      opts.onMessage(event);\n    });\n    channel.addEventListener('bufferedamountlow', () => {\n      this.log('stop backpressure: bufferedAmount %d', this.channel.bufferedAmount);\n      this.open.resolve();\n    });\n    channel.addEventListener('open', () => {\n      this.open.resolve();\n      opts.onOpen();\n    });\n    channel.addEventListener('close', () => {\n      opts.onClose();\n    });\n    channel.addEventListener('error', event => {\n      // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n      if (event.error?.message === 'Transport channel closed') {\n        return this.close();\n      }\n      // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n      opts.log.error('channel encounter an error in state \"%s\" message: \"%s\" detail: \"%s', channel.readyState, event.error?.message, event.error?.errorDetail); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n      // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n      const err = event.error instanceof Error\n      // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n      ? event.error\n      // @ts-expect-error ChannelErrorEvent is just an Event in the types?\n      : new Error(`datachannel error: ${event.error?.message} ${event.error?.errorDetail}`); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n      opts.onError(errCode(err, 'ERR_DATA_CHANNEL'));\n    });\n    // HACK: Chrome will sometimes get stuck in readyState \"closing\", let's check for this condition\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=882743\n    let isClosing = false;\n    this.closingInterval = setInterval(() => {\n      if (channel.readyState === 'closing') {\n        if (isClosing) {\n          opts.onClose(); // closing timed out: equivalent to onclose firing\n        }\n\n        isClosing = true;\n      } else {\n        isClosing = false;\n      }\n    }, CHANNEL_CLOSING_TIMEOUT);\n  }\n  async send(data) {\n    await this.open.promise;\n    this.channel.send(data);\n    if (this.channel.bufferedAmount > MAX_BUFFERED_AMOUNT) {\n      this.log('start backpressure: bufferedAmount %d', this.channel.bufferedAmount);\n      this.open = defer();\n    }\n  }\n  close() {\n    clearInterval(this.closingInterval);\n    this.channel.close();\n  }\n  get bufferedAmount() {\n    return this.channel.bufferedAmount;\n  }\n}","map":{"version":3,"names":["errCode","defer","MAX_BUFFERED_AMOUNT","CHANNEL_CLOSING_TIMEOUT","WebRTCDataChannel","constructor","channel","opts","label","open","binaryType","log","bufferedAmountLowThreshold","addEventListener","event","onMessage","bufferedAmount","resolve","onOpen","onClose","error","message","close","readyState","errorDetail","err","Error","onError","isClosing","closingInterval","setInterval","send","data","promise","clearInterval"],"sources":["../../src/channel.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}