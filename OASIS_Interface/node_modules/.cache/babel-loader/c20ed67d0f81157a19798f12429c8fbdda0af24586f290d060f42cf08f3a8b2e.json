{"ast":null,"code":"import { getNFTStruct } from \"@/api/axios/contract\";\nexport default {\n  name: \"NFTInf\",\n  data() {\n    return {\n      NFTInf: null,\n      NFTMetaData: null,\n      NFTContract: null,\n      supplyer: \"\",\n      NFTName: \"\",\n      NFTImage: \"#\",\n      symbol: null,\n      NFTSeries: \"\"\n    };\n  },\n  mounted() {\n    this.init();\n  },\n  methods: {\n    async init() {\n      this.NFTInf = await JSON.parse(this.$route.query.nftInf);\n      this.NFTMetaData = await JSON.parse(this.NFTInf[6]);\n      this.NFTName = this.NFTMetaData.name;\n      this.supplyer = `${this.NFTInf[1].slice(0, 5)}...${this.NFTInf[1].slice(37)}`;\n      this.NFTImage = this.NFTMetaData.image;\n      await getNFTStruct(this.NFTInf[2]).then(re => {\n        this.NFTContract = re;\n      });\n      // await this.NFTContract.methods.symbol().call().then(re => { this.symbol = re })\n      // await this.NFTContract.methods.name().call().then(re => {this.NFTSeries = re})\n    }\n  }\n};","map":{"version":3,"names":["getNFTStruct","name","data","NFTInf","NFTMetaData","NFTContract","supplyer","NFTName","NFTImage","symbol","NFTSeries","mounted","init","methods","JSON","parse","$route","query","nftInf","slice","image","then","re"],"sources":["src/views/market/NFTInf.vue"],"sourcesContent":["<template>\n  <div class=\"NFTInfMain\">\n    <div class=\"NFTInfBackground\"></div>\n    <div class=\"NFTInfContextBox\">\n      <div class=\"NFTInfBox\">\n        <div class=\"AvatarBox\">\n          <div class=\"AvatarBorder\">\n            <img :src=\"NFTImage\" alt=\"\">\n          </div>\n          <div class=\"Inf\">\n            <div class=\"NFTName\">\n              {{NFTName}}\n            </div>\n            <div class=\"NFTContract\">\n              <div class=\"NFTSupplyer\">\n                由 <span style=\"font-weight: 800;font-size: 25px;\">{{supplyer}}</span>\n              </div>\n              <div class=\"NFTInf\">\n                <div class=\"NFTCounts\">\n                  NFTSeries <span style=\"font-weight: 800;\">{{ NFTSeries }}</span> ·\n                  Symbol <span style=\"font-weight: 800;\">{{ symbol }}</span> ·\n                  Maximums <span style=\"font-weight: 800;\">{{ symbol }}</span> ·\n                  CurrentId <span style=\"font-weight: 800;\">{{ NFTSeries }}</span> ·\n                  description\n                </div>\n                <div class=\"NFTCounts\">\n                  \n                </div>\n                \n                <div class=\"NFTCounts\">\n                  Count: <span style=\"font-weight: 800;\">10</span>\n                </div>\n\n              </div>\n            </div>\n            <!-- <h3>lskajdklasjd</h3>\n          <h3>lskajdklasjd</h3>\n          <h3>lskajdklasjd</h3>\n          <h3>lskajdklasjd</h3> -->\n          </div>\n        </div>\n\n      </div>\n      <div class=\"MoreNFTInfBox\"></div>\n    </div>\n    {{ NFTInf }}\n  </div>\n</template>\n\n<script>\n  import { getNFTStruct } from \"@/api/axios/contract\";\n  export default {\n    name: \"NFTInf\",\n    data() {\n      return {\n        NFTInf: null,\n        NFTMetaData: null,\n        NFTContract: null,\n        supplyer: \"\",\n        NFTName: \"\",\n        NFTImage: \"#\",\n        symbol: null,\n        NFTSeries:\"\"\n      };\n    },\n    mounted() {\n      this.init();\n    },\n    methods: {\n      async init() {\n        this.NFTInf = await JSON.parse(this.$route.query.nftInf);\n        this.NFTMetaData = await JSON.parse(this.NFTInf[6]);\n        this.NFTName = this.NFTMetaData.name;\n        this.supplyer =\n          `${this.NFTInf[1].slice(0, 5)}...${this.NFTInf[1].slice(37)}`;\n        this.NFTImage = this.NFTMetaData.image;\n        await getNFTStruct(this.NFTInf[2]).then((re) => {\n          this.NFTContract = re;\n        });\n        // await this.NFTContract.methods.symbol().call().then(re => { this.symbol = re })\n        // await this.NFTContract.methods.name().call().then(re => {this.NFTSeries = re})\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n.NFTInfMain {\n  min-width: min-content;\n  width: 100%;\n  height: 100%;\n  .NFTInfBackground {\n    width: 100%;\n    height: 25%;\n  }\n  .NFTInfContextBox {\n    width: 100%;\n    height: 100%;\n    .NFTInfBox {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: 100%;\n      height: 20%;\n      .AvatarBox {\n        width: 100%;\n        height: 100%;\n        background-color: rgb(249, 249, 249);\n        position: relative;\n        .Inf {\n          line-height: 50px;\n          position: absolute;\n          left: 10%;\n          top: 30%;\n          .NFTName {\n            width: 100%;\n            height: auto;\n            font-weight: 800;\n            text-align: left;\n            font-size: 35px;\n          }\n          .NFTSupplyer {\n            text-align: left;\n            font-size: 20px;\n          }\n          .NFTInf {\n            float: left;\n            .NFTCounts {\n              text-align: left;\n              font-size: 15px;\n            }\n          }\n        }\n        .AvatarBorder {\n          border: 15px solid white;\n          min-width: 60px;\n          height: 100%;\n          position: absolute;\n          left: 10%;\n          top: -90%;\n          border-radius: 20px;\n          overflow: hidden;\n          box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 5px 0px, rgba(0, 0, 0, 0.1) 0px 0px 1px 0px;\n          img {\n            object-fit: fill;\n            min-width: 40px;\n            height: 100%;\n            border-radius: 20px;\n            transition: all 0.6s;\n            &:hover {\n              transform: scale(1.1);\n              transition: all 0.6s;\n            }\n          }\n        }\n      }\n    }\n    .MoreNFTInfBox {\n      width: 100%;\n      height: 1000%;\n      background-color: yellow;\n    }\n  }\n}\n</style>"],"mappings":"AAkDA,SAAAA,YAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,WAAA;MACAC,WAAA;MACAC,QAAA;MACAC,OAAA;MACAC,QAAA;MACAC,MAAA;MACAC,SAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACA,MAAAD,KAAA;MACA,KAAAT,MAAA,SAAAW,IAAA,CAAAC,KAAA,MAAAC,MAAA,CAAAC,KAAA,CAAAC,MAAA;MACA,KAAAd,WAAA,SAAAU,IAAA,CAAAC,KAAA,MAAAZ,MAAA;MACA,KAAAI,OAAA,QAAAH,WAAA,CAAAH,IAAA;MACA,KAAAK,QAAA,GACA,QAAAH,MAAA,IAAAgB,KAAA,iBAAAhB,MAAA,IAAAgB,KAAA;MACA,KAAAX,QAAA,QAAAJ,WAAA,CAAAgB,KAAA;MACA,MAAApB,YAAA,MAAAG,MAAA,KAAAkB,IAAA,CAAAC,EAAA;QACA,KAAAjB,WAAA,GAAAiB,EAAA;MACA;MACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}