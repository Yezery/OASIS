{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { logger } from '@libp2p/logger';\nimport { EventEmitter, CustomEvent } from '@libp2p/interfaces/events';\nimport errCode from 'err-code';\nimport randombytes from 'iso-random-stream/src/random.js';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\nimport { pushable } from 'it-pushable';\nimport defer from 'p-defer';\nimport { WebRTCDataChannel } from './channel.js';\nimport delay from 'delay';\n// const ICECOMPLETE_TIMEOUT = 5 * 1000\nconst DEFAULT_PEER_CONNECTION_CONFIG = {\n  iceServers: [{\n    urls: ['stun:stun.l.google.com:19302', 'stun:global.stun.twilio.com:3478']\n  }]\n};\nfunction getBrowserRTC() {\n  if (typeof globalThis === 'undefined') {\n    throw errCode(new Error('No WebRTC support detected'), 'ERR_WEBRTC_SUPPORT');\n  }\n  const wrtc = {\n    // @ts-expect-error browser-specific properties\n    RTCPeerConnection: globalThis.RTCPeerConnection ?? globalThis.mozRTCPeerConnection ?? globalThis.webkitRTCPeerConnection,\n    // @ts-expect-error browser-specific properties\n    RTCSessionDescription: globalThis.RTCSessionDescription ?? globalThis.mozRTCSessionDescription ?? globalThis.webkitRTCSessionDescription,\n    // @ts-expect-error browser-specific properties\n    RTCIceCandidate: globalThis.RTCIceCandidate ?? globalThis.mozRTCIceCandidate ?? globalThis.webkitRTCIceCandidate\n  };\n  if (wrtc.RTCPeerConnection == null) {\n    throw errCode(new Error('No WebRTC support detected'), 'ERR_WEBRTC_SUPPORT');\n  }\n  return wrtc;\n}\nexport class WebRTCPeer extends EventEmitter {\n  constructor(opts) {\n    super();\n    this.id = opts.id ?? uint8ArrayToString(randombytes(4), 'hex').slice(0, 7);\n    this.log = logger(`libp2p:webrtc-peer:${opts.logPrefix}:${this.id}`);\n    this.wrtc = opts.wrtc ?? getBrowserRTC();\n    this.peerConnection = new this.wrtc.RTCPeerConnection(Object.assign({}, DEFAULT_PEER_CONNECTION_CONFIG, opts.peerConnectionConfig));\n    this.closed = false;\n    this.connected = defer();\n    // duplex properties\n    this.source = pushable();\n    this.sink = async source => {\n      await this.connected.promise;\n      if (this.channel == null) {\n        throw errCode(new Error('Connected but no channel?!'), 'ERR_DATA_CHANNEL');\n      }\n      for await (const buf of source) {\n        await this.channel.send(buf);\n      }\n      await this.close();\n    };\n  }\n  handleDataChannelEvent(event) {\n    const dataChannel = event.channel;\n    if (dataChannel == null) {\n      // In some situations `pc.createDataChannel()` returns `undefined` (in wrtc),\n      // which is invalid behavior. Handle it gracefully.\n      // See: https://github.com/feross/simple-peer/issues/163\n      this.close(errCode(new Error('Data channel event is missing `channel` property'), 'ERR_DATA_CHANNEL')).catch(err => {\n        this.log('Error closing after event channel was found to be null', err);\n      });\n      return;\n    }\n    this.channel = new WebRTCDataChannel(dataChannel, {\n      log: this.log,\n      onMessage: event => {\n        this.source.push(new Uint8Array(event.data));\n      },\n      onOpen: () => {\n        this.connected.resolve();\n        this.dispatchEvent(new CustomEvent('ready'));\n      },\n      onClose: () => {\n        this.close().catch(err => {\n          this.log('error closing connection after channel close', err);\n        });\n      },\n      onError: err => {\n        this.close(err).catch(err => {\n          this.log('error closing connection after channel error', err);\n        });\n      }\n    });\n  }\n  async close(err) {\n    this.closed = true;\n    if (err == null && this.channel != null) {\n      // wait for the channel to flush all data before closing the channel\n      while (this.channel.bufferedAmount > 0) {\n        await delay(100);\n      }\n    }\n    this.channel?.close();\n    this.peerConnection.close();\n    this.source.end(err);\n    this.dispatchEvent(new CustomEvent('close'));\n  }\n}","map":{"version":3,"names":["logger","EventEmitter","CustomEvent","errCode","randombytes","toString","uint8ArrayToString","pushable","defer","WebRTCDataChannel","delay","DEFAULT_PEER_CONNECTION_CONFIG","iceServers","urls","getBrowserRTC","globalThis","Error","wrtc","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","RTCSessionDescription","mozRTCSessionDescription","webkitRTCSessionDescription","RTCIceCandidate","mozRTCIceCandidate","webkitRTCIceCandidate","WebRTCPeer","constructor","opts","id","slice","log","logPrefix","peerConnection","Object","assign","peerConnectionConfig","closed","connected","source","sink","promise","channel","buf","send","close","handleDataChannelEvent","event","dataChannel","catch","err","onMessage","push","Uint8Array","data","onOpen","resolve","dispatchEvent","onClose","onError","bufferedAmount","end"],"sources":["../../src/peer.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}