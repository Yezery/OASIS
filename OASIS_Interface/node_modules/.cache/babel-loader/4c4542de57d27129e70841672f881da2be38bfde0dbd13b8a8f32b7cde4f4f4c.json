{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/**\n * @packageDocumentation\n *\n * This module makes it easy to send and receive Protobuf encoded messages over\n * streams.\n *\n * @example\n *\n * ```typescript\n * import { pbStream } from 'it-pb-stream'\n * import { MessageType } from './src/my-message-type.js'\n *\n * // RequestType and ResponseType have been generate from `.proto` files and have\n * // `.encode` and `.decode` methods for serialization/deserialization\n *\n * const stream = pbStream(duplex)\n * stream.writePB({\n *   foo: 'bar'\n * }, MessageType)\n * const res = await stream.readPB(MessageType)\n * ```\n */\nimport * as lp from 'it-length-prefixed';\nimport { Uint8ArrayList } from 'uint8arraylist';\nimport { pushable } from 'it-pushable';\nimport { unsigned } from 'uint8-varint';\nimport errCode from 'err-code';\nconst defaultLengthDecoder = buf => {\n  return unsigned.decode(buf);\n};\ndefaultLengthDecoder.bytes = 0;\nexport function pbStream(duplex, opts = {}) {\n  const write = pushable();\n  duplex.sink(write).catch(err => {\n    write.end(err);\n  });\n  duplex.sink = async source => {\n    for await (const buf of source) {\n      write.push(buf);\n    }\n  };\n  let source = duplex.source;\n  if (duplex.source[Symbol.iterator] != null) {\n    source = duplex.source[Symbol.iterator]();\n  } else if (duplex.source[Symbol.asyncIterator] != null) {\n    source = duplex.source[Symbol.asyncIterator]();\n  }\n  const readBuffer = new Uint8ArrayList();\n  const W = {\n    read: async bytes => {\n      if (bytes == null) {\n        // just read whatever arrives\n        const {\n          done,\n          value\n        } = await source.next();\n        if (done === true) {\n          return new Uint8ArrayList();\n        }\n        return value;\n      }\n      while (readBuffer.byteLength < bytes) {\n        const {\n          value,\n          done\n        } = await source.next();\n        if (done === true) {\n          throw errCode(new Error('unexpected end of input'), 'ERR_UNEXPECTED_EOF');\n        }\n        readBuffer.append(value);\n      }\n      const buf = readBuffer.sublist(0, bytes);\n      readBuffer.consume(bytes);\n      return buf;\n    },\n    readLP: async () => {\n      let dataLength = -1;\n      const lengthBuffer = new Uint8ArrayList();\n      const decodeLength = opts?.lengthDecoder ?? defaultLengthDecoder;\n      while (true) {\n        // read one byte at a time until we can decode a varint\n        lengthBuffer.append(await W.read(1));\n        try {\n          dataLength = decodeLength(lengthBuffer);\n        } catch (err) {\n          if (err instanceof RangeError) {\n            continue;\n          }\n          throw err;\n        }\n        if (dataLength > -1) {\n          break;\n        }\n        if (opts?.maxLengthLength != null && lengthBuffer.byteLength > opts.maxLengthLength) {\n          throw errCode(new Error('message length length too long'), 'ERR_MSG_LENGTH_TOO_LONG');\n        }\n      }\n      if (opts?.maxDataLength != null && dataLength > opts.maxDataLength) {\n        throw errCode(new Error('message length too long'), 'ERR_MSG_DATA_TOO_LONG');\n      }\n      return await W.read(dataLength);\n    },\n    readPB: async proto => {\n      // readLP, decode\n      const value = await W.readLP();\n      if (value == null) {\n        throw new Error('Value is null');\n      }\n      // Is this a buffer?\n      const buf = value instanceof Uint8Array ? value : value.subarray();\n      return proto.decode(buf);\n    },\n    write: data => {\n      // just write\n      if (data instanceof Uint8Array) {\n        write.push(data);\n      } else {\n        write.push(data.subarray());\n      }\n    },\n    writeLP: data => {\n      // encode, write\n      W.write(lp.encode.single(data, opts));\n    },\n    writePB: (data, proto) => {\n      // encode, writeLP\n      W.writeLP(proto.encode(data));\n    },\n    pb: proto => {\n      return {\n        read: async () => await W.readPB(proto),\n        write: d => {\n          W.writePB(d, proto);\n        },\n        unwrap: () => W\n      };\n    },\n    unwrap: () => {\n      const originalStream = duplex.source;\n      duplex.source = async function* () {\n        yield* readBuffer;\n        yield* originalStream;\n      }();\n      return duplex;\n    }\n  };\n  return W;\n}","map":{"version":3,"names":["lp","Uint8ArrayList","pushable","unsigned","errCode","defaultLengthDecoder","buf","decode","bytes","pbStream","duplex","opts","write","sink","catch","err","end","source","push","Symbol","iterator","asyncIterator","readBuffer","W","read","done","value","next","byteLength","Error","append","sublist","consume","readLP","dataLength","lengthBuffer","decodeLength","lengthDecoder","RangeError","maxLengthLength","maxDataLength","readPB","proto","Uint8Array","subarray","data","writeLP","encode","single","writePB","pb","d","unwrap","originalStream"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}