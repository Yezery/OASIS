{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { parseIPv4, parseIPv6 } from \"@chainsafe/is-ip/parse\";\nimport { IPv4Len, IPv6Len, maskIp } from \"./ip.js\";\nexport function parseCidr(s) {\n  const [address, maskString] = s.split(\"/\");\n  if (!address || !maskString) throw new Error(\"Failed to parse given CIDR: \" + s);\n  let ipLength = IPv4Len;\n  let ip = parseIPv4(address);\n  if (ip == null) {\n    ipLength = IPv6Len;\n    ip = parseIPv6(address);\n    if (ip == null) throw new Error(\"Failed to parse given CIDR: \" + s);\n  }\n  const m = parseInt(maskString, 10);\n  if (Number.isNaN(m) || String(m).length !== maskString.length || m < 0 || m > ipLength * 8) {\n    throw new Error(\"Failed to parse given CIDR: \" + s);\n  }\n  const mask = cidrMask(m, 8 * ipLength);\n  return {\n    network: maskIp(ip, mask),\n    mask\n  };\n}\nexport function cidrMask(ones, bits) {\n  if (bits !== 8 * IPv4Len && bits !== 8 * IPv6Len) throw new Error(\"Invalid CIDR mask\");\n  if (ones < 0 || ones > bits) throw new Error(\"Invalid CIDR mask\");\n  const l = bits / 8;\n  const m = new Uint8Array(l);\n  for (let i = 0; i < l; i++) {\n    if (ones >= 8) {\n      m[i] = 0xff;\n      ones -= 8;\n      continue;\n    }\n    m[i] = 255 - (0xff >> ones);\n    ones = 0;\n  }\n  return m;\n}","map":{"version":3,"names":["parseIPv4","parseIPv6","IPv4Len","IPv6Len","maskIp","parseCidr","s","address","maskString","split","Error","ipLength","ip","m","parseInt","Number","isNaN","String","length","mask","cidrMask","network","ones","bits","l","Uint8Array","i"],"sources":["../../src/cidr.ts"],"sourcesContent":[null],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,SAAS,QAAQ,wBAAwB;AAC7D,SAASC,OAAO,EAAEC,OAAO,EAAEC,MAAM,QAAQ,SAAS;AAElD,OAAM,SAAUC,SAASA,CAACC,CAAS;EAIjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,CAAC,CAACG,KAAK,CAAC,GAAG,CAAC;EAC1C,IAAI,CAACF,OAAO,IAAI,CAACC,UAAU,EACzB,MAAM,IAAIE,KAAK,CAAC,8BAA8B,GAAGJ,CAAC,CAAC;EACrD,IAAIK,QAAQ,GAAGT,OAAO;EACtB,IAAIU,EAAE,GAAGZ,SAAS,CAACO,OAAO,CAAC;EAC3B,IAAIK,EAAE,IAAI,IAAI,EAAE;IACdD,QAAQ,GAAGR,OAAO;IAClBS,EAAE,GAAGX,SAAS,CAACM,OAAO,CAAC;IACvB,IAAIK,EAAE,IAAI,IAAI,EAAE,MAAM,IAAIF,KAAK,CAAC,8BAA8B,GAAGJ,CAAC,CAAC;;EAErE,MAAMO,CAAC,GAAGC,QAAQ,CAACN,UAAU,EAAE,EAAE,CAAC;EAClC,IACEO,MAAM,CAACC,KAAK,CAACH,CAAC,CAAC,IACfI,MAAM,CAACJ,CAAC,CAAC,CAACK,MAAM,KAAKV,UAAU,CAACU,MAAM,IACtCL,CAAC,GAAG,CAAC,IACLA,CAAC,GAAGF,QAAQ,GAAG,CAAC,EAChB;IACA,MAAM,IAAID,KAAK,CAAC,8BAA8B,GAAGJ,CAAC,CAAC;;EAErD,MAAMa,IAAI,GAAGC,QAAQ,CAACP,CAAC,EAAE,CAAC,GAAGF,QAAQ,CAAC;EACtC,OAAO;IACLU,OAAO,EAAEjB,MAAM,CAACQ,EAAE,EAAEO,IAAI,CAAC;IACzBA;GACD;AACH;AAEA,OAAM,SAAUC,QAAQA,CAACE,IAAY,EAAEC,IAAY;EACjD,IAAIA,IAAI,KAAK,CAAC,GAAGrB,OAAO,IAAIqB,IAAI,KAAK,CAAC,GAAGpB,OAAO,EAC9C,MAAM,IAAIO,KAAK,CAAC,mBAAmB,CAAC;EACtC,IAAIY,IAAI,GAAG,CAAC,IAAIA,IAAI,GAAGC,IAAI,EAAE,MAAM,IAAIb,KAAK,CAAC,mBAAmB,CAAC;EACjE,MAAMc,CAAC,GAAGD,IAAI,GAAG,CAAC;EAClB,MAAMV,CAAC,GAAG,IAAIY,UAAU,CAACD,CAAC,CAAC;EAC3B,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,CAAC,EAAEE,CAAC,EAAE,EAAE;IAC1B,IAAIJ,IAAI,IAAI,CAAC,EAAE;MACbT,CAAC,CAACa,CAAC,CAAC,GAAG,IAAI;MACXJ,IAAI,IAAI,CAAC;MACT;;IAEFT,CAAC,CAACa,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,IAAIJ,IAAI,CAAC;IAC3BA,IAAI,GAAG,CAAC;;EAEV,OAAOT,CAAC;AACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}