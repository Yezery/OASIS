{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport protobuf from 'protobufjs/minimal.js';\nexport const defaultDecodeRpcLimits = {\n  maxSubscriptions: Infinity,\n  maxMessages: Infinity,\n  maxIhaveMessageIDs: Infinity,\n  maxIwantMessageIDs: Infinity,\n  maxControlMessages: Infinity,\n  maxPeerInfos: Infinity\n};\n/**\n * Copied code from src/message/rpc.cjs but with decode limits to prevent OOM attacks\n */\nexport function decodeRpc(bytes, opts) {\n  // Mutate to use the option as stateful counter. Must limit the total count of messageIDs across all IWANT, IHAVE\n  // else one count put 100 messageIDs into each 100 IWANT and \"get around\" the limit\n  opts = {\n    ...opts\n  };\n  const r = protobuf.Reader.create(bytes);\n  const l = bytes.length;\n  const c = l === undefined ? r.len : r.pos + l;\n  const m = {};\n  while (r.pos < c) {\n    const t = r.uint32();\n    switch (t >>> 3) {\n      case 1:\n        if (!(m.subscriptions && m.subscriptions.length)) m.subscriptions = [];\n        if (m.subscriptions.length < opts.maxSubscriptions) m.subscriptions.push(decodeSubOpts(r, r.uint32()));else r.skipType(t & 7);\n        break;\n      case 2:\n        if (!(m.messages && m.messages.length)) m.messages = [];\n        if (m.messages.length < opts.maxMessages) m.messages.push(decodeMessage(r, r.uint32()));else r.skipType(t & 7);\n        break;\n      case 3:\n        m.control = decodeControlMessage(r, r.uint32(), opts);\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n    }\n  }\n  return m;\n}\nfunction decodeSubOpts(r, l) {\n  const c = l === undefined ? r.len : r.pos + l;\n  const m = {};\n  while (r.pos < c) {\n    const t = r.uint32();\n    switch (t >>> 3) {\n      case 1:\n        m.subscribe = r.bool();\n        break;\n      case 2:\n        m.topic = r.string();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n    }\n  }\n  return m;\n}\nfunction decodeMessage(r, l) {\n  const c = l === undefined ? r.len : r.pos + l;\n  const m = {};\n  while (r.pos < c) {\n    const t = r.uint32();\n    switch (t >>> 3) {\n      case 1:\n        m.from = r.bytes();\n        break;\n      case 2:\n        m.data = r.bytes();\n        break;\n      case 3:\n        m.seqno = r.bytes();\n        break;\n      case 4:\n        m.topic = r.string();\n        break;\n      case 5:\n        m.signature = r.bytes();\n        break;\n      case 6:\n        m.key = r.bytes();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n    }\n  }\n  if (!m.topic) throw Error(\"missing required 'topic'\");\n  return m;\n}\nfunction decodeControlMessage(r, l, opts) {\n  const c = l === undefined ? r.len : r.pos + l;\n  const m = {};\n  while (r.pos < c) {\n    const t = r.uint32();\n    switch (t >>> 3) {\n      case 1:\n        if (!(m.ihave && m.ihave.length)) m.ihave = [];\n        if (m.ihave.length < opts.maxControlMessages) m.ihave.push(decodeControlIHave(r, r.uint32(), opts));else r.skipType(t & 7);\n        break;\n      case 2:\n        if (!(m.iwant && m.iwant.length)) m.iwant = [];\n        if (m.iwant.length < opts.maxControlMessages) m.iwant.push(decodeControlIWant(r, r.uint32(), opts));else r.skipType(t & 7);\n        break;\n      case 3:\n        if (!(m.graft && m.graft.length)) m.graft = [];\n        if (m.graft.length < opts.maxControlMessages) m.graft.push(decodeControlGraft(r, r.uint32()));else r.skipType(t & 7);\n        break;\n      case 4:\n        if (!(m.prune && m.prune.length)) m.prune = [];\n        if (m.prune.length < opts.maxControlMessages) m.prune.push(decodeControlPrune(r, r.uint32(), opts));else r.skipType(t & 7);\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n    }\n  }\n  return m;\n}\nfunction decodeControlIHave(r, l, opts) {\n  const c = l === undefined ? r.len : r.pos + l;\n  const m = {};\n  while (r.pos < c) {\n    const t = r.uint32();\n    switch (t >>> 3) {\n      case 1:\n        m.topicID = r.string();\n        break;\n      case 2:\n        if (!(m.messageIDs && m.messageIDs.length)) m.messageIDs = [];\n        if (opts.maxIhaveMessageIDs-- > 0) m.messageIDs.push(r.bytes());else r.skipType(t & 7);\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n    }\n  }\n  return m;\n}\nfunction decodeControlIWant(r, l, opts) {\n  const c = l === undefined ? r.len : r.pos + l;\n  const m = {};\n  while (r.pos < c) {\n    const t = r.uint32();\n    switch (t >>> 3) {\n      case 1:\n        if (!(m.messageIDs && m.messageIDs.length)) m.messageIDs = [];\n        if (opts.maxIwantMessageIDs-- > 0) m.messageIDs.push(r.bytes());else r.skipType(t & 7);\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n    }\n  }\n  return m;\n}\nfunction decodeControlGraft(r, l) {\n  const c = l === undefined ? r.len : r.pos + l;\n  const m = {};\n  while (r.pos < c) {\n    const t = r.uint32();\n    switch (t >>> 3) {\n      case 1:\n        m.topicID = r.string();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n    }\n  }\n  return m;\n}\nfunction decodeControlPrune(r, l, opts) {\n  const c = l === undefined ? r.len : r.pos + l;\n  const m = {};\n  while (r.pos < c) {\n    const t = r.uint32();\n    switch (t >>> 3) {\n      case 1:\n        m.topicID = r.string();\n        break;\n      case 2:\n        if (!(m.peers && m.peers.length)) m.peers = [];\n        if (opts.maxPeerInfos-- > 0) m.peers.push(decodePeerInfo(r, r.uint32()));else r.skipType(t & 7);\n        break;\n      case 3:\n        m.backoff = r.uint64();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n    }\n  }\n  return m;\n}\nfunction decodePeerInfo(r, l) {\n  const c = l === undefined ? r.len : r.pos + l;\n  const m = {};\n  while (r.pos < c) {\n    const t = r.uint32();\n    switch (t >>> 3) {\n      case 1:\n        m.peerID = r.bytes();\n        break;\n      case 2:\n        m.signedPeerRecord = r.bytes();\n        break;\n      default:\n        r.skipType(t & 7);\n        break;\n    }\n  }\n  return m;\n}","map":{"version":3,"names":["protobuf","defaultDecodeRpcLimits","maxSubscriptions","Infinity","maxMessages","maxIhaveMessageIDs","maxIwantMessageIDs","maxControlMessages","maxPeerInfos","decodeRpc","bytes","opts","r","Reader","create","l","length","c","undefined","len","pos","m","t","uint32","subscriptions","push","decodeSubOpts","skipType","messages","decodeMessage","control","decodeControlMessage","subscribe","bool","topic","string","from","data","seqno","signature","key","Error","ihave","decodeControlIHave","iwant","decodeControlIWant","graft","decodeControlGraft","prune","decodeControlPrune","topicID","messageIDs","peers","decodePeerInfo","backoff","uint64","peerID","signedPeerRecord"],"sources":["../../../src/message/decodeRpc.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}