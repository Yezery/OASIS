{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var Peer;\n(function (Peer) {\n  let _codec;\n  Peer.codec = () => {\n    if (_codec == null) {\n      _codec = message((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork();\n        }\n        if (obj.addresses != null) {\n          for (const value of obj.addresses) {\n            w.uint32(10);\n            Address.codec().encode(value, w);\n          }\n        }\n        if (obj.protocols != null) {\n          for (const value of obj.protocols) {\n            w.uint32(18);\n            w.string(value);\n          }\n        }\n        if (obj.metadata != null) {\n          for (const value of obj.metadata) {\n            w.uint32(26);\n            Metadata.codec().encode(value, w);\n          }\n        }\n        if (obj.pubKey != null) {\n          w.uint32(34);\n          w.bytes(obj.pubKey);\n        }\n        if (obj.peerRecordEnvelope != null) {\n          w.uint32(42);\n          w.bytes(obj.peerRecordEnvelope);\n        }\n        if (opts.lengthDelimited !== false) {\n          w.ldelim();\n        }\n      }, (reader, length) => {\n        const obj = {\n          addresses: [],\n          protocols: [],\n          metadata: []\n        };\n        const end = length == null ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n          const tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              obj.addresses.push(Address.codec().decode(reader, reader.uint32()));\n              break;\n            case 2:\n              obj.protocols.push(reader.string());\n              break;\n            case 3:\n              obj.metadata.push(Metadata.codec().decode(reader, reader.uint32()));\n              break;\n            case 4:\n              obj.pubKey = reader.bytes();\n              break;\n            case 5:\n              obj.peerRecordEnvelope = reader.bytes();\n              break;\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return obj;\n      });\n    }\n    return _codec;\n  };\n  Peer.encode = obj => {\n    return encodeMessage(obj, Peer.codec());\n  };\n  Peer.decode = buf => {\n    return decodeMessage(buf, Peer.codec());\n  };\n})(Peer || (Peer = {}));\nexport var Address;\n(function (Address) {\n  let _codec;\n  Address.codec = () => {\n    if (_codec == null) {\n      _codec = message((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork();\n        }\n        if (obj.multiaddr != null && obj.multiaddr.byteLength > 0) {\n          w.uint32(10);\n          w.bytes(obj.multiaddr);\n        }\n        if (obj.isCertified != null) {\n          w.uint32(16);\n          w.bool(obj.isCertified);\n        }\n        if (opts.lengthDelimited !== false) {\n          w.ldelim();\n        }\n      }, (reader, length) => {\n        const obj = {\n          multiaddr: new Uint8Array(0)\n        };\n        const end = length == null ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n          const tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              obj.multiaddr = reader.bytes();\n              break;\n            case 2:\n              obj.isCertified = reader.bool();\n              break;\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return obj;\n      });\n    }\n    return _codec;\n  };\n  Address.encode = obj => {\n    return encodeMessage(obj, Address.codec());\n  };\n  Address.decode = buf => {\n    return decodeMessage(buf, Address.codec());\n  };\n})(Address || (Address = {}));\nexport var Metadata;\n(function (Metadata) {\n  let _codec;\n  Metadata.codec = () => {\n    if (_codec == null) {\n      _codec = message((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork();\n        }\n        if (obj.key != null && obj.key !== '') {\n          w.uint32(10);\n          w.string(obj.key);\n        }\n        if (obj.value != null && obj.value.byteLength > 0) {\n          w.uint32(18);\n          w.bytes(obj.value);\n        }\n        if (opts.lengthDelimited !== false) {\n          w.ldelim();\n        }\n      }, (reader, length) => {\n        const obj = {\n          key: '',\n          value: new Uint8Array(0)\n        };\n        const end = length == null ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n          const tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              obj.key = reader.string();\n              break;\n            case 2:\n              obj.value = reader.bytes();\n              break;\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return obj;\n      });\n    }\n    return _codec;\n  };\n  Metadata.encode = obj => {\n    return encodeMessage(obj, Metadata.codec());\n  };\n  Metadata.decode = buf => {\n    return decodeMessage(buf, Metadata.codec());\n  };\n})(Metadata || (Metadata = {}));","map":{"version":3,"names":["encodeMessage","decodeMessage","message","Peer","_codec","codec","obj","w","opts","lengthDelimited","fork","addresses","value","uint32","Address","encode","protocols","string","metadata","Metadata","pubKey","bytes","peerRecordEnvelope","ldelim","reader","length","end","len","pos","tag","push","decode","skipType","buf","multiaddr","byteLength","isCertified","bool","Uint8Array","key"],"sources":["../../../src/pb/peer.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}