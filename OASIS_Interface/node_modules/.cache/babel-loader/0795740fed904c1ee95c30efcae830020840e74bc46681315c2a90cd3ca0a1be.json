{"ast":null,"code":"import { Token, Type } from './token.js';\nimport * as uint from './0uint.js';\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeTagCompact(_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1);\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag8(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2);\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag16(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3);\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag32(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5);\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag64(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9);\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeTag(buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value);\n}\nencodeTag.compareTokens = uint.encodeUint.compareTokens;\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeTag.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};","map":{"version":3,"names":["Token","Type","uint","decodeTagCompact","_data","_pos","minor","_options","tag","decodeTag8","data","pos","_minor","options","readUint8","decodeTag16","readUint16","decodeTag32","readUint32","decodeTag64","readUint64","encodeTag","buf","token","encodeUintValue","majorEncoded","value","compareTokens","encodeUint","encodedSize"],"sources":["/Users/yezery/OASIS/OASIS_Interface/node_modules/.store/cborg@4.0.3/node_modules/cborg/lib/6tag.js"],"sourcesContent":["import { Token, Type } from './token.js'\nimport * as uint from './0uint.js'\n\n/**\n * @typedef {import('./bl.js').Bl} Bl\n * @typedef {import('../interface').DecodeOptions} DecodeOptions\n */\n\n/**\n * @param {Uint8Array} _data\n * @param {number} _pos\n * @param {number} minor\n * @param {DecodeOptions} _options\n * @returns {Token}\n */\nexport function decodeTagCompact (_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag8 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag16 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag32 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5)\n}\n\n/**\n * @param {Uint8Array} data\n * @param {number} pos\n * @param {number} _minor\n * @param {DecodeOptions} options\n * @returns {Token}\n */\nexport function decodeTag64 (data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9)\n}\n\n/**\n * @param {Bl} buf\n * @param {Token} token\n */\nexport function encodeTag (buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value)\n}\n\nencodeTag.compareTokens = uint.encodeUint.compareTokens\n\n/**\n * @param {Token} token\n * @returns {number}\n */\nencodeTag.encodedSize = function encodedSize (token) {\n  return uint.encodeUintValue.encodedSize(token.value)\n}\n"],"mappings":"AAAA,SAASA,KAAK,EAAEC,IAAI,QAAQ,YAAY;AACxC,OAAO,KAAKC,IAAI,MAAM,YAAY;;AAElC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAAEC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAE;EAC9D,OAAO,IAAIP,KAAK,CAACC,IAAI,CAACO,GAAG,EAAEF,KAAK,EAAE,CAAC,CAAC;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,UAAUA,CAAEC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAE;EACtD,OAAO,IAAIb,KAAK,CAACC,IAAI,CAACO,GAAG,EAAEN,IAAI,CAACY,SAAS,CAACJ,IAAI,EAAEC,GAAG,GAAG,CAAC,EAAEE,OAAO,CAAC,EAAE,CAAC,CAAC;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,WAAWA,CAAEL,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAE;EACvD,OAAO,IAAIb,KAAK,CAACC,IAAI,CAACO,GAAG,EAAEN,IAAI,CAACc,UAAU,CAACN,IAAI,EAAEC,GAAG,GAAG,CAAC,EAAEE,OAAO,CAAC,EAAE,CAAC,CAAC;AACxE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,WAAWA,CAAEP,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAE;EACvD,OAAO,IAAIb,KAAK,CAACC,IAAI,CAACO,GAAG,EAAEN,IAAI,CAACgB,UAAU,CAACR,IAAI,EAAEC,GAAG,GAAG,CAAC,EAAEE,OAAO,CAAC,EAAE,CAAC,CAAC;AACxE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,WAAWA,CAAET,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,OAAO,EAAE;EACvD,OAAO,IAAIb,KAAK,CAACC,IAAI,CAACO,GAAG,EAAEN,IAAI,CAACkB,UAAU,CAACV,IAAI,EAAEC,GAAG,GAAG,CAAC,EAAEE,OAAO,CAAC,EAAE,CAAC,CAAC;AACxE;;AAEA;AACA;AACA;AACA;AACA,OAAO,SAASQ,SAASA,CAAEC,GAAG,EAAEC,KAAK,EAAE;EACrCrB,IAAI,CAACsB,eAAe,CAACF,GAAG,EAAErB,IAAI,CAACO,GAAG,CAACiB,YAAY,EAAEF,KAAK,CAACG,KAAK,CAAC;AAC/D;AAEAL,SAAS,CAACM,aAAa,GAAGzB,IAAI,CAAC0B,UAAU,CAACD,aAAa;;AAEvD;AACA;AACA;AACA;AACAN,SAAS,CAACQ,WAAW,GAAG,SAASA,WAAWA,CAAEN,KAAK,EAAE;EACnD,OAAOrB,IAAI,CAACsB,eAAe,CAACK,WAAW,CAACN,KAAK,CAACG,KAAK,CAAC;AACtD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}