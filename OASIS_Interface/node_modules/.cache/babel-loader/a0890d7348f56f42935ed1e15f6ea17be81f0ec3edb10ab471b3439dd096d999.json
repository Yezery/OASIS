{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/**\n * @packageDocumentation\n *\n * Provides strategies to sort a list of multiaddrs.\n *\n * @example\n *\n * ```typescript\n * import { publicAddressesFirst } from '@libp2p/utils/address-sort'\n * import { multiaddr } from '@multformats/multiaddr'\n *\n *\n * const addresses = [\n *   multiaddr('/ip4/127.0.0.1/tcp/9000'),\n *   multiaddr('/ip4/82.41.53.1/tcp/9000')\n * ].sort(publicAddressesFirst)\n *\n * console.info(addresses)\n * // ['/ip4/82.41.53.1/tcp/9000', '/ip4/127.0.0.1/tcp/9000']\n * ```\n */\nimport { isPrivate } from './multiaddr/is-private.js';\n/**\n * Compare function for array.sort().\n * This sort aims to move the private addresses to the end of the array.\n * In case of equality, a certified address will come first.\n */\nexport function publicAddressesFirst(a, b) {\n  const isAPrivate = isPrivate(a.multiaddr);\n  const isBPrivate = isPrivate(b.multiaddr);\n  if (isAPrivate && !isBPrivate) {\n    return 1;\n  } else if (!isAPrivate && isBPrivate) {\n    return -1;\n  }\n  // Check certified?\n  if (a.isCertified && !b.isCertified) {\n    return -1;\n  } else if (!a.isCertified && b.isCertified) {\n    return 1;\n  }\n  return 0;\n}\n/**\n * A test thing\n */\nexport async function something() {\n  return Uint8Array.from([0, 1, 2]);\n}","map":{"version":3,"names":["isPrivate","publicAddressesFirst","a","b","isAPrivate","multiaddr","isBPrivate","isCertified","something","Uint8Array","from"],"sources":["../../src/address-sort.ts"],"sourcesContent":[null],"mappings":";;;AAAA;;;;;;;;;;;;;;;;;;;;;AAsBA,SAASA,SAAS,QAAQ,2BAA2B;AAGrD;;;;;AAKA,OAAM,SAAUC,oBAAoBA,CAAEC,CAAU,EAAEC,CAAU;EAC1D,MAAMC,UAAU,GAAGJ,SAAS,CAACE,CAAC,CAACG,SAAS,CAAC;EACzC,MAAMC,UAAU,GAAGN,SAAS,CAACG,CAAC,CAACE,SAAS,CAAC;EAEzC,IAAID,UAAU,IAAI,CAACE,UAAU,EAAE;IAC7B,OAAO,CAAC;GACT,MAAM,IAAI,CAACF,UAAU,IAAIE,UAAU,EAAE;IACpC,OAAO,CAAC,CAAC;;EAEX;EACA,IAAIJ,CAAC,CAACK,WAAW,IAAI,CAACJ,CAAC,CAACI,WAAW,EAAE;IACnC,OAAO,CAAC,CAAC;GACV,MAAM,IAAI,CAACL,CAAC,CAACK,WAAW,IAAIJ,CAAC,CAACI,WAAW,EAAE;IAC1C,OAAO,CAAC;;EAGV,OAAO,CAAC;AACV;AAEA;;;AAGA,OAAO,eAAeC,SAASA,CAAA;EAC7B,OAAOC,UAAU,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}