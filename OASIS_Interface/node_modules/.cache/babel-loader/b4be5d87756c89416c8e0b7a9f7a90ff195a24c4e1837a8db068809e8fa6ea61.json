{"ast":null,"code":"export default {\n  props: {},\n  data() {\n    return {\n      NTFList: [],\n      contract: null,\n      MarketContractAddress: this.$store.state.MarketContractAddress,\n      // 合约地址\n      MarketContractAbi: this.$store.state.MarketContractAbi //合约ABI\n    };\n  },\n\n  mounted() {\n    this.initMarketContract();\n  },\n  methods: {\n    async initMarketContract() {\n      let web3 = new this.Web3(window.ethereum);\n      this.contract = new web3.eth.Contract(this.MarketContractAbi, this.MarketContractAddress);\n      await this.contract.methods.fetchMarketplaceUnSoldItems().call().then(res => {\n        this.NTFList = res;\n      });\n      console.log(this.NTFList.length);\n      console.log(this.NTFList);\n    },\n    GETHashAvatar(address) {\n      return \"data:image/png;base64,\" + new this.Identicon(address, 120).toString();\n    },\n    async Buy(NFT) {\n      this.contract.methods.createMarketplaceSale(NFT.nftContract, NFT.itemId).send({\n        from: this.$store.state.currentAddress,\n        value: this.$store.state.Web3.utils.toWei(NFT.price, \"ether\").toString()\n      });\n    }\n  }\n};","map":{"version":3,"names":["props","data","NTFList","contract","MarketContractAddress","$store","state","MarketContractAbi","mounted","initMarketContract","methods","web3","Web3","window","ethereum","eth","Contract","fetchMarketplaceUnSoldItems","call","then","res","console","log","length","GETHashAvatar","address","Identicon","toString","Buy","NFT","createMarketplaceSale","nftContract","itemId","send","from","currentAddress","value","utils","toWei","price"],"sources":["src/views/market/MarketShopType/Art.vue"],"sourcesContent":["<template>\n  <div class=\"TypeModel\">\n    <div class=\"NFTInf\" v-for=\"NFT in this.NTFList\" :key=\"NFT.baseURL\">\n      <div class=\"imageBox\">\n        <img class=\"NFTImage\" :src=\"NFT.baseURL\" alt=\"\" />\n      </div>\n      <div class=\"Inf\">\n        <div class=\"NFTName\">{{ NFT.nftname }}</div>\n        <div class=\"ownerAndPrice\">\n          <div class=\"ownerBox\">\n            <div class=\"ownerOutBorder\">\n              <img class=\"owner\" :src=\"GETHashAvatar(NFT.seller.toString())\" alt=\"\" width=\"36px\" height=\"36px\" />\n            </div>\n            <div class=\"ownerName\">{{ NFT.seller.slice(0, 5) + \"...\" + NFT.seller.slice(37)\n }}</div>\n          </div>\n          <div class=\"priceBox\">\n            <div class=\"priceinnerBox\" @click=\"Buy(NFT)\">\n              <i class=\"el-icon-sort\"></i>\n              <span class=\"price\"> {{ NFT.price\n }} ETH</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    props: {},\n    data() {\n      return {\n        NTFList: [],\n        contract: null,\n        MarketContractAddress: this.$store.state.MarketContractAddress, // 合约地址\n        MarketContractAbi: this.$store.state.MarketContractAbi, //合约ABI\n      };\n    },\n    mounted() {\n      this.initMarketContract();\n    },\n    methods: {\n      async initMarketContract() {\n        let web3 = new this.Web3(window.ethereum);\n        this.contract = new web3.eth.Contract(\n          this.MarketContractAbi,\n          this.MarketContractAddress\n        );\n        await this.contract.methods\n          .fetchMarketplaceUnSoldItems()\n          .call()\n          .then((res) => {\n            this.NTFList = res;\n          });\n        console.log(this.NTFList.length);\n        console.log(this.NTFList);\n      },\n      GETHashAvatar(address) {\n        return (\n          \"data:image/png;base64,\" + new this.Identicon(address, 120).toString()\n        );\n      },\n      async Buy(NFT) {\n        this.contract.methods\n          .createMarketplaceSale(NFT.nftContract, NFT.itemId)\n          .send({\n            from: this.$store.state.currentAddress,\n            value: this.$store.state.Web3.utils\n              .toWei(NFT.price, \"ether\")\n              .toString(),\n          });\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n.TypeModel {\n  height: auto;\n  text-align: center;\n  font-family: Arial, Helvetica, sans-serif;\n}\n.NFTInf {\n  background-color: var(--White--);\n\n  border-radius: 30px;\n  width: 303px;\n  height: auto;\n  padding-bottom: 2%;\n  display: inline-block;\n  overflow: hidden;\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px,\n      rgba(14, 30, 37, 0.32) 0px 2px 16px 0px;\n    transition: all 0.3s ease-in-out;\n  }\n}\n.NFTInf:nth-child(n + 1) {\n  margin-right: 2%;\n  margin-left: 2%;\n  margin-bottom: 4%;\n  margin-top: 1.2%;\n}\n.NFTInf:nth-child(n) {\n  margin-bottom: 4%;\n  margin-top: 1.2%;\n}\n\n@media screen and (max-width: 1600px) and (min-width: 1600px) {\n  .TypeModel {\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    display: flex;\n  }\n}\n.imageBox {\n  width: 100%;\n  height: 63%;\n  border-radius: 30px;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n}\n.Inf {\n  width: 100%;\n  height: 100%;\n  position: relative;\n}\n.NFTImage {\n  object-fit: cover;\n  width: 100%;\n  transition: all 0.6s;\n  cursor: pointer;\n\n  overflow: hidden;\n  &:hover {\n    transform: scale(1.1);\n\n    transition: all 0.6s;\n  }\n}\n.NFTName {\n  color: var(--Dark--);\n  font-weight: 800;\n  text-align: left;\n  margin-left: 20px;\n  margin-top: 20px;\n  font-size: 22px;\n}\n.ownerAndPrice {\n  width: 100%;\n  display: flex;\n  margin-top: 18px;\n}\n.ownerBox {\n  flex: 2;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.priceBox {\n  flex: 1;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n.ownerOutBorder {\n  width: 36px;\n  height: 36px;\n  border: 1px solid white;\n  border-radius: 50%;\n  overflow: hidden;\n  margin-right: 10px;\n}\n.owner {\n  display: inline-block;\n}\n.ownerName {\n  font-size: 15px;\n  color: var(--Dark--);\n}\n.priceinnerBox {\n  width: 82.79px;\n  padding: 13px 0px 13px 0px;\n  color: #55c960;\n  background-color: rgba(85, 201, 96, 0.12);\n  border-radius: 10px;\n  cursor: pointer;\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    background-color: rgba(85, 201, 96, 0.24);\n    transition: all 0.3s ease-in-out;\n  }\n}\n.price {\n  font-size: 12px;\n  font-weight: 800;\n}\n</style>\n"],"mappings":"AA8BA;EACAA,KAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,QAAA;MACAC,qBAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,qBAAA;MAAA;MACAG,iBAAA,OAAAF,MAAA,CAAAC,KAAA,CAAAC,iBAAA;IACA;EACA;;EACAC,QAAA;IACA,KAAAC,kBAAA;EACA;EACAC,OAAA;IACA,MAAAD,mBAAA;MACA,IAAAE,IAAA,YAAAC,IAAA,CAAAC,MAAA,CAAAC,QAAA;MACA,KAAAX,QAAA,OAAAQ,IAAA,CAAAI,GAAA,CAAAC,QAAA,CACA,KAAAT,iBAAA,EACA,KAAAH,qBACA;MACA,WAAAD,QAAA,CAAAO,OAAA,CACAO,2BAAA,GACAC,IAAA,GACAC,IAAA,CAAAC,GAAA;QACA,KAAAlB,OAAA,GAAAkB,GAAA;MACA;MACAC,OAAA,CAAAC,GAAA,MAAApB,OAAA,CAAAqB,MAAA;MACAF,OAAA,CAAAC,GAAA,MAAApB,OAAA;IACA;IACAsB,cAAAC,OAAA;MACA,OACA,oCAAAC,SAAA,CAAAD,OAAA,OAAAE,QAAA;IAEA;IACA,MAAAC,IAAAC,GAAA;MACA,KAAA1B,QAAA,CAAAO,OAAA,CACAoB,qBAAA,CAAAD,GAAA,CAAAE,WAAA,EAAAF,GAAA,CAAAG,MAAA,EACAC,IAAA;QACAC,IAAA,OAAA7B,MAAA,CAAAC,KAAA,CAAA6B,cAAA;QACAC,KAAA,OAAA/B,MAAA,CAAAC,KAAA,CAAAM,IAAA,CAAAyB,KAAA,CACAC,KAAA,CAAAT,GAAA,CAAAU,KAAA,WACAZ,QAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}