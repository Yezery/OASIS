{"ast":null,"code":"import { logger } from '@libp2p/logger';\nimport errCode from 'err-code';\nimport { codes } from '../errors.js';\nimport { randomBytes } from '@libp2p/crypto';\nimport { pipe } from 'it-pipe';\nimport first from 'it-first';\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals';\nimport { PROTOCOL_NAME, PING_LENGTH, PROTOCOL_VERSION } from './constants.js';\nimport { abortableDuplex } from 'abortable-iterator';\nimport { TimeoutController } from 'timeout-abort-controller';\nimport { setMaxListeners } from 'events';\nconst log = logger('libp2p:ping');\nexport class PingService {\n  constructor(components, init) {\n    this.components = components;\n    this.started = false;\n    this.protocol = `/${init.protocolPrefix}/${PROTOCOL_NAME}/${PROTOCOL_VERSION}`;\n    this.init = init;\n  }\n  async start() {\n    await this.components.registrar.handle(this.protocol, this.handleMessage, {\n      maxInboundStreams: this.init.maxInboundStreams,\n      maxOutboundStreams: this.init.maxOutboundStreams\n    });\n    this.started = true;\n  }\n  async stop() {\n    await this.components.registrar.unhandle(this.protocol);\n    this.started = false;\n  }\n  isStarted() {\n    return this.started;\n  }\n  /**\n   * A handler to register with Libp2p to process ping messages\n   */\n  handleMessage(data) {\n    const {\n      stream\n    } = data;\n    void pipe(stream, stream).catch(err => {\n      log.error(err);\n    });\n  }\n  /**\n   * Ping a given peer and wait for its response, getting the operation latency.\n   *\n   * @param {PeerId|Multiaddr} peer\n   * @returns {Promise<number>}\n   */\n  async ping(peer, options = {}) {\n    log('dialing %s to %p', this.protocol, peer);\n    const start = Date.now();\n    const data = randomBytes(PING_LENGTH);\n    const connection = await this.components.connectionManager.openConnection(peer, options);\n    let timeoutController;\n    let signal = options.signal;\n    let stream;\n    // create a timeout if no abort signal passed\n    if (signal == null) {\n      timeoutController = new TimeoutController(this.init.timeout);\n      signal = timeoutController.signal;\n      try {\n        // fails on node < 15.4\n        setMaxListeners?.(Infinity, timeoutController.signal);\n      } catch {}\n    }\n    try {\n      stream = await connection.newStream([this.protocol], {\n        signal\n      });\n      // make stream abortable\n      const source = abortableDuplex(stream, signal);\n      const result = await pipe([data], source, async source => await first(source));\n      const end = Date.now();\n      if (result == null || !uint8ArrayEquals(data, result.subarray())) {\n        throw errCode(new Error('Received wrong ping ack'), codes.ERR_WRONG_PING_ACK);\n      }\n      return end - start;\n    } finally {\n      if (timeoutController != null) {\n        timeoutController.clear();\n      }\n      if (stream != null) {\n        stream.close();\n      }\n    }\n  }\n}","map":{"version":3,"names":["logger","errCode","codes","randomBytes","pipe","first","equals","uint8ArrayEquals","PROTOCOL_NAME","PING_LENGTH","PROTOCOL_VERSION","abortableDuplex","TimeoutController","setMaxListeners","log","PingService","constructor","components","init","started","protocol","protocolPrefix","start","registrar","handle","handleMessage","maxInboundStreams","maxOutboundStreams","stop","unhandle","isStarted","data","stream","catch","err","error","ping","peer","options","Date","now","connection","connectionManager","openConnection","timeoutController","signal","timeout","Infinity","newStream","source","result","end","subarray","Error","ERR_WRONG_PING_ACK","clear","close"],"sources":["../../../src/ping/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}