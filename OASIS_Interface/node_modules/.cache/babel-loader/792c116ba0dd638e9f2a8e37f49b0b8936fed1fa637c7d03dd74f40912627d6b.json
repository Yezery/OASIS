{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\n/* eslint-disable import/export */\n/* eslint-disable complexity */\n/* eslint-disable @typescript-eslint/no-namespace */\n/* eslint-disable @typescript-eslint/no-unnecessary-boolean-literal-compare */\n/* eslint-disable @typescript-eslint/no-empty-interface */\nimport { encodeMessage, decodeMessage, message } from 'protons-runtime';\nexport var NoiseExtensions;\n(function (NoiseExtensions) {\n  let _codec;\n  NoiseExtensions.codec = () => {\n    if (_codec == null) {\n      _codec = message((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork();\n        }\n        if (obj.webtransportCerthashes != null) {\n          for (const value of obj.webtransportCerthashes) {\n            w.uint32(10);\n            w.bytes(value);\n          }\n        }\n        if (opts.lengthDelimited !== false) {\n          w.ldelim();\n        }\n      }, (reader, length) => {\n        const obj = {\n          webtransportCerthashes: []\n        };\n        const end = length == null ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n          const tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              obj.webtransportCerthashes.push(reader.bytes());\n              break;\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return obj;\n      });\n    }\n    return _codec;\n  };\n  NoiseExtensions.encode = obj => {\n    return encodeMessage(obj, NoiseExtensions.codec());\n  };\n  NoiseExtensions.decode = buf => {\n    return decodeMessage(buf, NoiseExtensions.codec());\n  };\n})(NoiseExtensions || (NoiseExtensions = {}));\nexport var NoiseHandshakePayload;\n(function (NoiseHandshakePayload) {\n  let _codec;\n  NoiseHandshakePayload.codec = () => {\n    if (_codec == null) {\n      _codec = message((obj, w, opts = {}) => {\n        if (opts.lengthDelimited !== false) {\n          w.fork();\n        }\n        if (opts.writeDefaults === true || obj.identityKey != null && obj.identityKey.byteLength > 0) {\n          w.uint32(10);\n          w.bytes(obj.identityKey ?? new Uint8Array(0));\n        }\n        if (opts.writeDefaults === true || obj.identitySig != null && obj.identitySig.byteLength > 0) {\n          w.uint32(18);\n          w.bytes(obj.identitySig ?? new Uint8Array(0));\n        }\n        if (obj.extensions != null) {\n          w.uint32(34);\n          NoiseExtensions.codec().encode(obj.extensions, w, {\n            writeDefaults: false\n          });\n        }\n        if (opts.lengthDelimited !== false) {\n          w.ldelim();\n        }\n      }, (reader, length) => {\n        const obj = {\n          identityKey: new Uint8Array(0),\n          identitySig: new Uint8Array(0)\n        };\n        const end = length == null ? reader.len : reader.pos + length;\n        while (reader.pos < end) {\n          const tag = reader.uint32();\n          switch (tag >>> 3) {\n            case 1:\n              obj.identityKey = reader.bytes();\n              break;\n            case 2:\n              obj.identitySig = reader.bytes();\n              break;\n            case 4:\n              obj.extensions = NoiseExtensions.codec().decode(reader, reader.uint32());\n              break;\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n        return obj;\n      });\n    }\n    return _codec;\n  };\n  NoiseHandshakePayload.encode = obj => {\n    return encodeMessage(obj, NoiseHandshakePayload.codec());\n  };\n  NoiseHandshakePayload.decode = buf => {\n    return decodeMessage(buf, NoiseHandshakePayload.codec());\n  };\n})(NoiseHandshakePayload || (NoiseHandshakePayload = {}));","map":{"version":3,"names":["encodeMessage","decodeMessage","message","NoiseExtensions","_codec","codec","obj","w","opts","lengthDelimited","fork","webtransportCerthashes","value","uint32","bytes","ldelim","reader","length","end","len","pos","tag","push","skipType","encode","decode","buf","NoiseHandshakePayload","writeDefaults","identityKey","byteLength","Uint8Array","identitySig","extensions"],"sources":["../../../src/proto/payload.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}