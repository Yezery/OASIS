{"ast":null,"code":"\"use strict\";\n\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Package int provides helper functions for integerss.\n */\n// Shim using 16-bit pieces.\nfunction imulShim(a, b) {\n  var ah = a >>> 16 & 0xffff,\n    al = a & 0xffff;\n  var bh = b >>> 16 & 0xffff,\n    bl = b & 0xffff;\n  return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;\n}\n/** 32-bit integer multiplication.  */\n// Use system Math.imul if available, otherwise use our shim.\nexports.mul = Math.imul || imulShim;\n/** 32-bit integer addition.  */\nfunction add(a, b) {\n  return a + b | 0;\n}\nexports.add = add;\n/**  32-bit integer subtraction.  */\nfunction sub(a, b) {\n  return a - b | 0;\n}\nexports.sub = sub;\n/** 32-bit integer left rotation */\nfunction rotl(x, n) {\n  return x << n | x >>> 32 - n;\n}\nexports.rotl = rotl;\n/** 32-bit integer left rotation */\nfunction rotr(x, n) {\n  return x << 32 - n | x >>> n;\n}\nexports.rotr = rotr;\nfunction isIntegerShim(n) {\n  return typeof n === \"number\" && isFinite(n) && Math.floor(n) === n;\n}\n/**\n * Returns true if the argument is an integer number.\n *\n * In ES2015, Number.isInteger.\n */\nexports.isInteger = Number.isInteger || isIntegerShim;\n/**\n *  Math.pow(2, 53) - 1\n *\n *  In ES2015 Number.MAX_SAFE_INTEGER.\n */\nexports.MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Returns true if the argument is a safe integer number\n * (-MIN_SAFE_INTEGER < number <= MAX_SAFE_INTEGER)\n *\n * In ES2015, Number.isSafeInteger.\n */\nexports.isSafeInteger = function (n) {\n  return exports.isInteger(n) && n >= -exports.MAX_SAFE_INTEGER && n <= exports.MAX_SAFE_INTEGER;\n};","map":{"version":3,"names":["imulShim","a","b","ah","al","bh","bl","exports","mul","Math","imul","add","sub","rotl","x","n","rotr","isIntegerShim","isFinite","floor","isInteger","Number","MAX_SAFE_INTEGER","isSafeInteger"],"sources":["../int.ts"],"sourcesContent":[null],"mappings":";;AAAA;AACA;;;;AAEA;;;AAIA;AACA,SAASA,QAAQA,CAACC,CAAS,EAAEC,CAAS;EAClC,IAAMC,EAAE,GAAIF,CAAC,KAAK,EAAE,GAAI,MAAM;IAAEG,EAAE,GAAGH,CAAC,GAAG,MAAM;EAC/C,IAAMI,EAAE,GAAIH,CAAC,KAAK,EAAE,GAAI,MAAM;IAAEI,EAAE,GAAGJ,CAAC,GAAG,MAAM;EAC/C,OAASE,EAAE,GAAGE,EAAE,IAAOH,EAAE,GAAGG,EAAE,GAAGF,EAAE,GAAGC,EAAE,IAAK,EAAE,KAAM,CAAC,CAAC,GAAG,CAAC;AAC/D;AAEA;AACA;AACaE,OAAA,CAAAC,GAAG,GAAIC,IAAgD,CAACC,IAAI,IAAIV,QAAQ;AAErF;AACA,SAAgBW,GAAGA,CAACV,CAAS,EAAEC,CAAS;EACpC,OAAQD,CAAC,GAAGC,CAAC,GAAI,CAAC;AACtB;AAFAK,OAAA,CAAAI,GAAA,GAAAA,GAAA;AAIA;AACA,SAAgBC,GAAGA,CAACX,CAAS,EAAEC,CAAS;EACpC,OAAQD,CAAC,GAAGC,CAAC,GAAI,CAAC;AACtB;AAFAK,OAAA,CAAAK,GAAA,GAAAA,GAAA;AAIA;AACA,SAAgBC,IAAIA,CAACC,CAAS,EAAEC,CAAS;EACrC,OAAOD,CAAC,IAAIC,CAAC,GAAGD,CAAC,KAAM,EAAE,GAAGC,CAAE;AAClC;AAFAR,OAAA,CAAAM,IAAA,GAAAA,IAAA;AAIA;AACA,SAAgBG,IAAIA,CAACF,CAAS,EAAEC,CAAS;EACrC,OAAOD,CAAC,IAAK,EAAE,GAAGC,CAAE,GAAGD,CAAC,KAAKC,CAAC;AAClC;AAFAR,OAAA,CAAAS,IAAA,GAAAA,IAAA;AAIA,SAASC,aAAaA,CAACF,CAAS;EAC5B,OAAO,OAAOA,CAAC,KAAK,QAAQ,IAAIG,QAAQ,CAACH,CAAC,CAAC,IAAIN,IAAI,CAACU,KAAK,CAACJ,CAAC,CAAC,KAAKA,CAAC;AACtE;AAEA;;;;;AAKaR,OAAA,CAAAa,SAAS,GAAIC,MAA6C,CAACD,SAAS,IAAIH,aAAa;AAElG;;;;;AAKaV,OAAA,CAAAe,gBAAgB,GAAG,gBAAgB;AAEhD;;;;;;AAMaf,OAAA,CAAAgB,aAAa,GAAG,UAACR,CAAS;EACnC,OAAAR,OAAA,CAAAa,SAAS,CAACL,CAAC,CAAC,IAAKA,CAAC,IAAI,CAACR,OAAA,CAAAe,gBAAgB,IAAIP,CAAC,IAAIR,OAAA,CAAAe,gBAAiB;AAAjE,CAAiE"},"metadata":{},"sourceType":"script","externalDependencies":[]}