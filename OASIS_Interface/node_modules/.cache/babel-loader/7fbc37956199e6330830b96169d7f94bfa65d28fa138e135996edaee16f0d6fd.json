{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import ad from \"@/views/main/AD/ad.vue\";\n// import balanceEchart from \"@/views/bar/balanceEchart.vue\";\n// import ad2 from \"@/views/main/AD/ADslots/ad2.vue\";\n// import ad1 from \"@/views/main/AD/ADslots/ad1.vue\";\n// import { search } from \"@/api/axios/ownerContractLIst\";\nimport { getSaleList } from \"@/api/axios/contract\";\nimport Show3D from \"@/components/3DModelShow/3DModel.vue\";\nexport default {\n  components: {\n    Show3D\n  },\n  data() {\n    return {\n      contract: null,\n      SaleList3D: [],\n      toSearch: false,\n      initModel: null,\n      modelPath: \"\",\n      isInitModel: false\n    };\n  },\n  async mounted() {\n    await getSaleList().then(re => {\n      this.NFTList = re;\n      this.SaleList3D = re.filter(NFT => NFT.isActive && JSON.parse(NFT[6]).description == \"3D\");\n      this.SaleList3D.sort((a, b) => Number(a.price) - Number(b.price));\n    });\n  },\n  methods: {\n    seeModel(data) {\n      this.initModel = data;\n    },\n    setNewModelPath(path) {\n      this.isInitModel = true;\n      this.modelPath = path;\n      setTimeout(() => {\n        this.initModel();\n      }, 100);\n    },\n    to3DInfPage(row) {\n      let NFTInf = {\n        saleId: row.saleId,\n        modelPath: JSON.parse(row.tokenURI).image,\n        nftName: JSON.parse(row.tokenURI).name,\n        nftAddress: row.nftContract,\n        tokenId: row.tokenId,\n        isActive: row.isActive,\n        seller: row.seller,\n        price: row.price\n      };\n      this.$store.commit(\"setNFTInf\", NFTInf);\n      this.$router.push({\n        path: \"/home/NFTInf3D\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["getSaleList","Show3D","components","data","contract","SaleList3D","toSearch","initModel","modelPath","isInitModel","mounted","then","re","NFTList","filter","NFT","isActive","JSON","parse","description","sort","a","b","Number","price","methods","seeModel","setNewModelPath","path","setTimeout","to3DInfPage","row","NFTInf","saleId","tokenURI","image","nftName","name","nftAddress","nftContract","tokenId","seller","$store","commit","$router","push"],"sources":["src/views/main/marketShop/nftMarket3D.vue"],"sourcesContent":["<template>\n  <div class=\"MainWindow animate__animated animate__fadeInLeft\">\n    <div class=\"MainLeft\">\n      <div class=\"MainLeft_Top\">\n        <div class=\"show3DBox\">\n          <Show3D :model-path=\"modelPath\" @initModel=\"seeModel\" />\n        </div>\n      </div>\n      <div class=\"MainLeft_Bottom\">\n        <el-carousel :interval=\"7000\" type=\"card\" height=\"230px\" indicator-position=\"none\">\n          <el-carousel-item v-for=\"nft in SaleList3D\" :key=\"JSON.parse(nft.tokenURI).image\">\n            <div class=\"NFTInf3D\">\n              <div class=\"Inf3D\">\n                <div class=\"Inf3DLeft\">\n                  <div class=\"Inf3DLeftTop\">\n                    <el-button @click=\"setNewModelPath(JSON.parse(nft.tokenURI).image)\" type=\"primary\" icon=\"el-icon-video-play\" circle />\n                  </div>\n\n                  <div class=\"Inf3DLeftBottom\">\n                    <div class=\"TokenID\">\n                      <span style=\"font-size: 20px;\">#{{ nft.tokenId }}</span>\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"Inf3DRight\">\n                  <div style=\"height: 60%;display: flex;justify-content: center;align-items: center;font-size: 20px;\">\n                    <!-- {{ nft.nftName }} -->\n                    {{ JSON.parse(nft.tokenURI).name }}\n                  </div>\n                  <div style=\"width: 90%;height: 30%;display: flex;justify-content: center;\">\n                    <div class=\"priceBox\">\n                      <span class=\"price\">{{ $store.state.Web3.utils.fromWei(nft.price, 'ether') }}</span> ETH\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </el-carousel-item>\n        </el-carousel>\n      </div>\n    </div>\n    <div class=\"MainRight\">\n      <div class=\"tableShow\">\n        <el-table :data=\"SaleList3D.slice(0, 10)\" class=\"marketShopTableLeft\" @row-click=\"to3DInfPage\">\n          <template slot=\"empty\">\n            <div>\n              <img style=\"padding: 10% 0 0 0;\" width=\"20%\" height=\"20%\" src=\"@/assets/webAssets/MetaMask.png\" alt=\"\">\n              <h4 style=\"padding: 0 0 10% 0\">\n                浏览器未连接Metamask\n              </h4>\n            </div>\n          </template>\n          <el-table-column type=\"index\" width=\"70\" label=\"Rank\" />\n          <el-table-column label=\"系列\">\n            <template slot-scope=\"scope\">\n              <div class=\"collectionRow\">\n                <div style=\"padding-left: 20px; font-size: 1vw; display: inline-block;\">\n                  {{ JSON.parse(scope.row.tokenURI).name }}\n                  <span style=\"font-size: 0.5vw;\">\n                    #{{ scope.row.tokenId }}\n                  </span>\n                </div>\n              </div>\n            </template>\n          </el-table-column>\n          <el-table-column align=\"center\" label=\"价格\" fixed=\"right\">\n            <template slot-scope=\"scope\">\n              <h4> {{ $store.state.Web3.utils.fromWei(scope.row.price, 'ether') }} ETH</h4>\n            </template>\n          </el-table-column>\n        </el-table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  // import ad from \"@/views/main/AD/ad.vue\";\n  // import balanceEchart from \"@/views/bar/balanceEchart.vue\";\n  // import ad2 from \"@/views/main/AD/ADslots/ad2.vue\";\n  // import ad1 from \"@/views/main/AD/ADslots/ad1.vue\";\n  // import { search } from \"@/api/axios/ownerContractLIst\";\n  import { getSaleList } from \"@/api/axios/contract\";\n  import Show3D from \"@/components/3DModelShow/3DModel.vue\";\n  export default {\n    components: {\n      Show3D,\n    },\n    data() {\n      return {\n        contract: null,\n        SaleList3D: [],\n\n        toSearch: false,\n\n        initModel: null,\n        modelPath: \"\",\n        isInitModel: false,\n      };\n    },\n    async mounted() {\n      await getSaleList().then((re) => {\n        this.NFTList = re;\n        this.SaleList3D = re.filter(\n          (NFT) => NFT.isActive && JSON.parse(NFT[6]).description == \"3D\"\n        );\n        this.SaleList3D.sort((a, b) => Number(a.price) - Number(b.price));\n      });\n    },\n    methods: {\n      seeModel(data) {\n        this.initModel = data;\n      },\n      setNewModelPath(path) {\n        this.isInitModel = true;\n        this.modelPath = path;\n        setTimeout(() => {\n          this.initModel();\n        }, 100);\n      },\n      to3DInfPage(row) {\n        let NFTInf = {\n          saleId: row.saleId,\n          modelPath: JSON.parse(row.tokenURI).image,\n          nftName: JSON.parse(row.tokenURI).name,\n          nftAddress: row.nftContract,\n          tokenId: row.tokenId,\n          isActive: row.isActive,\n          seller: row.seller,\n          price: row.price,\n        };\n        this.$store.commit(\"setNFTInf\", NFTInf);\n        this.$router.push({\n          path: \"/home/NFTInf3D\",\n        });\n      },\n    },\n  };\n</script>\n<style lang=\"scss\" scoped>\n@import \"@/style/marketShop/marketShop3D.scss\";\n</style>"],"mappings":";AA8EA;AACA;AACA;AACA;AACA;AACA,SAAAA,WAAA;AACA,OAAAC,MAAA;AACA;EACAC,UAAA;IACAD;EACA;EACAE,KAAA;IACA;MACAC,QAAA;MACAC,UAAA;MAEAC,QAAA;MAEAC,SAAA;MACAC,SAAA;MACAC,WAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,MAAAV,WAAA,GAAAW,IAAA,CAAAC,EAAA;MACA,KAAAC,OAAA,GAAAD,EAAA;MACA,KAAAP,UAAA,GAAAO,EAAA,CAAAE,MAAA,CACAC,GAAA,IAAAA,GAAA,CAAAC,QAAA,IAAAC,IAAA,CAAAC,KAAA,CAAAH,GAAA,KAAAI,WAAA,QACA;MACA,KAAAd,UAAA,CAAAe,IAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAC,MAAA,CAAAF,CAAA,CAAAG,KAAA,IAAAD,MAAA,CAAAD,CAAA,CAAAE,KAAA;IACA;EACA;EACAC,OAAA;IACAC,SAAAvB,IAAA;MACA,KAAAI,SAAA,GAAAJ,IAAA;IACA;IACAwB,gBAAAC,IAAA;MACA,KAAAnB,WAAA;MACA,KAAAD,SAAA,GAAAoB,IAAA;MACAC,UAAA;QACA,KAAAtB,SAAA;MACA;IACA;IACAuB,YAAAC,GAAA;MACA,IAAAC,MAAA;QACAC,MAAA,EAAAF,GAAA,CAAAE,MAAA;QACAzB,SAAA,EAAAS,IAAA,CAAAC,KAAA,CAAAa,GAAA,CAAAG,QAAA,EAAAC,KAAA;QACAC,OAAA,EAAAnB,IAAA,CAAAC,KAAA,CAAAa,GAAA,CAAAG,QAAA,EAAAG,IAAA;QACAC,UAAA,EAAAP,GAAA,CAAAQ,WAAA;QACAC,OAAA,EAAAT,GAAA,CAAAS,OAAA;QACAxB,QAAA,EAAAe,GAAA,CAAAf,QAAA;QACAyB,MAAA,EAAAV,GAAA,CAAAU,MAAA;QACAjB,KAAA,EAAAO,GAAA,CAAAP;MACA;MACA,KAAAkB,MAAA,CAAAC,MAAA,cAAAX,MAAA;MACA,KAAAY,OAAA,CAAAC,IAAA;QACAjB,IAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}