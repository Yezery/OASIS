{"ast":null,"code":"import { createWriteStream } from 'node:fs';\nimport { ChildProcess } from 'node:child_process';\nimport { isWritableStream } from 'is-stream';\nconst isExecaChildProcess = target => target instanceof ChildProcess && typeof target.then === 'function';\nconst pipeToTarget = (spawned, streamName, target) => {\n  if (typeof target === 'string') {\n    spawned[streamName].pipe(createWriteStream(target));\n    return spawned;\n  }\n  if (isWritableStream(target)) {\n    spawned[streamName].pipe(target);\n    return spawned;\n  }\n  if (!isExecaChildProcess(target)) {\n    throw new TypeError('The second argument must be a string, a stream or an Execa child process.');\n  }\n  if (!isWritableStream(target.stdin)) {\n    throw new TypeError('The target child process\\'s stdin must be available.');\n  }\n  spawned[streamName].pipe(target.stdin);\n  return target;\n};\nexport const addPipeMethods = spawned => {\n  if (spawned.stdout !== null) {\n    spawned.pipeStdout = pipeToTarget.bind(undefined, spawned, 'stdout');\n  }\n  if (spawned.stderr !== null) {\n    spawned.pipeStderr = pipeToTarget.bind(undefined, spawned, 'stderr');\n  }\n  if (spawned.all !== undefined) {\n    spawned.pipeAll = pipeToTarget.bind(undefined, spawned, 'all');\n  }\n};","map":{"version":3,"names":["createWriteStream","ChildProcess","isWritableStream","isExecaChildProcess","target","then","pipeToTarget","spawned","streamName","pipe","TypeError","stdin","addPipeMethods","stdout","pipeStdout","bind","undefined","stderr","pipeStderr","all","pipeAll"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/execa@7.2.0/node_modules/execa/lib/pipe.js"],"sourcesContent":["import {createWriteStream} from 'node:fs';\nimport {ChildProcess} from 'node:child_process';\nimport {isWritableStream} from 'is-stream';\n\nconst isExecaChildProcess = target => target instanceof ChildProcess && typeof target.then === 'function';\n\nconst pipeToTarget = (spawned, streamName, target) => {\n\tif (typeof target === 'string') {\n\t\tspawned[streamName].pipe(createWriteStream(target));\n\t\treturn spawned;\n\t}\n\n\tif (isWritableStream(target)) {\n\t\tspawned[streamName].pipe(target);\n\t\treturn spawned;\n\t}\n\n\tif (!isExecaChildProcess(target)) {\n\t\tthrow new TypeError('The second argument must be a string, a stream or an Execa child process.');\n\t}\n\n\tif (!isWritableStream(target.stdin)) {\n\t\tthrow new TypeError('The target child process\\'s stdin must be available.');\n\t}\n\n\tspawned[streamName].pipe(target.stdin);\n\treturn target;\n};\n\nexport const addPipeMethods = spawned => {\n\tif (spawned.stdout !== null) {\n\t\tspawned.pipeStdout = pipeToTarget.bind(undefined, spawned, 'stdout');\n\t}\n\n\tif (spawned.stderr !== null) {\n\t\tspawned.pipeStderr = pipeToTarget.bind(undefined, spawned, 'stderr');\n\t}\n\n\tif (spawned.all !== undefined) {\n\t\tspawned.pipeAll = pipeToTarget.bind(undefined, spawned, 'all');\n\t}\n};\n"],"mappings":"AAAA,SAAQA,iBAAiB,QAAO,SAAS;AACzC,SAAQC,YAAY,QAAO,oBAAoB;AAC/C,SAAQC,gBAAgB,QAAO,WAAW;AAE1C,MAAMC,mBAAmB,GAAGC,MAAM,IAAIA,MAAM,YAAYH,YAAY,IAAI,OAAOG,MAAM,CAACC,IAAI,KAAK,UAAU;AAEzG,MAAMC,YAAY,GAAGA,CAACC,OAAO,EAAEC,UAAU,EAAEJ,MAAM,KAAK;EACrD,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC/BG,OAAO,CAACC,UAAU,CAAC,CAACC,IAAI,CAACT,iBAAiB,CAACI,MAAM,CAAC,CAAC;IACnD,OAAOG,OAAO;EACf;EAEA,IAAIL,gBAAgB,CAACE,MAAM,CAAC,EAAE;IAC7BG,OAAO,CAACC,UAAU,CAAC,CAACC,IAAI,CAACL,MAAM,CAAC;IAChC,OAAOG,OAAO;EACf;EAEA,IAAI,CAACJ,mBAAmB,CAACC,MAAM,CAAC,EAAE;IACjC,MAAM,IAAIM,SAAS,CAAC,2EAA2E,CAAC;EACjG;EAEA,IAAI,CAACR,gBAAgB,CAACE,MAAM,CAACO,KAAK,CAAC,EAAE;IACpC,MAAM,IAAID,SAAS,CAAC,sDAAsD,CAAC;EAC5E;EAEAH,OAAO,CAACC,UAAU,CAAC,CAACC,IAAI,CAACL,MAAM,CAACO,KAAK,CAAC;EACtC,OAAOP,MAAM;AACd,CAAC;AAED,OAAO,MAAMQ,cAAc,GAAGL,OAAO,IAAI;EACxC,IAAIA,OAAO,CAACM,MAAM,KAAK,IAAI,EAAE;IAC5BN,OAAO,CAACO,UAAU,GAAGR,YAAY,CAACS,IAAI,CAACC,SAAS,EAAET,OAAO,EAAE,QAAQ,CAAC;EACrE;EAEA,IAAIA,OAAO,CAACU,MAAM,KAAK,IAAI,EAAE;IAC5BV,OAAO,CAACW,UAAU,GAAGZ,YAAY,CAACS,IAAI,CAACC,SAAS,EAAET,OAAO,EAAE,QAAQ,CAAC;EACrE;EAEA,IAAIA,OAAO,CAACY,GAAG,KAAKH,SAAS,EAAE;IAC9BT,OAAO,CAACa,OAAO,GAAGd,YAAY,CAACS,IAAI,CAACC,SAAS,EAAET,OAAO,EAAE,KAAK,CAAC;EAC/D;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}