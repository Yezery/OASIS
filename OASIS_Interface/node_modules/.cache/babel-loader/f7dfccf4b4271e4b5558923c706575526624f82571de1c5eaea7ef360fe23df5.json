{"ast":null,"code":"export default {\n  // inject: [\"init\"], //依赖注入的内容，导入父组件的某个方法\n  props: {\n    WalletConnect: {\n      type: Function\n    }\n  },\n  data() {\n    return {\n      //****钱包连接弹出框******//\n      MetaMaskTipsIsShow: false,\n      isconnect: false,\n      balance: \"\",\n      Tips2: \"MetaMask无法连接 \",\n      isDisable: false,\n      //*********************//\n      //********Web3********//\n      web3: null,\n      account: \"MetaMask is not connected\",\n      contract: null,\n      toAddress: \"\",\n      value: \"\",\n      re: \"\",\n      avatar: \"\",\n      //*********************//\n      CopyTips: \"点击复制\",\n      CopySuccess: \"复制成功！\",\n      isCopy: false\n    };\n  },\n  mounted() {\n    this.GETHashAvatar();\n  },\n  watch: {},\n  methods: {\n    Copy() {\n      navigator.clipboard.writeText(this.re).then(() => {\n        this.isCopy = true;\n        setTimeout(() => {\n          this.isCopy = false;\n        }, 3000);\n      });\n    },\n    GETHashAvatar() {\n      if (this.isconnect) {\n        console.log(this.re[0]);\n        this.avatar = \"data:image/png;base64,\" + new this.Identicon(this.re[0], 120).toString();\n        this.$refs.avatar.width = 60;\n        this.$refs.avatar.height = 60;\n      } else {\n        this.avatar = require(\"@/assets/webAssets/MetaMask.png\");\n        this.$refs.avatar.width = 40;\n        this.$refs.avatar.height = 40;\n      }\n    },\n    MMCTDis() {\n      this.$refs.MMCT.classList.remove(\"animate__fadeIn\");\n      this.$refs.MMCT.classList.add(\"animate__fadeOut\");\n      setTimeout(() => {\n        this.MetaMaskTipsIsShow = !this.MetaMaskTipsIsShow;\n      }, 750);\n    },\n    connectWallet() {\n      if (window.ethereum && !this.isconnect) {\n        window.ethereum.enable().then(res => {\n          if (res) {\n            this.isconnect = true;\n            window.web3 = new this.Web3(ethereum);\n            var web3 = window.web3;\n            this.account = res[0];\n            this.account = this.account.slice(0, 5) + \"...\" + this.account.slice(37);\n            this.re = res;\n            this.balance = web3.eth.getBalance(this.re[0]);\n            console.log(this.balance);\n            this.balance.then(res => {\n              this.balance = web3.utils.fromWei(res, \"ether\").slice(0, 4);\n            });\n            this.$store.commit(\"connection\", true);\n            this.$store.commit(\"setcurrentAddress\", res[0]);\n            this.$store.commit(\"setWEB3\", window.web3);\n            this.GETHashAvatar();\n            this.WalletConnect();\n          } else {\n            console.log(res);\n          }\n        });\n      } else {\n        this.$refs.MMCT.classList.remove(\"animate__fadeOut\");\n        this.$refs.MMCT.classList.add(\"animate__fadeIn\");\n        this.MetaMaskTipsIsShow = !this.MetaMaskTipsIsShow;\n        setTimeout(() => {\n          this.MMCTDis();\n        }, 1800);\n      }\n    },\n    async initConnect() {\n      if (window.ethereum) {\n        this.web3 = new this.Web3(window.ethereum);\n        try {\n          await window.ethereum.enable();\n          this.account = (await this.web3.eth.getAccounts())[0];\n        } catch (error) {\n          console.error(error);\n        }\n      } else if (window.web3) {\n        this.web3 = new this.Web3(window.web3.currentProvider);\n        this.account = (await this.web3.eth.getAccounts())[0];\n      } else {\n        this.$refs.MMCT.classList.remove(\"animate__fadeOut\");\n        this.$refs.MMCT.classList.add(\"animate__fadeIn\");\n        this.MetaMaskTipsIsShow = !this.MetaMaskTipsIsShow;\n      }\n    },\n    async transfer() {\n      let value = this.web3.utils.toWei(this.value, \"ether\");\n      this.contract.methods.transfer(this.toAddress).send({\n        from: this.account,\n        value: value.toString()\n      }).then(result => {\n        console.log(\"Transaction hash:\", result.transactionHash);\n      }).catch(error => {\n        console.error(error);\n      });\n\n      // console.log(this.contract);\n\n      // await this.contract.methods.changeText(\"log\").call().then(result => this.re = result)\n      // console.log(this.re );\n    }\n  }\n};","map":{"version":3,"names":["props","WalletConnect","type","Function","data","MetaMaskTipsIsShow","isconnect","balance","Tips2","isDisable","web3","account","contract","toAddress","value","re","avatar","CopyTips","CopySuccess","isCopy","mounted","GETHashAvatar","watch","methods","Copy","navigator","clipboard","writeText","then","setTimeout","console","log","Identicon","toString","$refs","width","height","require","MMCTDis","MMCT","classList","remove","add","connectWallet","window","ethereum","enable","res","Web3","slice","eth","getBalance","utils","fromWei","$store","commit","initConnect","getAccounts","error","currentProvider","transfer","toWei","send","from","result","transactionHash","catch"],"sources":["src/views/user/WalletConnect.vue"],"sourcesContent":["<template>\n  <div class=\"Walletbox\">\n    <!-- 钱包连接提醒 -->\n    <div class=\"Mask animate__animated animate__fadeIn\" v-show=\"MetaMaskTipsIsShow\" ref=\"MMCT\">\n      <div class=\"MetaMaskConnectionTip\">\n        <div class=\"MetaMaskbox\">\n          <div class=\"BOX\">\n            <div class=\"MetaMaskAvatar\">\n              <img :src=\"avatar\" alt=\"\" width=\"80px\" height=\"80px\" style=\"object-fit: contain\" />\n            </div>\n          </div>\n          <p class=\"MetaMaskTips\" style=\"\n              margin-bottom: 10%;\n              font-size: 15px;\n              font-weight: 800;\n              line-height: 230%;\n            \">\n            {{ isconnect ? balance + \" ETH\" : Tips2 }}\n          </p>\n        </div>\n      </div>\n    </div>\n    <!---------------->\n    <div class=\"WalletInnerBox\">\n      <span class=\"avatarBox\">\n        <img class=\"avatar\" :src=\"avatar\" alt=\"\" ref=\"avatar\" @click.stop=\"connectWallet\" />\n      </span>\n      <span class=\"address\" @click.stop=\"Copy\">{{ account }}\n        <el-tooltip class=\"item\" effect=\"dark\" :content=\"isCopy ? CopySuccess : CopyTips\" placement=\"bottom\"><span><i v-if=\"isconnect\" style=\"margin-left: 5px; cursor: pointer\" class=\"el-icon-document-copy\"></i></span></el-tooltip></span>\n    </div>\n  </div>\n</template>\n\n<script>\n  \n  export default {\n    // inject: [\"init\"], //依赖注入的内容，导入父组件的某个方法\n    props: {\n      WalletConnect: {\n        type: Function,\n      },\n    },\n    data() {\n      return {\n        //****钱包连接弹出框******//\n        MetaMaskTipsIsShow: false,\n        isconnect: false,\n        balance: \"\",\n        Tips2: \"MetaMask无法连接 \",\n        isDisable: false,\n        //*********************//\n        //********Web3********//\n        web3: null,\n        account: \"MetaMask is not connected\",\n        contract: null,\n        toAddress: \"\",\n        value: \"\",\n        re: \"\",\n        avatar: \"\",\n        //*********************//\n        CopyTips: \"点击复制\",\n        CopySuccess: \"复制成功！\",\n        isCopy: false,\n      };\n    },\n    mounted() {\n      this.GETHashAvatar();\n    },\n    watch: {},\n    methods: {\n      Copy() {\n        navigator.clipboard.writeText(this.re).then(() => {\n          this.isCopy = true;\n          setTimeout(() => {\n            this.isCopy = false;\n          }, 3000);\n        });\n      },\n      GETHashAvatar() {\n        if (this.isconnect) {\n          console.log(this.re[0]);\n          this.avatar =\n            \"data:image/png;base64,\" +\n            new this.Identicon(this.re[0], 120).toString();\n          this.$refs.avatar.width = 60;\n          this.$refs.avatar.height = 60;\n        } else {\n          this.avatar = require(\"@/assets/webAssets/MetaMask.png\");\n          this.$refs.avatar.width = 40;\n          this.$refs.avatar.height = 40;\n        }\n      },\n      MMCTDis() {\n        this.$refs.MMCT.classList.remove(\"animate__fadeIn\");\n        this.$refs.MMCT.classList.add(\"animate__fadeOut\");\n        setTimeout(() => {\n          this.MetaMaskTipsIsShow = !this.MetaMaskTipsIsShow;\n        }, 750);\n      },\n      connectWallet() {\n        if (window.ethereum && !this.isconnect) {\n          window.ethereum.enable().then((res) => {\n            if (res) {\n              this.isconnect = true;\n              window.web3 = new this.Web3(ethereum);\n              var web3 = window.web3;\n              this.account = res[0];\n              this.account =\n                this.account.slice(0, 5) + \"...\" + this.account.slice(37);\n              this.re = res;\n              this.balance = web3.eth.getBalance(this.re[0]);\n              console.log(this.balance);\n              this.balance.then((res) => {\n                this.balance = web3.utils.fromWei(res, \"ether\").slice(0, 4);\n              });\n\n              this.$store.commit(\"connection\", true);\n              this.$store.commit(\"setcurrentAddress\", res[0]);\n              this.$store.commit(\"setWEB3\", window.web3);\n              this.GETHashAvatar();\n              this.WalletConnect();\n            } else {\n              console.log(res);\n            }\n          });\n        } else {\n          this.$refs.MMCT.classList.remove(\"animate__fadeOut\");\n          this.$refs.MMCT.classList.add(\"animate__fadeIn\");\n          this.MetaMaskTipsIsShow = !this.MetaMaskTipsIsShow;\n          setTimeout(() => {\n            this.MMCTDis();\n          }, 1800);\n        }\n      },\n      async initConnect() {\n        if (window.ethereum) {\n          this.web3 = new this.Web3(window.ethereum);\n          try {\n            await window.ethereum.enable();\n            this.account = (await this.web3.eth.getAccounts())[0];\n          } catch (error) {\n            console.error(error);\n          }\n        } else if (window.web3) {\n          this.web3 = new this.Web3(window.web3.currentProvider);\n          this.account = (await this.web3.eth.getAccounts())[0];\n        } else {\n          this.$refs.MMCT.classList.remove(\"animate__fadeOut\");\n          this.$refs.MMCT.classList.add(\"animate__fadeIn\");\n          this.MetaMaskTipsIsShow = !this.MetaMaskTipsIsShow;\n        }\n      },\n\n      async transfer() {\n        let value = this.web3.utils.toWei(this.value, \"ether\");\n        this.contract.methods\n          .transfer(this.toAddress)\n          .send({ from: this.account, value: value.toString() })\n          .then((result) => {\n            console.log(\"Transaction hash:\", result.transactionHash);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n\n        // console.log(this.contract);\n\n        // await this.contract.methods.changeText(\"log\").call().then(result => this.re = result)\n        // console.log(this.re );\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n.Walletbox {\n  width: 100%;\n  height: 100%;\n}\n.avatar {\n  object-fit: contain;\n  background-color: white;\n  float: right;\n}\n.avatarBox {\n  overflow: hidden;\n  border-radius: 50%;\n  width: 38px;\n  height: 38px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 10%;\n  border: 2px solid var(--border-green--);\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    border: 2px solid var(--border-green--);\n    box-shadow: 0 0 20px var(--border-green--);\n    transition: all 0.3s ease-in-out;\n  }\n}\n.MetaMaskAvatar {\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* border: 2px solid var(--avatar-border-style--); */\n}\n.BOX {\n  width: 100%;\n  height: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.WalletInnerBox {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n}\n.address {\n  margin-left: 5%;\n  color: var(--Dark--);\n  font-weight: 800;\n  font-size: 12px;\n  width: 50%;\n  text-align: center;\n  border-radius: 10px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  font-family: Arial, Helvetica, sans-serif;\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    background-color: rgba(238, 238, 238, 0.1);\n    transition: all 0.3s ease-in-out;\n  }\n}\n/* MetaMask弹出框 */\n.MetaMaskConnectionTip {\n  font-family: Arial, Helvetica, sans-serif;\n  overflow: hidden;\n  position: absolute;\n  width: 350px;\n  height: 300px;\n  background-color: var(--White--);\n  color: var(--Dark--);\n  top: 50%;\n  left: 50%;\n  z-index: 100;\n  transform: translate(-50%, -50%);\n  border-radius: 20px;\n  box-shadow: rgba(17, 17, 26, 0.05) 0px 1px 0px,\n    rgba(17, 17, 26, 0.1) 0px 0px 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.MetaMaskTipsBtn {\n  border: 0px solid;\n  background-color: white;\n  box-shadow: rgba(17, 17, 26, 0.05) 0px 1px 0px,\n    rgba(17, 17, 26, 0.1) 0px 0px 8px;\n  border-radius: 7px;\n  padding-top: 5%;\n  padding-bottom: 5%;\n  padding-left: 22%;\n  padding-right: 22%;\n  font-size: 13px;\n  font-weight: 500;\n}\n.MetaMaskTipsBtn:hover {\n  background-color: rgb(252, 251, 251);\n}\n.MetaMaskTips {\n  font-size: 17px;\n  font-weight: 500;\n  margin-top: 25%;\n}\n/* 遮罩层 */\n.Mask {\n  z-index: 100;\n  position: fixed;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  // background: rgba(0, 0, 0, 0.05);\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}