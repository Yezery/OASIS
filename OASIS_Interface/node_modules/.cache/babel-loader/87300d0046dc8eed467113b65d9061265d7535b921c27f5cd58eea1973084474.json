{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Maximum } from '@tensorflow/tfjs-core';\nimport { CHECK_NAN_SNIPPET } from '../binaryop_gpu';\nimport { CHECK_NAN_SNIPPET as CHECK_NAN_SNIPPET_PACKED } from '../binaryop_packed_gpu';\nimport { binaryKernelFunc } from '../kernel_utils/kernel_funcs_utils';\nimport { maximumImplCPU } from '../kernel_utils/shared';\nconst MAXIMUM = CHECK_NAN_SNIPPET + `\n  return max(a, b);\n`;\nconst MAXIMUM_PACKED = `\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  ` + CHECK_NAN_SNIPPET_PACKED + `\n  return result;\n`;\nexport const maximum = binaryKernelFunc({\n  opSnippet: MAXIMUM,\n  packedOpSnippet: MAXIMUM_PACKED,\n  cpuKernelImpl: maximumImplCPU\n});\nexport const maximumConfig = {\n  kernelName: Maximum,\n  backendName: 'webgl',\n  kernelFunc: maximum\n};","map":{"version":3,"names":["Maximum","CHECK_NAN_SNIPPET","CHECK_NAN_SNIPPET_PACKED","binaryKernelFunc","maximumImplCPU","MAXIMUM","MAXIMUM_PACKED","maximum","opSnippet","packedOpSnippet","cpuKernelImpl","maximumConfig","kernelName","backendName","kernelFunc"],"sources":["../../../../../../tfjs-backend-webgl/src/kernels/Maximum.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {KernelConfig, KernelFunc, Maximum} from '@tensorflow/tfjs-core';\n\nimport {CHECK_NAN_SNIPPET} from '../binaryop_gpu';\nimport {CHECK_NAN_SNIPPET as CHECK_NAN_SNIPPET_PACKED} from '../binaryop_packed_gpu';\nimport {binaryKernelFunc} from '../kernel_utils/kernel_funcs_utils';\nimport {maximumImplCPU} from '../kernel_utils/shared';\n\nconst MAXIMUM = CHECK_NAN_SNIPPET + `\n  return max(a, b);\n`;\n\nconst MAXIMUM_PACKED = `\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  ` +\n    CHECK_NAN_SNIPPET_PACKED + `\n  return result;\n`;\n\nexport const maximum = binaryKernelFunc({\n  opSnippet: MAXIMUM,\n  packedOpSnippet: MAXIMUM_PACKED,\n  cpuKernelImpl: maximumImplCPU\n});\n\nexport const maximumConfig: KernelConfig = {\n  kernelName: Maximum,\n  backendName: 'webgl',\n  kernelFunc: maximum as {} as KernelFunc\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAiBA,SAAkCA,OAAO,QAAO,uBAAuB;AAEvE,SAAQC,iBAAiB,QAAO,iBAAiB;AACjD,SAAQA,iBAAiB,IAAIC,wBAAwB,QAAO,wBAAwB;AACpF,SAAQC,gBAAgB,QAAO,oCAAoC;AACnE,SAAQC,cAAc,QAAO,wBAAwB;AAErD,MAAMC,OAAO,GAAGJ,iBAAiB,GAAG;;CAEnC;AAED,MAAMK,cAAc,GAAG;;;GAGpB,GACCJ,wBAAwB,GAAG;;CAE9B;AAED,OAAO,MAAMK,OAAO,GAAGJ,gBAAgB,CAAC;EACtCK,SAAS,EAAEH,OAAO;EAClBI,eAAe,EAAEH,cAAc;EAC/BI,aAAa,EAAEN;CAChB,CAAC;AAEF,OAAO,MAAMO,aAAa,GAAiB;EACzCC,UAAU,EAAEZ,OAAO;EACnBa,WAAW,EAAE,OAAO;EACpBC,UAAU,EAAEP;CACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}