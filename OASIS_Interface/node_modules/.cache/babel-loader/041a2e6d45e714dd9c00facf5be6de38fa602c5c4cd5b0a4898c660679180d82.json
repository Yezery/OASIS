{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from 'http';\nimport { freeport } from 'freeport-promise';\nimport { detailsHandler } from './details-handler.js';\nimport { findAllInterfaces } from './find-all-interfaces.js';\nexport async function createLocation(ssdp, advert) {\n  if (advert.location != null) {\n    return async () => Promise.resolve();\n  }\n  const servers = [];\n  advert.location = {};\n  await Promise.all(ssdp.sockets.map(async socket => Promise.all(findAllInterfaces(socket.type === 'udp4' && advert.ipv4, socket.type === 'udp6' && advert.ipv6).map(async iface => {\n    await freeport().then(async port => {\n      await new Promise((resolve, reject) => {\n        let location = 'http://';\n        if (socket.type === 'udp6') {\n          location += `[${iface.address}]`;\n        } else {\n          location += iface.address;\n        }\n        location += `:${port}`;\n        advert.location[socket.type] = location;\n        const server = http.createServer((req, res) => {\n          detailsHandler(advert.details, req, res);\n        });\n        const addr = socket.address();\n        server.listen(port, addr.address, () => {\n          resolve();\n        });\n        server.on('error', err => {\n          reject(err);\n        });\n        servers.push(server);\n      });\n    });\n  }))));\n  return async () => {\n    await Promise.all(servers.map(async server => new Promise((resolve, reject) => {\n      server.close();\n      resolve();\n    })));\n  };\n}","map":{"version":3,"names":["http","freeport","detailsHandler","findAllInterfaces","createLocation","ssdp","advert","location","Promise","resolve","servers","all","sockets","map","socket","type","ipv4","ipv6","iface","then","port","reject","address","server","createServer","req","res","details","addr","listen","on","err","push","close"],"sources":["../../../src/advertise/create-location.ts"],"sourcesContent":[null],"mappings":";AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,iBAAiB,QAAQ,0BAA0B;AAI5D,OAAO,eAAeC,cAAcA,CAAEC,IAAU,EAAEC,MAAc;EAC9D,IAAIA,MAAM,CAACC,QAAQ,IAAI,IAAI,EAAE;IAC3B,OAAO,YAAYC,OAAO,CAACC,OAAO,EAAE;;EAGtC,MAAMC,OAAO,GAAkB,EAAE;EAEjCJ,MAAM,CAACC,QAAQ,GAAG,EAAE;EAEpB,MAAMC,OAAO,CAACG,GAAG,CACfN,IAAI,CAACO,OAAO,CAACC,GAAG,CAAC,MAAMC,MAAM,IAAIN,OAAO,CAACG,GAAG,CAC1CR,iBAAiB,CAACW,MAAM,CAACC,IAAI,KAAK,MAAM,IAAIT,MAAM,CAACU,IAAI,EAAEF,MAAM,CAACC,IAAI,KAAK,MAAM,IAAIT,MAAM,CAACW,IAAI,CAAC,CAC5FJ,GAAG,CAAC,MAAMK,KAAK,IAAG;IACjB,MAAMjB,QAAQ,EAAE,CACbkB,IAAI,CAAC,MAAMC,IAAI,IAAG;MACjB,MAAM,IAAIZ,OAAO,CAAO,CAACC,OAAO,EAAEY,MAAM,KAAI;QAC1C,IAAId,QAAQ,GAAG,SAAS;QAExB,IAAIO,MAAM,CAACC,IAAI,KAAK,MAAM,EAAE;UAC1BR,QAAQ,IAAI,IAAIW,KAAK,CAACI,OAAO,GAAG;SACjC,MAAM;UACLf,QAAQ,IAAIW,KAAK,CAACI,OAAO;;QAG3Bf,QAAQ,IAAI,IAAIa,IAAI,EAAE;QAEtBd,MAAM,CAACC,QAAQ,CAACO,MAAM,CAACC,IAAI,CAAC,GAAGR,QAAQ;QAEvC,MAAMgB,MAAM,GAAGvB,IAAI,CAACwB,YAAY,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAI;UAC5CxB,cAAc,CAACI,MAAM,CAACqB,OAAO,EAAEF,GAAG,EAAEC,GAAG,CAAC;QAC1C,CAAC,CAAC;QAEF,MAAME,IAAI,GAAGd,MAAM,CAACQ,OAAO,EAAE;QAE7BC,MAAM,CAACM,MAAM,CAACT,IAAI,EAAEQ,IAAI,CAACN,OAAO,EAAE,MAAK;UACrCb,OAAO,EAAE;QACX,CAAC,CAAC;QACFc,MAAM,CAACO,EAAE,CAAC,OAAO,EAAEC,GAAG,IAAG;UACvBV,MAAM,CAACU,GAAG,CAAC;QACb,CAAC,CAAC;QAEFrB,OAAO,CAACsB,IAAI,CAACT,MAAM,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC,CAAC,CAAC,CACN,CACF;EAED,OAAO,YAAW;IAChB,MAAMf,OAAO,CAACG,GAAG,CACfD,OAAO,CAACG,GAAG,CAAC,MAAMU,MAAM,IAAI,IAAIf,OAAO,CAAO,CAACC,OAAO,EAAEY,MAAM,KAAI;MAChEE,MAAM,CAACU,KAAK,EAAE;MACdxB,OAAO,EAAE;IACX,CAAC,CAAC,CAAC,CACJ;EACH,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}