{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { logger } from '@libp2p/logger';\nimport { EventEmitter } from '@libp2p/interfaces/events';\nimport { PeerStoreAddressBook } from './address-book.js';\nimport { PeerStoreKeyBook } from './key-book.js';\nimport { PeerStoreMetadataBook } from './metadata-book.js';\nimport { PeerStoreProtoBook } from './proto-book.js';\nimport { PersistentStore } from './store.js';\nimport { CodeError } from '@libp2p/interfaces/errors';\nimport { Tags } from './pb/tags.js';\nconst log = logger('libp2p:peer-store');\n/**\n * An implementation of PeerStore that stores data in a Datastore\n */\nexport class PersistentPeerStore extends EventEmitter {\n  constructor(components, init = {}) {\n    super();\n    this.components = components;\n    this.store = new PersistentStore(components);\n    this.addressBook = new PeerStoreAddressBook(this.dispatchEvent.bind(this), this.store, init.addressFilter);\n    this.keyBook = new PeerStoreKeyBook(this.dispatchEvent.bind(this), this.store);\n    this.metadataBook = new PeerStoreMetadataBook(this.dispatchEvent.bind(this), this.store);\n    this.protoBook = new PeerStoreProtoBook(this.dispatchEvent.bind(this), this.store);\n  }\n  async forEach(fn) {\n    log.trace('getPeers await read lock');\n    const release = await this.store.lock.readLock();\n    log.trace('getPeers got read lock');\n    try {\n      for await (const peer of this.store.all()) {\n        if (peer.id.equals(this.components.peerId)) {\n          // Skip self peer if present\n          continue;\n        }\n        fn(peer);\n      }\n    } finally {\n      log.trace('getPeers release read lock');\n      release();\n    }\n  }\n  async all() {\n    const output = [];\n    await this.forEach(peer => {\n      output.push(peer);\n    });\n    return output;\n  }\n  /**\n   * Delete the information of the given peer in every book\n   */\n  async delete(peerId) {\n    log.trace('delete await write lock');\n    const release = await this.store.lock.writeLock();\n    log.trace('delete got write lock');\n    try {\n      await this.store.delete(peerId);\n    } finally {\n      log.trace('delete release write lock');\n      release();\n    }\n  }\n  /**\n   * Get the stored information of a given peer\n   */\n  async get(peerId) {\n    log.trace('get await read lock');\n    const release = await this.store.lock.readLock();\n    log.trace('get got read lock');\n    try {\n      return await this.store.load(peerId);\n    } finally {\n      log.trace('get release read lock');\n      release();\n    }\n  }\n  /**\n   * Returns true if we have a record of the peer\n   */\n  async has(peerId) {\n    log.trace('has await read lock');\n    const release = await this.store.lock.readLock();\n    log.trace('has got read lock');\n    try {\n      return await this.store.has(peerId);\n    } finally {\n      log.trace('has release read lock');\n      release();\n    }\n  }\n  async tagPeer(peerId, tag, options = {}) {\n    const providedValue = options.value ?? 0;\n    const value = Math.round(providedValue);\n    const ttl = options.ttl ?? undefined;\n    if (value !== providedValue || value < 0 || value > 100) {\n      throw new CodeError('Tag value must be between 0-100', 'ERR_TAG_VALUE_OUT_OF_BOUNDS');\n    }\n    const buf = await this.metadataBook.getValue(peerId, 'tags');\n    let tags = [];\n    if (buf != null) {\n      tags = Tags.decode(buf).tags;\n    }\n    // do not allow duplicate tags\n    tags = tags.filter(t => t.name !== tag);\n    tags.push({\n      name: tag,\n      value,\n      expiry: ttl == null ? undefined : BigInt(Date.now() + ttl)\n    });\n    await this.metadataBook.setValue(peerId, 'tags', Tags.encode({\n      tags\n    }).subarray());\n  }\n  async unTagPeer(peerId, tag) {\n    const buf = await this.metadataBook.getValue(peerId, 'tags');\n    let tags = [];\n    if (buf != null) {\n      tags = Tags.decode(buf).tags;\n    }\n    tags = tags.filter(t => t.name !== tag);\n    await this.metadataBook.setValue(peerId, 'tags', Tags.encode({\n      tags\n    }).subarray());\n  }\n  async getTags(peerId) {\n    const buf = await this.metadataBook.getValue(peerId, 'tags');\n    let tags = [];\n    if (buf != null) {\n      tags = Tags.decode(buf).tags;\n    }\n    const now = BigInt(Date.now());\n    const unexpiredTags = tags.filter(tag => tag.expiry == null || tag.expiry > now);\n    if (unexpiredTags.length !== tags.length) {\n      // remove any expired tags\n      await this.metadataBook.setValue(peerId, 'tags', Tags.encode({\n        tags: unexpiredTags\n      }).subarray());\n    }\n    return unexpiredTags.map(t => ({\n      name: t.name,\n      value: t.value ?? 0\n    }));\n  }\n}","map":{"version":3,"names":["logger","EventEmitter","PeerStoreAddressBook","PeerStoreKeyBook","PeerStoreMetadataBook","PeerStoreProtoBook","PersistentStore","CodeError","Tags","log","PersistentPeerStore","constructor","components","init","store","addressBook","dispatchEvent","bind","addressFilter","keyBook","metadataBook","protoBook","forEach","fn","trace","release","lock","readLock","peer","all","id","equals","peerId","output","push","delete","writeLock","get","load","has","tagPeer","tag","options","providedValue","value","Math","round","ttl","undefined","buf","getValue","tags","decode","filter","t","name","expiry","BigInt","Date","now","setValue","encode","subarray","unTagPeer","getTags","unexpiredTags","length","map"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}