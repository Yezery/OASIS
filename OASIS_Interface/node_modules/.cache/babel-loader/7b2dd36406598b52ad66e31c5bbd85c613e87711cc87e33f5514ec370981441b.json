{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { modeToString } from './mode-to-string.js';\nimport { parseMtime } from '../lib/parse-mtime.js';\n\n/**\n * @param {*} params\n * @returns {URLSearchParams}\n */\nexport function toUrlSearchParams({\n  arg,\n  searchParams,\n  hashAlg,\n  mtime,\n  mode,\n  ...options\n} = {}) {\n  if (searchParams) {\n    options = {\n      ...options,\n      ...searchParams\n    };\n  }\n  if (hashAlg) {\n    options.hash = hashAlg;\n  }\n  if (mtime != null) {\n    mtime = parseMtime(mtime);\n    options.mtime = mtime.secs;\n    options.mtimeNsecs = mtime.nsecs;\n  }\n  if (mode != null) {\n    options.mode = modeToString(mode);\n  }\n  if (options.timeout && !isNaN(options.timeout)) {\n    // server API expects timeouts as strings\n    options.timeout = `${options.timeout}ms`;\n  }\n  if (arg === undefined || arg === null) {\n    arg = [];\n  } else if (!Array.isArray(arg)) {\n    arg = [arg];\n  }\n  const urlSearchParams = new URLSearchParams(options);\n  arg.forEach(( /** @type {any} */arg) => urlSearchParams.append('arg', arg));\n  return urlSearchParams;\n}","map":{"version":3,"names":["modeToString","parseMtime","toUrlSearchParams","arg","searchParams","hashAlg","mtime","mode","options","hash","secs","mtimeNsecs","nsecs","timeout","isNaN","undefined","Array","isArray","urlSearchParams","URLSearchParams","forEach","append"],"sources":["/Users/yezery/OASIS/OASIS_Interface/node_modules/.store/ipfs-http-client@60.0.1/node_modules/ipfs-http-client/src/lib/to-url-search-params.js"],"sourcesContent":["import { modeToString } from './mode-to-string.js'\nimport { parseMtime } from '../lib/parse-mtime.js'\n\n/**\n * @param {*} params\n * @returns {URLSearchParams}\n */\nexport function toUrlSearchParams ({ arg, searchParams, hashAlg, mtime, mode, ...options } = {}) {\n  if (searchParams) {\n    options = {\n      ...options,\n      ...searchParams\n    }\n  }\n\n  if (hashAlg) {\n    options.hash = hashAlg\n  }\n\n  if (mtime != null) {\n    mtime = parseMtime(mtime)\n\n    options.mtime = mtime.secs\n    options.mtimeNsecs = mtime.nsecs\n  }\n\n  if (mode != null) {\n    options.mode = modeToString(mode)\n  }\n\n  if (options.timeout && !isNaN(options.timeout)) {\n    // server API expects timeouts as strings\n    options.timeout = `${options.timeout}ms`\n  }\n\n  if (arg === undefined || arg === null) {\n    arg = []\n  } else if (!Array.isArray(arg)) {\n    arg = [arg]\n  }\n\n  const urlSearchParams = new URLSearchParams(options)\n\n  arg.forEach((/** @type {any} */ arg) => urlSearchParams.append('arg', arg))\n\n  return urlSearchParams\n}\n"],"mappings":";;;AAAA,SAASA,YAAY,QAAQ,qBAAqB;AAClD,SAASC,UAAU,QAAQ,uBAAuB;;AAElD;AACA;AACA;AACA;AACA,OAAO,SAASC,iBAAiBA,CAAE;EAAEC,GAAG;EAAEC,YAAY;EAAEC,OAAO;EAAEC,KAAK;EAAEC,IAAI;EAAE,GAAGC;AAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;EAC/F,IAAIJ,YAAY,EAAE;IAChBI,OAAO,GAAG;MACR,GAAGA,OAAO;MACV,GAAGJ;IACL,CAAC;EACH;EAEA,IAAIC,OAAO,EAAE;IACXG,OAAO,CAACC,IAAI,GAAGJ,OAAO;EACxB;EAEA,IAAIC,KAAK,IAAI,IAAI,EAAE;IACjBA,KAAK,GAAGL,UAAU,CAACK,KAAK,CAAC;IAEzBE,OAAO,CAACF,KAAK,GAAGA,KAAK,CAACI,IAAI;IAC1BF,OAAO,CAACG,UAAU,GAAGL,KAAK,CAACM,KAAK;EAClC;EAEA,IAAIL,IAAI,IAAI,IAAI,EAAE;IAChBC,OAAO,CAACD,IAAI,GAAGP,YAAY,CAACO,IAAI,CAAC;EACnC;EAEA,IAAIC,OAAO,CAACK,OAAO,IAAI,CAACC,KAAK,CAACN,OAAO,CAACK,OAAO,CAAC,EAAE;IAC9C;IACAL,OAAO,CAACK,OAAO,GAAI,GAAEL,OAAO,CAACK,OAAQ,IAAG;EAC1C;EAEA,IAAIV,GAAG,KAAKY,SAAS,IAAIZ,GAAG,KAAK,IAAI,EAAE;IACrCA,GAAG,GAAG,EAAE;EACV,CAAC,MAAM,IAAI,CAACa,KAAK,CAACC,OAAO,CAACd,GAAG,CAAC,EAAE;IAC9BA,GAAG,GAAG,CAACA,GAAG,CAAC;EACb;EAEA,MAAMe,eAAe,GAAG,IAAIC,eAAe,CAACX,OAAO,CAAC;EAEpDL,GAAG,CAACiB,OAAO,CAAC,EAAC,kBAAmBjB,GAAG,KAAKe,eAAe,CAACG,MAAM,CAAC,KAAK,EAAElB,GAAG,CAAC,CAAC;EAE3E,OAAOe,eAAe;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}