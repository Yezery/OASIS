{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {DHTAPI[\"get\"]}\n   */\n  async function* get(key, options = {}) {\n    const res = await api.post('dht/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        // arg: base36.encode(key),\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n  return get;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","mapEvent","toString","uint8ArrayToString","createGet","api","get","key","options","res","post","signal","searchParams","arg","Uint8Array","headers","event","ndjson"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-http-client@60.0.1/node_modules/ipfs-http-client/src/dht/get.js"],"sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {DHTAPI[\"get\"]}\n   */\n  async function * get (key, options = {}) {\n    const res = await api.post('dht/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        // arg: base36.encode(key),\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return get\n})\n"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,QAAQ,IAAIC,kBAAkB,QAAQ,uBAAuB;;AAEtE;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAGL,SAAS,CAACM,GAAG,IAAI;EACxC;AACF;AACA;EACE,gBAAiBC,GAAGA,CAAEC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACvC,MAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,SAAS,EAAE;MACpCC,MAAM,EAAEH,OAAO,CAACG,MAAM;MACtBC,YAAY,EAAEZ,iBAAiB,CAAC;QAC9B;QACAa,GAAG,EAAEN,GAAG,YAAYO,UAAU,GAAGX,kBAAkB,CAACI,GAAG,CAAC,GAAGA,GAAG,CAACL,QAAQ,CAAC,CAAC;QACzE,GAAGM;MACL,CAAC,CAAC;MACFO,OAAO,EAAEP,OAAO,CAACO;IACnB,CAAC,CAAC;IAEF,WAAW,MAAMC,KAAK,IAAIP,GAAG,CAACQ,MAAM,CAAC,CAAC,EAAE;MACtC,MAAMhB,QAAQ,CAACe,KAAK,CAAC;IACvB;EACF;EAEA,OAAOV,GAAG;AACZ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}