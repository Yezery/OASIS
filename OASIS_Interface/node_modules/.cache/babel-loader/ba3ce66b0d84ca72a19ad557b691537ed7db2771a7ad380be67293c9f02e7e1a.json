{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { GatherV2 } from '../kernel_names';\nimport { getUndoAxesPermutation } from '../ops/axis_util';\nimport { reshape } from '../ops/reshape';\nimport { transpose } from '../ops/transpose';\nimport { unsortedSegmentSum } from '../ops/unsorted_segment_sum';\nimport { parseAxisParam } from '../util';\nexport const gatherGradConfig = {\n  kernelName: GatherV2,\n  inputsToSave: ['x', 'indices'],\n  gradFunc: (dy, saved, attrs) => {\n    const [x, indices] = saved;\n    const {\n      axis\n    } = attrs;\n    const parsedAxis = parseAxisParam(axis, x.shape)[0];\n    const derX = () => {\n      const paramsShape = x.shape;\n      const indicesSize = indices.size;\n      const outerShape = paramsShape.slice(0, parsedAxis);\n      const outerDims = outerShape.length;\n      const innerShape = paramsShape.slice(axis, paramsShape.length).slice(1);\n      const innerDims = innerShape.length;\n      const outerAxesIndices = arrayRange(0, outerDims);\n      const innerAxesIndices = arrayRange(outerDims + 1, outerDims + 1 + innerDims);\n      const valuesShape = arrayConcat([outerShape, [indicesSize], innerShape]);\n      const values = reshape(dy, valuesShape);\n      const reshapedIndices = reshape(indices, [indicesSize]);\n      const transposeDims = arrayConcat([[outerDims], outerAxesIndices, innerAxesIndices]);\n      const valuesTranspose = transpose(values, transposeDims);\n      let paramsGrad = unsortedSegmentSum(valuesTranspose, reshapedIndices, x.shape[parsedAxis]);\n      const invertTransposeDims = getUndoAxesPermutation(transposeDims);\n      paramsGrad = transpose(paramsGrad, invertTransposeDims);\n      return paramsGrad;\n    };\n    return {\n      x: derX,\n      indices: () => indices\n    };\n  }\n};\nfunction arrayRange(start, stop) {\n  const result = [];\n  for (let i = start; i < stop; ++i) {\n    result.push(i);\n  }\n  return result;\n}\nfunction arrayConcat(arrays) {\n  const result = [];\n  for (let i = 0; i < arrays.length; ++i) {\n    for (let j = 0; j < arrays[i].length; ++j) {\n      result.push(arrays[i][j]);\n    }\n  }\n  return result;\n}","map":{"version":3,"names":["GatherV2","getUndoAxesPermutation","reshape","transpose","unsortedSegmentSum","parseAxisParam","gatherGradConfig","kernelName","inputsToSave","gradFunc","dy","saved","attrs","x","indices","axis","parsedAxis","shape","derX","paramsShape","indicesSize","size","outerShape","slice","outerDims","length","innerShape","innerDims","outerAxesIndices","arrayRange","innerAxesIndices","valuesShape","arrayConcat","values","reshapedIndices","transposeDims","valuesTranspose","paramsGrad","invertTransposeDims","start","stop","result","i","push","arrays","j"],"sources":["../../../../../../tfjs-core/src/gradients/GatherV2_grad.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {GatherV2, GatherV2Attrs} from '../kernel_names';\nimport {GradConfig, NamedAttrMap} from '../kernel_registry';\nimport {getUndoAxesPermutation} from '../ops/axis_util';\nimport {reshape} from '../ops/reshape';\nimport {transpose} from '../ops/transpose';\nimport {unsortedSegmentSum} from '../ops/unsorted_segment_sum';\nimport {Tensor, Tensor1D} from '../tensor';\nimport {parseAxisParam} from '../util';\n\nexport const gatherGradConfig: GradConfig = {\n  kernelName: GatherV2,\n  inputsToSave: ['x', 'indices'],\n  gradFunc: (dy: Tensor, saved: Tensor[], attrs: NamedAttrMap) => {\n    const [x, indices] = saved;\n    const {axis} = attrs as {} as GatherV2Attrs;\n\n    const parsedAxis = parseAxisParam(axis, x.shape)[0];\n\n    const derX = () => {\n      const paramsShape = x.shape;\n      const indicesSize = indices.size;\n\n      const outerShape = paramsShape.slice(0, parsedAxis);\n      const outerDims = outerShape.length;\n      const innerShape = paramsShape.slice(axis, paramsShape.length).slice(1);\n      const innerDims = innerShape.length;\n\n      const outerAxesIndices = arrayRange(0, outerDims);\n      const innerAxesIndices =\n          arrayRange(outerDims + 1, outerDims + 1 + innerDims);\n\n      const valuesShape = arrayConcat([outerShape, [indicesSize], innerShape]);\n\n      const values = reshape(dy, valuesShape);\n      const reshapedIndices = reshape(indices, [indicesSize]);\n\n      const transposeDims =\n          arrayConcat([[outerDims], outerAxesIndices, innerAxesIndices]);\n      const valuesTranspose = transpose(values, transposeDims);\n      let paramsGrad = unsortedSegmentSum(\n          valuesTranspose, reshapedIndices as Tensor1D, x.shape[parsedAxis]);\n\n      const invertTransposeDims = getUndoAxesPermutation(transposeDims);\n      paramsGrad = transpose(paramsGrad, invertTransposeDims);\n\n      return paramsGrad;\n    };\n    return {x: derX, indices: () => indices};\n  }\n};\n\nfunction arrayRange(start: number, stop: number): number[] {\n  const result = [];\n  for (let i = start; i < stop; ++i) {\n    result.push(i);\n  }\n  return result;\n}\n\nfunction arrayConcat(arrays: number[][]): number[] {\n  const result = [];\n  for (let i = 0; i < arrays.length; ++i) {\n    for (let j = 0; j < arrays[i].length; ++j) {\n      result.push(arrays[i][j]);\n    }\n  }\n  return result;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}