{"ast":null,"code":"import { savetoIPFS } from \"@/api/axios/contract\";\nimport Model from \"@/components/3DModelShow/3DModel.vue\";\nimport { MakeNFT } from \"@/api/axios/contract\";\nexport default {\n  components: {\n    Model\n  },\n  data() {\n    return {\n      imageUrl: \"\",\n      fileList: [],\n      dialogImageUrl: \"\",\n      dialogVisible: false,\n      disabled: false,\n      Name: \"\",\n      Symbol: \"\",\n      FirstNFTName: \"\",\n      Maxmums: 1,\n      active: 1,\n      sumitEnable: true,\n      isRepeatClick: true,\n      isProcess: false,\n      processLoading: false,\n      noProcess: false,\n      initModel: undefined,\n      model: undefined,\n      modelPath: \"\",\n      loading: false,\n      isShow3D: false,\n      isTypeOf3DModel: false,\n      isChanging: false\n    };\n  },\n  mounted() {},\n  computed: {\n    canSubmit() {\n      if (this.Name == \"\" || this.Symbol == \"\" || this.$refs.modelUpload.uploadFiles.length == 0 || this.FirstNFTName == \"\" || !this.isTypeOf3DModel) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  },\n  methods: {\n    seeModel(data) {\n      this.initModel = data;\n    },\n    async getModel() {\n      this.isShow3D = true;\n      this.loading = true;\n      let ipfsHash;\n      await savetoIPFS(this.$refs.modelUpload.uploadFiles).then(re => {\n        ipfsHash = re;\n      });\n      this.loading = false;\n      this.modelPath = `http://10.39.5.194:8080/ipfs/${ipfsHash}?filename=${this.FirstNFTName}`;\n    },\n    checkFileType() {\n      let prix = this.getFileExtendingName(this.$refs.modelUpload.uploadFiles[0].raw.name);\n      if (prix == \".gltf\" || prix == \".glb\") {\n        this.isTypeOf3DModel = true;\n        this.getModel();\n      } else {\n        this.handleRemove();\n        this.$notify.error({\n          title: \"请上传gltf或glb格式的模型\",\n          position: \"top-left\",\n          offset: 200\n        });\n        this.isTypeOf3DModel = false;\n      }\n    },\n    getFileExtendingName(filename) {\n      // 文件扩展名匹配正则\n      var reg = /.[^.]+$/;\n      var matches = reg.exec(filename);\n      if (matches) {\n        return matches[0];\n      }\n      return \"\";\n    },\n    async createNFT() {\n      if (this.isRepeatClick) {\n        this.isRepeatClick = false;\n        try {\n          this.isChanging = true;\n          await MakeNFT(this.Name, this.Symbol, this.$refs.modelUpload.uploadFiles, this.Maxmums, this.FirstNFTName, \"3D\");\n          this.isChanging = false;\n          this.$notify({\n            title: \"创造成功\",\n            type: \"success\",\n            position: \"top-left\",\n            offset: 200\n          });\n          this.fileList = [];\n          this.Name = \"\";\n          this.Symbol = \"\";\n          this.Maxmums = 1;\n          this.FirstNFTName = \"\";\n          this.handleRemove();\n        } catch (error) {\n          this.isChanging = false;\n          console.log(error);\n          this.$notify.error({\n            title: \"创造失败\",\n            position: \"top-left\",\n            offset: 200\n          });\n          return;\n        }\n      } else {\n        this.$notify({\n          title: \"请勿操作频繁\",\n          type: \"warning\",\n          position: \"top-left\",\n          offset: 200\n        });\n      }\n      setTimeout(() => {\n        this.isRepeatClick = true;\n      }, 5000);\n    },\n    handleRemove() {\n      this.$refs.modelUpload.clearFiles();\n      this.isShow3D = false;\n      this.isTypeOf3DModel = false;\n    }\n  }\n};","map":{"version":3,"names":["savetoIPFS","Model","MakeNFT","components","data","imageUrl","fileList","dialogImageUrl","dialogVisible","disabled","Name","Symbol","FirstNFTName","Maxmums","active","sumitEnable","isRepeatClick","isProcess","processLoading","noProcess","initModel","undefined","model","modelPath","loading","isShow3D","isTypeOf3DModel","isChanging","mounted","computed","canSubmit","$refs","modelUpload","uploadFiles","length","methods","seeModel","getModel","ipfsHash","then","re","checkFileType","prix","getFileExtendingName","raw","name","handleRemove","$notify","error","title","position","offset","filename","reg","matches","exec","createNFT","type","console","log","setTimeout","clearFiles"],"sources":["src/views/main/mint/mint3DNFT.vue"],"sourcesContent":["<template>\n  <div class=\"MainWindow animate__animated animate__fadeInRight\" v-loading.fullscreen.lock=\"isChanging\" element-loading-text=\"交易进行中\" element-loading-spinner=\"el-icon-loading\" element-loading-background=\"rgba(0, 0, 0, 0.8)\">\n    <div class=\"mintNFTFrame \">\n      <div class=\"mintNFTFrameTop\">\n        <div class=\"mintTitle\">\n          Create 3DNFT\n        </div>\n        <div class=\"mintNFTFrameTop_tipsBox\">\n          铸造 3DNFT\n        </div>\n      </div>\n      <div class=\"mintNFTFrameMain\">\n        <div class=\"mintNFTFrameMain_form\">\n          <div class=\"selectBox\">\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  <span style=\"color: red\">*</span>Model file\n                </div>\n                <div class=\"tipsTitle2\">\n                  模型文件<span style=\"font-weight: 800;font-size: 0.2vw;\"> (仅支持 .gltf 嵌入式格式与 .glb非分离格式)</span>\n                </div>\n              </div>\n              <div class=\"imageUpLoad\">\n                <el-upload class=\"upload-demo\" ref=\"modelUpload\" :on-remove=\"handleRemove\" :file-list=\"fileList\" :auto-upload=\"false\" action=\"#\" :lmint=\"1\" :on-change=\"checkFileType\">\n                  <el-button class=\"select3DFile\" slot=\"trigger\" @click=\"handleRemove\">\n                    选取3D文件\n                  </el-button>\n                </el-upload>\n                <div class=\"show3DBox\" v-loading=\"loading\" v-if=\"isShow3D\" element-loading-text=\"正在上传到IPFS...\">\n                  <Model :model-path=\"modelPath\" @initModel=\"seeModel\" />\n                </div>\n              </div>\n            </div>\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  <span style=\"color: red\">*</span> Name\n                </div>\n                <div class=\"tipsTitle2\">\n                  NFT系列名\n                </div>\n              </div>\n              <el-input v-model=\"Name\" placeholder=\"Please enter a series name\" />\n            </div>\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  <span style=\"color: red\">*</span> Symbol\n                </div>\n                <div class=\"tipsTitle2\">\n                  该系列NFT代币符号 (要求字符长度不超过11个)\n                </div>\n              </div>\n              <el-input v-model=\"Symbol\" placeholder=\"Please enter the token symbol\" maxlength=\"11\" />\n            </div>\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  Genesis NFT Name\n                </div>\n                <div class=\"tipsTitle2\">\n                  该系列的一号NFT\n                </div>\n              </div>\n              <el-input v-model=\"FirstNFTName\" placeholder=\"Please enter the first 3DNFT name\" />\n            </div>\n            <div class=\"select\">\n              <div class=\"tipsBox\">\n                <div class=\"tipsTitle\">\n                  <span style=\"color: red\">*</span> Supply\n                </div>\n                <div class=\"tipsTitle2\">\n                  可以铸造的物品数量。\n                </div>\n              </div>\n              <div class=\"input_number\">\n                <el-input-number v-model=\"Maxmums\" :min=\"1\" />\n              </div>\n            </div>\n            <div class=\"select\">\n              <div class=\"sumbitBox\">\n                <el-button @click=\"createNFT\" :disabled=\"!canSubmit\" class=\"createButton\">\n                  创造\n                </el-button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { savetoIPFS } from \"@/api/axios/contract\";\n  import Model from \"@/components/3DModelShow/3DModel.vue\";\n  import { MakeNFT } from \"@/api/axios/contract\";\n  export default {\n    components: {\n      Model,\n    },\n    data() {\n      return {\n        imageUrl: \"\",\n        fileList: [],\n        dialogImageUrl: \"\",\n        dialogVisible: false,\n        disabled: false,\n        Name: \"\",\n        Symbol: \"\",\n        FirstNFTName: \"\",\n        Maxmums: 1,\n        active: 1,\n        sumitEnable: true,\n        isRepeatClick: true,\n\n        isProcess: false,\n        processLoading: false,\n        noProcess: false,\n\n        initModel: undefined,\n        model: undefined,\n        modelPath: \"\",\n        loading: false,\n        isShow3D: false,\n        isTypeOf3DModel: false,\n        isChanging: false,\n      };\n    },\n    mounted() {},\n    computed: {\n      canSubmit() {\n        if (\n          this.Name == \"\" ||\n          this.Symbol == \"\" ||\n          this.$refs.modelUpload.uploadFiles.length == 0 ||\n          this.FirstNFTName == \"\" ||\n          !this.isTypeOf3DModel\n        ) {\n          return false;\n        } else {\n          return true;\n        }\n      },\n    },\n\n    methods: {\n      seeModel(data) {\n        this.initModel = data;\n      },\n      async getModel() {\n        this.isShow3D = true;\n        this.loading = true;\n\n        let ipfsHash;\n        await savetoIPFS(this.$refs.modelUpload.uploadFiles).then((re) => {\n          ipfsHash = re;\n        });\n        this.loading = false;\n        this.modelPath = `http://10.39.5.194:8080/ipfs/${ipfsHash}?filename=${this.FirstNFTName}`;\n      },\n      checkFileType() {\n        let prix = this.getFileExtendingName(\n          this.$refs.modelUpload.uploadFiles[0].raw.name\n        );\n        if (prix == \".gltf\" || prix == \".glb\") {\n          this.isTypeOf3DModel = true;\n          this.getModel();\n        } else {\n          this.handleRemove();\n          this.$notify.error({\n            title: \"请上传gltf或glb格式的模型\",\n            position: \"top-left\",\n            offset: 200,\n          });\n          this.isTypeOf3DModel = false;\n        }\n      },\n      getFileExtendingName(filename) {\n        // 文件扩展名匹配正则\n        var reg = /.[^.]+$/;\n        var matches = reg.exec(filename);\n        if (matches) {\n          return matches[0];\n        }\n        return \"\";\n      },\n      async createNFT() {\n        if (this.isRepeatClick) {\n          this.isRepeatClick = false;\n          try {\n            this.isChanging = true;\n            await MakeNFT(\n              this.Name,\n              this.Symbol,\n              this.$refs.modelUpload.uploadFiles,\n              this.Maxmums,\n              this.FirstNFTName,\n              \"3D\"\n            );\n            this.isChanging = false;\n            this.$notify({\n              title: \"创造成功\",\n              type: \"success\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            this.fileList = [];\n            this.Name = \"\";\n            this.Symbol = \"\";\n            this.Maxmums = 1;\n            this.FirstNFTName = \"\";\n            this.handleRemove();\n          } catch (error) {\n            this.isChanging = false;\n            console.log(error);\n            this.$notify.error({\n              title: \"创造失败\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            return;\n          }\n        } else {\n          this.$notify({\n            title: \"请勿操作频繁\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200,\n          });\n        }\n\n        setTimeout(() => {\n          this.isRepeatClick = true;\n        }, 5000);\n      },\n      handleRemove() {\n        this.$refs.modelUpload.clearFiles();\n        this.isShow3D = false;\n        this.isTypeOf3DModel = false;\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>\n"],"mappings":"AA+FA,SAAAA,UAAA;AACA,OAAAC,KAAA;AACA,SAAAC,OAAA;AACA;EACAC,UAAA;IACAF;EACA;EACAG,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,cAAA;MACAC,aAAA;MACAC,QAAA;MACAC,IAAA;MACAC,MAAA;MACAC,YAAA;MACAC,OAAA;MACAC,MAAA;MACAC,WAAA;MACAC,aAAA;MAEAC,SAAA;MACAC,cAAA;MACAC,SAAA;MAEAC,SAAA,EAAAC,SAAA;MACAC,KAAA,EAAAD,SAAA;MACAE,SAAA;MACAC,OAAA;MACAC,QAAA;MACAC,eAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA;EACAC,QAAA;IACAC,UAAA;MACA,IACA,KAAApB,IAAA,UACA,KAAAC,MAAA,UACA,KAAAoB,KAAA,CAAAC,WAAA,CAAAC,WAAA,CAAAC,MAAA,SACA,KAAAtB,YAAA,UACA,MAAAc,eAAA,EACA;QACA;MACA;QACA;MACA;IACA;EACA;EAEAS,OAAA;IACAC,SAAAhC,IAAA;MACA,KAAAgB,SAAA,GAAAhB,IAAA;IACA;IACA,MAAAiC,SAAA;MACA,KAAAZ,QAAA;MACA,KAAAD,OAAA;MAEA,IAAAc,QAAA;MACA,MAAAtC,UAAA,MAAA+B,KAAA,CAAAC,WAAA,CAAAC,WAAA,EAAAM,IAAA,CAAAC,EAAA;QACAF,QAAA,GAAAE,EAAA;MACA;MACA,KAAAhB,OAAA;MACA,KAAAD,SAAA,mCAAAe,QAAA,kBAAA1B,YAAA;IACA;IACA6B,cAAA;MACA,IAAAC,IAAA,QAAAC,oBAAA,CACA,KAAAZ,KAAA,CAAAC,WAAA,CAAAC,WAAA,IAAAW,GAAA,CAAAC,IACA;MACA,IAAAH,IAAA,eAAAA,IAAA;QACA,KAAAhB,eAAA;QACA,KAAAW,QAAA;MACA;QACA,KAAAS,YAAA;QACA,KAAAC,OAAA,CAAAC,KAAA;UACAC,KAAA;UACAC,QAAA;UACAC,MAAA;QACA;QACA,KAAAzB,eAAA;MACA;IACA;IACAiB,qBAAAS,QAAA;MACA;MACA,IAAAC,GAAA;MACA,IAAAC,OAAA,GAAAD,GAAA,CAAAE,IAAA,CAAAH,QAAA;MACA,IAAAE,OAAA;QACA,OAAAA,OAAA;MACA;MACA;IACA;IACA,MAAAE,UAAA;MACA,SAAAxC,aAAA;QACA,KAAAA,aAAA;QACA;UACA,KAAAW,UAAA;UACA,MAAAzB,OAAA,CACA,KAAAQ,IAAA,EACA,KAAAC,MAAA,EACA,KAAAoB,KAAA,CAAAC,WAAA,CAAAC,WAAA,EACA,KAAApB,OAAA,EACA,KAAAD,YAAA,EACA,IACA;UACA,KAAAe,UAAA;UACA,KAAAoB,OAAA;YACAE,KAAA;YACAQ,IAAA;YACAP,QAAA;YACAC,MAAA;UACA;UACA,KAAA7C,QAAA;UACA,KAAAI,IAAA;UACA,KAAAC,MAAA;UACA,KAAAE,OAAA;UACA,KAAAD,YAAA;UACA,KAAAkC,YAAA;QACA,SAAAE,KAAA;UACA,KAAArB,UAAA;UACA+B,OAAA,CAAAC,GAAA,CAAAX,KAAA;UACA,KAAAD,OAAA,CAAAC,KAAA;YACAC,KAAA;YACAC,QAAA;YACAC,MAAA;UACA;UACA;QACA;MACA;QACA,KAAAJ,OAAA;UACAE,KAAA;UACAQ,IAAA;UACAP,QAAA;UACAC,MAAA;QACA;MACA;MAEAS,UAAA;QACA,KAAA5C,aAAA;MACA;IACA;IACA8B,aAAA;MACA,KAAAf,KAAA,CAAAC,WAAA,CAAA6B,UAAA;MACA,KAAApC,QAAA;MACA,KAAAC,eAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}