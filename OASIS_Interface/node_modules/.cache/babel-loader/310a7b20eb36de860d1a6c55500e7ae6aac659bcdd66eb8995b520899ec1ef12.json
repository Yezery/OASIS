{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { walkPath } from 'ipfs-unixfs-exporter';\nimport { logger } from '@libp2p/logger';\nconst log = logger('ipfs:mfs:utils:to-trail');\n\n/**\n * @typedef {import('../').MfsContext} MfsContext\n * @typedef {object} MfsTrail\n * @property {string} name\n * @property {import('multiformats/cid').CID} cid\n * @property {number} [size]\n * @property {string} [type]\n *\n * TODO: export supported types from unixfs-exporter and use for `type` above\n */\n\n/**\n * @param {MfsContext} context\n * @param {string} path\n * @returns {Promise<MfsTrail[]>}\n */\nexport async function toTrail(context, path) {\n  log(`Creating trail for path ${path}`);\n  const output = [];\n  for await (const fsEntry of walkPath(path, context.repo.blocks)) {\n    output.push({\n      name: fsEntry.name,\n      cid: fsEntry.cid,\n      size: fsEntry.size,\n      type: fsEntry.type\n    });\n  }\n  return output;\n}","map":{"version":3,"names":["walkPath","logger","log","toTrail","context","path","output","fsEntry","repo","blocks","push","name","cid","size","type"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-core@0.18.1/node_modules/ipfs-core/src/components/files/utils/to-trail.js"],"sourcesContent":["import { walkPath } from 'ipfs-unixfs-exporter'\nimport { logger } from '@libp2p/logger'\n\nconst log = logger('ipfs:mfs:utils:to-trail')\n\n/**\n * @typedef {import('../').MfsContext} MfsContext\n * @typedef {object} MfsTrail\n * @property {string} name\n * @property {import('multiformats/cid').CID} cid\n * @property {number} [size]\n * @property {string} [type]\n *\n * TODO: export supported types from unixfs-exporter and use for `type` above\n */\n\n/**\n * @param {MfsContext} context\n * @param {string} path\n * @returns {Promise<MfsTrail[]>}\n */\nexport async function toTrail (context, path) {\n  log(`Creating trail for path ${path}`)\n\n  const output = []\n\n  for await (const fsEntry of walkPath(path, context.repo.blocks)) {\n    output.push({\n      name: fsEntry.name,\n      cid: fsEntry.cid,\n      size: fsEntry.size,\n      type: fsEntry.type\n    })\n  }\n\n  return output\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,sBAAsB;AAC/C,SAASC,MAAM,QAAQ,gBAAgB;AAEvC,MAAMC,GAAG,GAAGD,MAAM,CAAC,yBAAyB,CAAC;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,eAAeE,OAAOA,CAAEC,OAAO,EAAEC,IAAI,EAAE;EAC5CH,GAAG,CAAE,2BAA0BG,IAAK,EAAC,CAAC;EAEtC,MAAMC,MAAM,GAAG,EAAE;EAEjB,WAAW,MAAMC,OAAO,IAAIP,QAAQ,CAACK,IAAI,EAAED,OAAO,CAACI,IAAI,CAACC,MAAM,CAAC,EAAE;IAC/DH,MAAM,CAACI,IAAI,CAAC;MACVC,IAAI,EAAEJ,OAAO,CAACI,IAAI;MAClBC,GAAG,EAAEL,OAAO,CAACK,GAAG;MAChBC,IAAI,EAAEN,OAAO,CAACM,IAAI;MAClBC,IAAI,EAAEP,OAAO,CAACO;IAChB,CAAC,CAAC;EACJ;EAEA,OAAOR,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}