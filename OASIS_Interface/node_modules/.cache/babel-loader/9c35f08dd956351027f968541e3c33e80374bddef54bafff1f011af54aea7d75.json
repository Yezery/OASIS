{"ast":null,"code":"// @ts-expect-error no types\nimport KBuck from 'k-bucket';\nimport * as utils from '../utils.js';\nimport Queue from 'p-queue';\nimport { TimeoutController } from 'timeout-abort-controller';\nimport { logger } from '@libp2p/logger';\nimport { PeerSet } from '@libp2p/peer-collections';\nexport const KAD_CLOSE_TAG_NAME = 'kad-close';\nexport const KAD_CLOSE_TAG_VALUE = 50;\nexport const KBUCKET_SIZE = 20;\nexport const PING_TIMEOUT = 10000;\nexport const PING_CONCURRENCY = 10;\n/**\n * A wrapper around `k-bucket`, to provide easy store and\n * retrieval for peers.\n */\nexport class RoutingTable {\n  constructor(components, init) {\n    const {\n      kBucketSize,\n      pingTimeout,\n      lan,\n      pingConcurrency,\n      protocol,\n      tagName,\n      tagValue\n    } = init;\n    this.components = components;\n    this.log = logger(`libp2p:kad-dht:${lan ? 'lan' : 'wan'}:routing-table`);\n    this.kBucketSize = kBucketSize ?? KBUCKET_SIZE;\n    this.pingTimeout = pingTimeout ?? PING_TIMEOUT;\n    this.pingConcurrency = pingConcurrency ?? PING_CONCURRENCY;\n    this.lan = lan;\n    this.running = false;\n    this.protocol = protocol;\n    this.tagName = tagName ?? KAD_CLOSE_TAG_NAME;\n    this.tagValue = tagValue ?? KAD_CLOSE_TAG_VALUE;\n    const updatePingQueueSizeMetric = () => {\n      this.metrics?.pingQueueSize.update(this.pingQueue.size);\n      this.metrics?.pingRunning.update(this.pingQueue.pending);\n    };\n    this.pingQueue = new Queue({\n      concurrency: this.pingConcurrency\n    });\n    this.pingQueue.addListener('add', updatePingQueueSizeMetric);\n    this.pingQueue.addListener('next', updatePingQueueSizeMetric);\n    this._onPing = this._onPing.bind(this);\n  }\n  isStarted() {\n    return this.running;\n  }\n  async start() {\n    this.running = true;\n    if (this.components.metrics != null) {\n      this.metrics = {\n        routingTableSize: this.components.metrics.registerMetric(`libp2p_kad_dht_${this.lan ? 'lan' : 'wan'}_routing_table_size`),\n        pingQueueSize: this.components.metrics.registerMetric(`libp2p_kad_dht_${this.lan ? 'lan' : 'wan'}_ping_queue_size`),\n        pingRunning: this.components.metrics.registerMetric(`libp2p_kad_dht_${this.lan ? 'lan' : 'wan'}_ping_running`)\n      };\n    }\n    const kBuck = new KBuck({\n      localNodeId: await utils.convertPeerId(this.components.peerId),\n      numberOfNodesPerKBucket: this.kBucketSize,\n      numberOfNodesToPing: 1\n    });\n    this.kb = kBuck;\n    // test whether to evict peers\n    kBuck.on('ping', this._onPing);\n    // tag kad-close peers\n    this._tagPeers(kBuck);\n  }\n  async stop() {\n    this.running = false;\n    this.pingQueue.clear();\n    this.kb = undefined;\n  }\n  /**\n   * Keep track of our k-closest peers and tag them in the peer store as such\n   * - this will lower the chances that connections to them get closed when\n   * we reach connection limits\n   */\n  _tagPeers(kBuck) {\n    let kClosest = new PeerSet();\n    const updatePeerTags = utils.debounce(() => {\n      const newClosest = new PeerSet(kBuck.closest(kBuck.localNodeId, KBUCKET_SIZE).map(contact => contact.peer));\n      const addedPeers = newClosest.difference(kClosest);\n      const removedPeers = kClosest.difference(newClosest);\n      Promise.resolve().then(async () => {\n        for (const peer of addedPeers) {\n          await this.components.peerStore.tagPeer(peer, this.tagName, {\n            value: this.tagValue\n          });\n        }\n        for (const peer of removedPeers) {\n          await this.components.peerStore.unTagPeer(peer, this.tagName);\n        }\n      }).catch(err => {\n        this.log.error('Could not update peer tags', err);\n      });\n      kClosest = newClosest;\n    });\n    kBuck.on('added', () => {\n      updatePeerTags();\n    });\n    kBuck.on('removed', () => {\n      updatePeerTags();\n    });\n  }\n  /**\n   * Called on the `ping` event from `k-bucket` when a bucket is full\n   * and cannot split.\n   *\n   * `oldContacts.length` is defined by the `numberOfNodesToPing` param\n   * passed to the `k-bucket` constructor.\n   *\n   * `oldContacts` will not be empty and is the list of contacts that\n   * have not been contacted for the longest.\n   */\n  _onPing(oldContacts, newContact) {\n    // add to a queue so multiple ping requests do not overlap and we don't\n    // flood the network with ping requests if lots of newContact requests\n    // are received\n    this.pingQueue.add(async () => {\n      if (!this.running) {\n        return;\n      }\n      let responded = 0;\n      try {\n        await Promise.all(oldContacts.map(async oldContact => {\n          let timeoutController;\n          try {\n            timeoutController = new TimeoutController(this.pingTimeout);\n            const options = {\n              signal: timeoutController.signal\n            };\n            this.log('pinging old contact %p', oldContact.peer);\n            const connection = await this.components.connectionManager.openConnection(oldContact.peer, options);\n            const stream = await connection.newStream(this.protocol, options);\n            stream.close();\n            responded++;\n          } catch (err) {\n            if (this.running && this.kb != null) {\n              // only evict peers if we are still running, otherwise we evict when dialing is\n              // cancelled due to shutdown in progress\n              this.log.error('could not ping peer %p', oldContact.peer, err);\n              this.log('evicting old contact after ping failed %p', oldContact);\n              this.kb.remove(oldContact.id);\n            }\n          } finally {\n            if (timeoutController != null) {\n              timeoutController.clear();\n            }\n            this.metrics?.routingTableSize.update(this.size);\n          }\n        }));\n        if (this.running && responded < oldContacts.length && this.kb != null) {\n          this.log('adding new contact %p', newContact.peer);\n          this.kb.add(newContact);\n        }\n      } catch (err) {\n        this.log.error('could not process k-bucket ping event', err);\n      }\n    }).catch(err => {\n      this.log.error('could not process k-bucket ping event', err);\n    });\n  }\n  // -- Public Interface\n  /**\n   * Amount of currently stored peers\n   */\n  get size() {\n    if (this.kb == null) {\n      return 0;\n    }\n    return this.kb.count();\n  }\n  /**\n   * Find a specific peer by id\n   */\n  async find(peer) {\n    const key = await utils.convertPeerId(peer);\n    const closest = this.closestPeer(key);\n    if (closest != null && peer.equals(closest)) {\n      return closest;\n    }\n    return undefined;\n  }\n  /**\n   * Retrieve the closest peers to the given key\n   */\n  closestPeer(key) {\n    const res = this.closestPeers(key, 1);\n    if (res.length > 0) {\n      return res[0];\n    }\n    return undefined;\n  }\n  /**\n   * Retrieve the `count`-closest peers to the given key\n   */\n  closestPeers(key, count = this.kBucketSize) {\n    if (this.kb == null) {\n      return [];\n    }\n    const closest = this.kb.closest(key, count);\n    return closest.map(p => p.peer);\n  }\n  /**\n   * Add or update the routing table with the given peer\n   */\n  async add(peer) {\n    if (this.kb == null) {\n      throw new Error('RoutingTable is not started');\n    }\n    const id = await utils.convertPeerId(peer);\n    this.kb.add({\n      id,\n      peer\n    });\n    this.log('added %p with kad id %b', peer, id);\n    this.metrics?.routingTableSize.update(this.size);\n  }\n  /**\n   * Remove a given peer from the table\n   */\n  async remove(peer) {\n    if (this.kb == null) {\n      throw new Error('RoutingTable is not started');\n    }\n    const id = await utils.convertPeerId(peer);\n    this.kb.remove(id);\n    this.metrics?.routingTableSize.update(this.size);\n  }\n}","map":{"version":3,"names":["KBuck","utils","Queue","TimeoutController","logger","PeerSet","KAD_CLOSE_TAG_NAME","KAD_CLOSE_TAG_VALUE","KBUCKET_SIZE","PING_TIMEOUT","PING_CONCURRENCY","RoutingTable","constructor","components","init","kBucketSize","pingTimeout","lan","pingConcurrency","protocol","tagName","tagValue","log","running","updatePingQueueSizeMetric","metrics","pingQueueSize","update","pingQueue","size","pingRunning","pending","concurrency","addListener","_onPing","bind","isStarted","start","routingTableSize","registerMetric","kBuck","localNodeId","convertPeerId","peerId","numberOfNodesPerKBucket","numberOfNodesToPing","kb","on","_tagPeers","stop","clear","undefined","kClosest","updatePeerTags","debounce","newClosest","closest","map","contact","peer","addedPeers","difference","removedPeers","Promise","resolve","then","peerStore","tagPeer","value","unTagPeer","catch","err","error","oldContacts","newContact","add","responded","all","oldContact","timeoutController","options","signal","connection","connectionManager","openConnection","stream","newStream","close","remove","id","length","count","find","key","closestPeer","equals","res","closestPeers","p","Error"],"sources":["../../../src/routing-table/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}