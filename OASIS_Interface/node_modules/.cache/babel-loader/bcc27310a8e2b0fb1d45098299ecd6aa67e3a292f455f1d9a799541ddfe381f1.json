{"ast":null,"code":"import _defineProperty from \"/Users/yezery/Oasis/OASIS/node_modules/.store/@babel+runtime@7.22.15/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { createSocket } from 'dgram';\nimport { EventEmitter } from 'events';\nimport { logger } from '@libp2p/logger';\nimport errCode from 'err-code';\nimport defer from 'p-defer';\nconst debug = logger('nat-port-mapper:pmp');\n// Ports defined by draft\nconst CLIENT_PORT = 5350;\nconst SERVER_PORT = 5351;\n// Opcodes\nconst OP_EXTERNAL_IP = 0;\nconst OP_MAP_UDP = 1;\nconst OP_MAP_TCP = 2;\nconst SERVER_DELTA = 128;\n// Resulit codes\nconst RESULT_CODES = {\n  0: 'Success',\n  1: 'Unsupported Version',\n  2: 'Not Authorized/Refused (gateway may have NAT-PMP disabled)',\n  3: 'Network Failure (gateway may have not obtained a DHCP lease)',\n  4: 'Out of Resources (no ports left)',\n  5: 'Unsupported opcode'\n};\nexport class PMPClient extends EventEmitter {\n  static createClient(discoverGateway) {\n    return new PMPClient(discoverGateway);\n  }\n  constructor(discoverGateway) {\n    super();\n    _defineProperty(this, \"socket\", void 0);\n    _defineProperty(this, \"queue\", void 0);\n    _defineProperty(this, \"connecting\", void 0);\n    _defineProperty(this, \"listening\", void 0);\n    _defineProperty(this, \"req\", void 0);\n    _defineProperty(this, \"reqActive\", void 0);\n    _defineProperty(this, \"discoverGateway\", void 0);\n    _defineProperty(this, \"gateway\", void 0);\n    _defineProperty(this, \"cancelGatewayDiscovery\", void 0);\n    if (discoverGateway == null) {\n      throw new Error('discoverGateway is not defined');\n    }\n    this.discoverGateway = discoverGateway;\n    this.queue = [];\n    this.connecting = false;\n    this.listening = false;\n    this.req = null;\n    this.reqActive = false;\n    // Create socket\n    this.socket = createSocket({\n      type: 'udp4',\n      reuseAddr: true\n    });\n    this.socket.on('listening', () => {\n      this.onListening();\n    });\n    this.socket.on('message', (msg, rinfo) => {\n      this.onMessage(msg, rinfo);\n    });\n    this.socket.on('close', () => {\n      this.onClose();\n    });\n    this.socket.on('error', err => {\n      this.onError(err);\n    });\n    // Try to connect\n    this.connect();\n  }\n  connect() {\n    debug('Client#connect()');\n    if (this.connecting) return;\n    this.connecting = true;\n    this.socket.bind(CLIENT_PORT);\n  }\n  async map(opts) {\n    debug('Client#portMapping()');\n    let opcode;\n    switch (String(opts.protocol ?? 'tcp').toLowerCase()) {\n      case 'tcp':\n        opcode = OP_MAP_TCP;\n        break;\n      case 'udp':\n        opcode = OP_MAP_UDP;\n        break;\n      default:\n        throw new Error('\"type\" must be either \"tcp\" or \"udp\"');\n    }\n    const discoverGateway = this.discoverGateway();\n    this.cancelGatewayDiscovery = discoverGateway.cancel;\n    const gateway = await discoverGateway.gateway();\n    this.cancelGatewayDiscovery = undefined;\n    this.gateway = new URL(gateway.location).host;\n    const deferred = defer();\n    this.request(opcode, opts, deferred);\n    await deferred.promise;\n  }\n  async unmap(opts) {\n    debug('Client#portUnmapping()');\n    await this.map({\n      ...opts,\n      description: '',\n      localAddress: '',\n      ttl: 0\n    });\n  }\n  async externalIp() {\n    debug('Client#externalIp()');\n    const discoverGateway = this.discoverGateway();\n    this.cancelGatewayDiscovery = discoverGateway.cancel;\n    const gateway = await discoverGateway.gateway();\n    this.cancelGatewayDiscovery = undefined;\n    this.gateway = new URL(gateway.location).host;\n    const deferred = defer();\n    this.request(OP_EXTERNAL_IP, {}, deferred);\n    return deferred.promise;\n  }\n  async close() {\n    debug('Client#close()');\n    if (this.socket != null) {\n      this.socket.close();\n    }\n    this.queue = [];\n    this.connecting = false;\n    this.listening = false;\n    this.req = null;\n    this.reqActive = false;\n    if (this.cancelGatewayDiscovery != null) {\n      await this.cancelGatewayDiscovery();\n    }\n  }\n  /**\n   * Queues a UDP request to be send to the gateway device.\n   */\n  request(op, obj, deferred) {\n    debug('Client#request()', [op, obj]);\n    let buf;\n    let size;\n    let pos = 0;\n    let internal;\n    let external;\n    let ttl;\n    switch (op) {\n      case OP_MAP_UDP:\n      case OP_MAP_TCP:\n        if (obj == null) {\n          throw new Error('mapping a port requires an \"options\" object');\n        }\n        internal = Number(obj.private ?? obj.internal ?? 0);\n        if (internal !== (internal | 0) ?? internal < 0) {\n          throw new Error('the \"private\" port must be a whole integer >= 0');\n        }\n        external = Number(obj.public ?? obj.external ?? 0);\n        if (external !== (external | 0) ?? external < 0) {\n          throw new Error('the \"public\" port must be a whole integer >= 0');\n        }\n        ttl = Number(obj.ttl ?? 0);\n        if (ttl !== (ttl | 0)) {\n          // The RECOMMENDED Port Mapping Lifetime is 7200 seconds (two hours)\n          ttl = 7200;\n        }\n        size = 12;\n        buf = Buffer.alloc(size);\n        buf.writeUInt8(0, pos);\n        pos++; // Vers = 0\n        buf.writeUInt8(op, pos);\n        pos++; // OP = x\n        buf.writeUInt16BE(0, pos);\n        pos += 2; // Reserved (MUST be zero)\n        buf.writeUInt16BE(internal, pos);\n        pos += 2; // Internal Port\n        buf.writeUInt16BE(external, pos);\n        pos += 2; // Requested External Port\n        buf.writeUInt32BE(ttl, pos);\n        pos += 4; // Requested Port Mapping Lifetime in Seconds\n        break;\n      case OP_EXTERNAL_IP:\n        size = 2;\n        buf = Buffer.alloc(size);\n        // Vers = 0\n        buf.writeUInt8(0, 0);\n        pos++;\n        // OP = x\n        buf.writeUInt8(op, 1);\n        pos++;\n        break;\n      default:\n        throw new Error(`Invalid opcode: ${op}`);\n    }\n    // assert.equal(pos, size, 'buffer not fully written!')\n    // Add it to queue\n    this.queue.push({\n      op,\n      buf,\n      deferred\n    });\n    // Try to send next message\n    this._next();\n  }\n  /**\n   * Processes the next request if the socket is listening.\n   */\n  _next() {\n    debug('Client#_next()');\n    const req = this.queue[0];\n    if (req == null) {\n      debug('_next: nothing to process');\n      return;\n    }\n    if (this.socket == null) {\n      debug('_next: client is closed');\n      return;\n    }\n    if (!this.listening) {\n      debug('_next: not \"listening\" yet, cannot send out request yet');\n      if (!this.connecting) {\n        this.connect();\n      }\n      return;\n    }\n    if (this.reqActive) {\n      debug('_next: already an active request so wait...');\n      return;\n    }\n    this.reqActive = true;\n    this.req = req;\n    const buf = req.buf;\n    debug('_next: sending request', buf, this.gateway);\n    this.socket.send(buf, 0, buf.length, SERVER_PORT, this.gateway);\n  }\n  onListening() {\n    debug('Client#onListening()');\n    this.listening = true;\n    this.connecting = false;\n    // Try to send next message\n    this._next();\n  }\n  onMessage(msg, rinfo) {\n    // Ignore message if we're not expecting it\n    if (this.queue.length === 0) {\n      return;\n    }\n    debug('Client#onMessage()', [msg, rinfo]);\n    const cb = (err, parsed) => {\n      this.req = null;\n      this.reqActive = false;\n      if (err != null) {\n        if (req.deferred != null) {\n          req.deferred.reject(err);\n        } else {\n          this.emit('error', err);\n        }\n      } else if (req.deferred != null) {\n        req.deferred.resolve(parsed);\n      }\n      // Try to send next message\n      this._next();\n    };\n    const req = this.queue[0];\n    const parsed = {\n      msg\n    };\n    parsed.vers = msg.readUInt8(0);\n    parsed.op = msg.readUInt8(1);\n    if (parsed.op - SERVER_DELTA !== req.op) {\n      debug('WARN: ignoring unexpected message opcode', parsed.op);\n      return;\n    }\n    // if we got here, then we're gonna invoke the request's callback,\n    // so shift this request off of the queue.\n    debug('removing \"req\" off of the queue');\n    this.queue.shift();\n    if (parsed.vers !== 0) {\n      cb(new Error(`\"vers\" must be 0. Got: ${parsed.vers}`)); // eslint-disable-line @typescript-eslint/restrict-template-expressions\n      return;\n    }\n    // Common fields\n    parsed.resultCode = msg.readUInt16BE(2);\n    parsed.resultMessage = RESULT_CODES[parsed.resultCode];\n    parsed.epoch = msg.readUInt32BE(4);\n    // Error\n    if (parsed.resultCode !== 0) {\n      cb(errCode(new Error(parsed.resultMessage), parsed.resultCode));\n      return;\n    }\n    // Success\n    switch (req.op) {\n      case OP_MAP_UDP:\n      case OP_MAP_TCP:\n        parsed.private = parsed.internal = msg.readUInt16BE(8);\n        parsed.public = parsed.external = msg.readUInt16BE(10);\n        parsed.ttl = msg.readUInt32BE(12);\n        parsed.type = req.op === OP_MAP_UDP ? 'udp' : 'tcp';\n        break;\n      case OP_EXTERNAL_IP:\n        parsed.ip = [];\n        parsed.ip.push(msg.readUInt8(8));\n        parsed.ip.push(msg.readUInt8(9));\n        parsed.ip.push(msg.readUInt8(10));\n        parsed.ip.push(msg.readUInt8(11));\n        break;\n      default:\n        {\n          cb(new Error(`Unknown opcode: ${req.op}`));\n          return;\n        }\n    }\n    cb(undefined, parsed);\n  }\n  onClose() {\n    debug('Client#onClose()');\n    this.listening = false;\n    this.connecting = false;\n  }\n  onError(err) {\n    debug('Client#onError()', [err]);\n    if (this.req?.cb != null) {\n      this.req.cb(err);\n    } else {\n      this.emit('error', err);\n    }\n    if (this.socket != null) {\n      this.socket.close();\n      // Force close - close() does not guarantee to trigger onClose()\n      this.onClose();\n    }\n  }\n}","map":{"version":3,"names":["createSocket","EventEmitter","logger","errCode","defer","debug","CLIENT_PORT","SERVER_PORT","OP_EXTERNAL_IP","OP_MAP_UDP","OP_MAP_TCP","SERVER_DELTA","RESULT_CODES","PMPClient","createClient","discoverGateway","constructor","_defineProperty","Error","queue","connecting","listening","req","reqActive","socket","type","reuseAddr","on","onListening","msg","rinfo","onMessage","onClose","err","onError","connect","bind","map","opts","opcode","String","protocol","toLowerCase","cancelGatewayDiscovery","cancel","gateway","undefined","URL","location","host","deferred","request","promise","unmap","description","localAddress","ttl","externalIp","close","op","obj","buf","size","pos","internal","external","Number","private","public","Buffer","alloc","writeUInt8","writeUInt16BE","writeUInt32BE","push","_next","send","length","cb","parsed","reject","emit","resolve","vers","readUInt8","shift","resultCode","readUInt16BE","resultMessage","epoch","readUInt32BE","ip"],"sources":["../../../src/pmp/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}