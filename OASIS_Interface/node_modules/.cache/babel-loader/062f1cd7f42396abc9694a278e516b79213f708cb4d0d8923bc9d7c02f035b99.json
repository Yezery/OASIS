{"ast":null,"code":"// import { getToken, setMnemonic, checkUserExist } from \"@/api/axios/user\";\n// import CryptoJS from \"crypto-js\";\nimport ConnectionTips from \"../user/ConnectionTips.vue\";\nimport Theme from \"@/components/oasisTheme.vue\";\nimport BalanceEchart from \"@/views/extend/BalanceEchart.vue\";\nimport UserInf from \"@/views/user/UserInf.vue\";\nimport WalletConnect from \"@/views/user/WalletConnect.vue\";\nimport ChatMemu from \"@/views/chat/ChatMemu.vue\";\nexport default {\n  name: \"MarketShopIndex\",\n  components: {\n    Theme,\n    BalanceEchart,\n    UserInf,\n    WalletConnect,\n    ChatMemu,\n    ConnectionTips\n  },\n  data() {\n    return {\n      //****聊天栏******//\n      isOpen: false,\n      UserImageList: [],\n      avatar: \"\",\n      //*********************//\n      //方法\n      eChangTheme: null,\n      //连接钱包\n      user: {},\n      changeingAccount: false\n    };\n  },\n  created() {},\n  mounted() {\n    if (window.ethereum != undefined && window.ethereum.isMetaMask) {\n      window.ethereum.on(\"accountsChanged\", () => {\n        this.connectWallet();\n      });\n      window.ethereum.on('chainChanged', () => {\n        window.location.reload();\n        this.$notify({\n          title: \"已切换链\",\n          type: \"warning\",\n          position: \"top-left\",\n          offset: 200\n        });\n      });\n      this.connectWallet();\n    }\n  },\n  // provide() {\n  //     //依赖注入\n  //     return {\n  //         init: this.giveChatInitToWalletConnect,\n  //     };\n  // },\n  methods: {\n    giveChatInitToWalletConnect() {\n      console.log(\"聊天栏正初始化.......\");\n      this.$refs.ChatMemu.init();\n    },\n    echartsChangTheme(method) {\n      this.eChangTheme = method;\n    },\n    async connectWallet() {\n      // if (this.isRepeatClick) {\n      // this.isRepeatClick = false;\n      console.log(localStorage.getItem[\"token\"] == null);\n      if (localStorage.getItem[\"token\"] == null || !this.$store.state.isconnect) {\n        try {\n          // 请求用户授权\n          await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          }).then(async handleAccountsChanged => {\n            this.$store.commit(\"setcurrentAddress\", handleAccountsChanged[0]);\n            this.$store.commit(\"changeAvatar\", handleAccountsChanged[0]);\n            this.user.userAddress = handleAccountsChanged[0];\n            // await checkUserExist(this.user).then(async (re) => {\n            //   console.log(re);\n            //   if (re.data.data == \"\") {\n            //     alert(\"账户没有注册\");\n            //     this.user.encryptedPassword = CryptoJS.SHA256(\n            //       prompt(\"醒密码\")\n            //     ).toString();\n            //     console.log(this.user);\n            //     console.log(this.user);\n            //     await setMnemonic(this.user).then((re) => {\n            //       console.log(re);\n            //     });\n            //   } else {\n            //     alert(\"注册le\");\n            //     this.user.encryptedPassword = CryptoJS.SHA256(\n            //       prompt(\"醒密码\")\n            //     ).toString();\n            //   }\n            // });\n            // await getToken(this.user).then((re) => {\n            //   localStorage.clear();\n            //   console.log(this.user);\n            //   console.log(re);\n            //   if (re.data.data == null) {\n            //     alert(\"密码错误\");\n            //     // window.location.reload()\n            //   } else {\n            //     localStorage.setItem(\"token\", re.data.data);\n            //     this.$store.commit(\"connection\", true);\n            //     this.$store.commit(\"changeAvatar\", handleAccountsChanged[0]);\n            //     this.giveChatInitToWalletConnect()\n            //     this.$notify({\n            //       title: \"🎉 连接成功\",\n            //       position: \"top-left\",\n            //       offset: 200,\n            //     });\n            //   }\n            // });\n          }).catch(error => {\n            this.$store.commit(\"connection\", false);\n            if (error.code === 4001) {\n              // EIP-1193 userRejectedRequest error\n              console.log(\"Please connect to MetaMask.\");\n            } else {\n              console.error(error);\n            }\n          });\n        } catch (error) {\n          console.error(error);\n          this.$notify.error({\n            title: \"连接失败\",\n            position: \"top-left\",\n            offset: 200\n          });\n        }\n      } else {\n        alert(\"jaslkjdkljaskldjl\");\n      }\n\n      // } else {\n      //   this.$notify({\n      //     title: \"请稍等再c\",\n      //     type: \"warning\",\n      //     position: \"top-left\",\n      //     offset: 200,\n      //   });\n      // }\n      setTimeout(() => {\n        this.isRepeatClick = true;\n      }, 5000);\n    }\n  }\n};","map":{"version":3,"names":["ConnectionTips","Theme","BalanceEchart","UserInf","WalletConnect","ChatMemu","name","components","data","isOpen","UserImageList","avatar","eChangTheme","user","changeingAccount","created","mounted","window","ethereum","undefined","isMetaMask","on","connectWallet","location","reload","$notify","title","type","position","offset","methods","giveChatInitToWalletConnect","console","log","$refs","init","echartsChangTheme","method","localStorage","getItem","$store","state","isconnect","request","then","handleAccountsChanged","commit","userAddress","catch","error","code","alert","setTimeout","isRepeatClick"],"sources":["src/views/market/index.vue"],"sourcesContent":["<template>\n  <div class=\"Main\">\n    <el-container>\n      <el-aside\n        style=\"width: auto;\"\n        class=\"HomeMenu animate__animated animate__fadeInLeft\"\n      >\n        <ChatMemu ref=\"ChatMemu\" />\n      </el-aside>\n  \n      <el-main>\n        <router-view />\n      </el-main>\n    \n      <el-aside\n        class=\"animate__animated animate__fadeInRight\"\n        style=\"width: auto;animation-delay: 1s;\"\n      >\n        <el-row\n          type=\"flex\"\n          class=\"row-bg\"\n          justify=\"space-around\"\n        >\n          <el-col :span=\"8\">\n            <div class=\"grid-content bg-purple \">\n              <Theme :e-chang-theme=\"eChangTheme\" />\n            </div>\n          </el-col>\n          <el-col :span=\"12\">\n            <div class=\"grid-content bg-purple\">\n              <!-- 钱包连接 -->\n              <WalletConnect  />\n            </div>\n          </el-col>\n        </el-row>\n        <div class=\"BalanceEchart\">\n          <BalanceEchart @echartsChangTheme=\"echartsChangTheme\" />\n        </div>\n        <div\n          class=\"userInf\"\n          v-if=\"$store.state.isconnect\"\n        >\n          <UserInf />\n        </div>\n        <div\n          class=\"WaitLogin\"\n          v-if=\"!$store.state.isconnect\"\n        >\n          <ConnectionTips />\n        </div>\n      </el-aside>\n    </el-container>\n    <div\n      class=\"EmpowerMask\"\n    >\n      <div class=\"EmpowerBox animate__animated animate__fadeInUp\">\n        <div class=\"EmpowerUserInfbox\">\n          <div class=\"EmpowerUserInf\">\n            <img class=\"UserImage\" :src=\"$store.state.avatar\" alt=\"\" ref=\"avatar\" slot=\"reference\">\n          </div>\n          <div class=\"EmpowerUserAddress\">{{ `${$store.state.currentAddress.slice(\n              0,\n              5\n            )}...${$store.state.currentAddress.slice(37)}` }}</div>\n        </div>\n        <!-- <div class=\"EmpowerPasswordBox\">\n          <div class=\"EmpowerPasswordBoxTop\">\n            <el-input v-model=\"input\" placeholder=\"请输入内容\"></el-input>\n          </div>\n          <div class=\"EmpowerPasswordBoxBottom\">\n            <span>忘记授权码</span>\n              <span >不授权直接进入</span>\n          </div>\n        </div> -->\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  // import { getToken, setMnemonic, checkUserExist } from \"@/api/axios/user\";\n  // import CryptoJS from \"crypto-js\";\n  import ConnectionTips from \"../user/ConnectionTips.vue\";\n  import Theme from \"@/components/oasisTheme.vue\";\n  import BalanceEchart from \"@/views/extend/BalanceEchart.vue\";\n  import UserInf from \"@/views/user/UserInf.vue\";\n  import WalletConnect from \"@/views/user/WalletConnect.vue\";\n  import ChatMemu from \"@/views/chat/ChatMemu.vue\";\nexport default {\n    name: \"MarketShopIndex\",\n    components: {\n      Theme,\n      BalanceEchart,\n      UserInf,\n      WalletConnect,\n      ChatMemu,\n      ConnectionTips\n    },\n    data() {\n      return {\n        //****聊天栏******//\n        isOpen: false,\n        UserImageList: [],\n        avatar: \"\",\n        //*********************//\n        //方法\n        eChangTheme: null,\n        //连接钱包\n        user: {},\n        changeingAccount: false,\n      };\n    },\n    created() {},\n  mounted() {\n    if (window.ethereum != undefined && window.ethereum.isMetaMask) {\n        window.ethereum.on(\"accountsChanged\", () => {\n          this.connectWallet();\n        });\n        window.ethereum.on('chainChanged', () => {\n          window.location.reload()\n          this.$notify({\n            title: \"已切换链\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200,\n          });\n        });\n        this.connectWallet();\n      }\n    },\n    // provide() {\n    //     //依赖注入\n    //     return {\n    //         init: this.giveChatInitToWalletConnect,\n    //     };\n    // },\n    methods: {\n      giveChatInitToWalletConnect() {\n        console.log(\"聊天栏正初始化.......\");\n        this.$refs.ChatMemu.init();\n      },\n      echartsChangTheme(method) {\n        this.eChangTheme = method;\n      },\n      async connectWallet() {\n        // if (this.isRepeatClick) {\n        // this.isRepeatClick = false;\n          console.log(localStorage.getItem[\"token\"] == null);\n          if (localStorage.getItem[\"token\"] == null || !this.$store.state.isconnect) {\n                  try {\n            // 请求用户授权\n            await window.ethereum\n              .request({ method: \"eth_requestAccounts\" })\n              .then(async (handleAccountsChanged) => {\n                this.$store.commit(\n                      \"setcurrentAddress\",\n                      handleAccountsChanged[0]\n                );\n                this.$store.commit(\"changeAvatar\", handleAccountsChanged[0]);\n                this.user.userAddress = handleAccountsChanged[0];\n                // await checkUserExist(this.user).then(async (re) => {\n                //   console.log(re);\n                //   if (re.data.data == \"\") {\n                //     alert(\"账户没有注册\");\n                //     this.user.encryptedPassword = CryptoJS.SHA256(\n                //       prompt(\"醒密码\")\n                //     ).toString();\n                //     console.log(this.user);\n                //     console.log(this.user);\n                //     await setMnemonic(this.user).then((re) => {\n                //       console.log(re);\n                //     });\n                //   } else {\n                //     alert(\"注册le\");\n                //     this.user.encryptedPassword = CryptoJS.SHA256(\n                //       prompt(\"醒密码\")\n                //     ).toString();\n                //   }\n                // });\n                // await getToken(this.user).then((re) => {\n                //   localStorage.clear();\n                //   console.log(this.user);\n                //   console.log(re);\n                //   if (re.data.data == null) {\n                //     alert(\"密码错误\");\n                //     // window.location.reload()\n                //   } else {\n                //     localStorage.setItem(\"token\", re.data.data);\n                //     this.$store.commit(\"connection\", true);\n                //     this.$store.commit(\"changeAvatar\", handleAccountsChanged[0]);\n                //     this.giveChatInitToWalletConnect()\n                //     this.$notify({\n                //       title: \"🎉 连接成功\",\n                //       position: \"top-left\",\n                //       offset: 200,\n                //     });\n                //   }\n                // });\n\n              })\n              .catch((error) => {\n                this.$store.commit(\"connection\", false);\n                if (error.code === 4001) {\n                  // EIP-1193 userRejectedRequest error\n                  console.log(\"Please connect to MetaMask.\");\n                } else {\n                  console.error(error);\n                }\n              });\n          } catch (error) {\n            console.error(error);\n            this.$notify.error({\n              title: \"连接失败\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          }\n          } else {\n            alert(\"jaslkjdkljaskldjl\")\n          }\n    \n        // } else {\n        //   this.$notify({\n        //     title: \"请稍等再c\",\n        //     type: \"warning\",\n        //     position: \"top-left\",\n        //     offset: 200,\n        //   });\n        // }\n        setTimeout(() => {\n          this.isRepeatClick = true;\n        }, 5000);\n      },\n    },\n  };\n</script>\n<style lang=\"scss\" scoped>\n@import \"@/style/index.css\";\n</style>\n<style lang=\"scss\" scoped>\n@import \"@/style/MarketShop/index.scss\";\n</style> \n  \n<style lang=\"scss\" scoped>\n.EmpowerMask{\n  z-index: 200;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.1);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  .EmpowerBox{\n    padding: 1%;\n    transition: all 0.3s ease-in-out;\n      overflow: hidden;\n      display: flex;\n      flex-direction: column;\n      width:600px;\n      height:150px;\n      border-radius: 30px;\n      background-color: white;\n      display: flex;\n      box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\n        rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\n        .EmpowerUserInfbox{\n          margin-top: 5%;\n          width: 100%;\n          height:45%;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          .EmpowerUserInf{\n\n            width: 120px;\n            height: 120px;\n            border-radius: 50%;\n            overflow: hidden;\n            border: 4px solid skyblue;\n            .UserImage{\n              width: 100%;\n              height: 100%;\n              object-fit: cover;\n            }\n          }\n          .EmpowerUserAddress{\n            font-weight: 800;\n            font-size: 2vw;\n            margin-left: 4%;\n          }\n        }\n        .EmpowerPasswordBox{\n          flex-direction: column;\n          @extend.EmpowerUserInfbox;\n          .EmpowerPasswordBoxTop{\n            width: 70%;\n          }\n          .EmpowerPasswordBoxBottom{\n            width: 100%;\n            display: flex;\n            justify-content: space-around;\n            margin-top: 6%;\n            font-size: 0.7vw;\n            span{\n              cursor: pointer;\n            }\n          }\n\n         \n        }\n  }\n}\n</style>"],"mappings":"AA+EA;AACA;AACA,OAAAA,cAAA;AACA,OAAAC,KAAA;AACA,OAAAC,aAAA;AACA,OAAAC,OAAA;AACA,OAAAC,aAAA;AACA,OAAAC,QAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAN,KAAA;IACAC,aAAA;IACAC,OAAA;IACAC,aAAA;IACAC,QAAA;IACAL;EACA;EACAQ,KAAA;IACA;MACA;MACAC,MAAA;MACAC,aAAA;MACAC,MAAA;MACA;MACA;MACAC,WAAA;MACA;MACAC,IAAA;MACAC,gBAAA;IACA;EACA;EACAC,QAAA;EACAC,QAAA;IACA,IAAAC,MAAA,CAAAC,QAAA,IAAAC,SAAA,IAAAF,MAAA,CAAAC,QAAA,CAAAE,UAAA;MACAH,MAAA,CAAAC,QAAA,CAAAG,EAAA;QACA,KAAAC,aAAA;MACA;MACAL,MAAA,CAAAC,QAAA,CAAAG,EAAA;QACAJ,MAAA,CAAAM,QAAA,CAAAC,MAAA;QACA,KAAAC,OAAA;UACAC,KAAA;UACAC,IAAA;UACAC,QAAA;UACAC,MAAA;QACA;MACA;MACA,KAAAP,aAAA;IACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAQ,OAAA;IACAC,4BAAA;MACAC,OAAA,CAAAC,GAAA;MACA,KAAAC,KAAA,CAAA7B,QAAA,CAAA8B,IAAA;IACA;IACAC,kBAAAC,MAAA;MACA,KAAAzB,WAAA,GAAAyB,MAAA;IACA;IACA,MAAAf,cAAA;MACA;MACA;MACAU,OAAA,CAAAC,GAAA,CAAAK,YAAA,CAAAC,OAAA;MACA,IAAAD,YAAA,CAAAC,OAAA,2BAAAC,MAAA,CAAAC,KAAA,CAAAC,SAAA;QACA;UACA;UACA,MAAAzB,MAAA,CAAAC,QAAA,CACAyB,OAAA;YAAAN,MAAA;UAAA,GACAO,IAAA,OAAAC,qBAAA;YACA,KAAAL,MAAA,CAAAM,MAAA,CACA,qBACAD,qBAAA,GACA;YACA,KAAAL,MAAA,CAAAM,MAAA,iBAAAD,qBAAA;YACA,KAAAhC,IAAA,CAAAkC,WAAA,GAAAF,qBAAA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;UAEA,GACAG,KAAA,CAAAC,KAAA;YACA,KAAAT,MAAA,CAAAM,MAAA;YACA,IAAAG,KAAA,CAAAC,IAAA;cACA;cACAlB,OAAA,CAAAC,GAAA;YACA;cACAD,OAAA,CAAAiB,KAAA,CAAAA,KAAA;YACA;UACA;QACA,SAAAA,KAAA;UACAjB,OAAA,CAAAiB,KAAA,CAAAA,KAAA;UACA,KAAAxB,OAAA,CAAAwB,KAAA;YACAvB,KAAA;YACAE,QAAA;YACAC,MAAA;UACA;QACA;MACA;QACAsB,KAAA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAC,UAAA;QACA,KAAAC,aAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}