{"ast":null,"code":"import { postOwnerContractList } from \"@/api/axios/ownerContractLIst\";\nimport { getToken, setMnemonic, checkUserExist, setAuthenticationMetaInformation, forgetMnemonic, resetMnemonic } from \"@/api/axios/user\";\nimport CryptoJS from \"crypto-js\";\nimport ConnectionTips from \"../user/ConnectionTips.vue\";\nimport Theme from \"@/components/oasisTheme.vue\";\nimport BalanceEchart from \"@/views/extend/BalanceEchart.vue\";\nimport UserInf from \"@/views/user/UserInf.vue\";\nimport ChatMemu from \"@/views/chat/ChatMemu.vue\";\nexport default {\n  name: \"MarketShopIndex\",\n  components: {\n    Theme,\n    BalanceEchart,\n    UserInf,\n    ChatMemu,\n    ConnectionTips\n  },\n  data() {\n    return {\n      //****聊天栏******//\n      isOpen: false,\n      UserImageList: [],\n      avatar: \"\",\n      //*********************//\n      //方法\n      eChangTheme: null,\n      //连接钱包\n      user: {},\n      changeingAccount: false,\n      anmiate1: true,\n      animate2: false,\n      animate3: false,\n      animate4: false,\n      animate5: false,\n      EmpowerSignForm: {\n        sp1: \"\",\n        sp2: \"\",\n        sp3: \"\"\n      },\n      isGetToken: false,\n      CopyTips: \"点击复制\",\n      CopySuccess: \"复制成功！\",\n      isCopy: false,\n      isRepeatClick: true,\n      newMnemonic: \"\",\n      isUnlocked: false\n    };\n  },\n  created() {},\n  async mounted() {\n    if (window.ethereum != undefined && window.ethereum.isMetaMask) {\n      await window.ethereum._metamask.isUnlocked().then(re => this.isUnlocked = re);\n      window.ethereum.on(\"accountsChanged\", async () => {\n        window.location.reload();\n      });\n      window.ethereum.on(\"chainChanged\", () => {\n        window.location.reload();\n        this.$notify({\n          title: \"已切换链\",\n          type: \"warning\",\n          position: \"top-left\",\n          offset: 200\n        });\n      });\n      await this.connectWallet();\n      if (!this.$store.state.isconnect && this.isUnlocked) {\n        this.isGetToken = true;\n        setTimeout(async () => {\n          this.anmiate1 = false;\n          await checkUserExist({\n            userAddress: this.$store.state.currentAddress\n          }).then(async re => {\n            console.log(re);\n            if (re.data.data == \"\") {\n              this.animate3 = true;\n            } else {\n              this.animate2 = true;\n            }\n          });\n        }, 2000);\n      }\n    }\n  },\n  methods: {\n    async empower() {\n      this.user.encryptedPassword = CryptoJS.SHA256(this.user.encryptedPassword).toString();\n      await setMnemonic(this.user).then(re => {\n        console.log(re);\n      });\n      this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n      await setAuthenticationMetaInformation(this.EmpowerSignForm).then(re => {\n        console.log(re);\n      });\n      await getToken(this.user).then(re => {\n        localStorage.clear();\n        console.log(re);\n        if (re.data.data == null) {\n          alert(\"密码错误\");\n        } else {\n          let currentAddress = {\n            ownerAddress: this.$store.state.currentAddress\n          };\n          postOwnerContractList(currentAddress).then(re => {\n            this.$store.commit(\"setOwnerNFTList\", re.data.data);\n          });\n          localStorage.setItem(\"token\", re.data.data);\n          this.giveChatInitToWalletConnect();\n          this.$store.commit(\"connection\", true);\n          this.$store.commit(\"setEmpower\", true);\n          this.isGetToken = false;\n          this.$notify({\n            title: \"🎉 连接成功\",\n            position: \"top-left\",\n            offset: 200\n          });\n        }\n      });\n    },\n    openEmpower() {\n      if (!this.$store.state.isEmpower && window.ethereum !== undefined && this.isUnlocked) {\n        this.isGetToken = true;\n      }\n    },\n    async checkEmpower() {\n      this.user.encryptedPassword = CryptoJS.SHA256(this.user.encryptedPassword).toString();\n      await getToken(this.user).then(re => {\n        localStorage.clear();\n        console.log(re);\n        if (re.data.data == null) {\n          this.user.encryptedPassword = \"\";\n          this.$notify({\n            title: \"授权码错误\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200\n          });\n        } else {\n          let currentAddress = {\n            ownerAddress: this.$store.state.currentAddress\n          };\n          postOwnerContractList(currentAddress).then(re => {\n            console.log(re);\n            this.$store.commit(\"setOwnerNFTList\", re.data.data);\n          });\n          localStorage.setItem(\"token\", re.data.data);\n          this.$store.commit(\"setEmpower\", true);\n          this.$store.commit(\"connection\", true);\n          this.giveChatInitToWalletConnect();\n          this.isGetToken = false;\n          this.$notify({\n            title: \"🎉 连接成功\",\n            position: \"top-left\",\n            offset: 200\n          });\n        }\n      });\n    },\n    viewControl(opt) {\n      switch (opt) {\n        case 1:\n          this.animate2 = false;\n          this.animate4 = true;\n          break;\n        case 2:\n          this.animate2 = true;\n          this.animate4 = false;\n          break;\n        case 3:\n          this.animate2 = true;\n          this.animate5 = false;\n          break;\n      }\n    },\n    async backPassword() {\n      this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n      forgetMnemonic(this.EmpowerSignForm).then(re => {\n        if (re.data.data) {\n          this.animate5 = true;\n          this.animate4 = false;\n        } else {\n          this.$notify({\n            title: \"密保错误\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200\n          });\n        }\n      });\n    },\n    async resetMnemonic() {\n      this.EmpowerSignForm.newMnemonic = CryptoJS.SHA256(this.newMnemonic).toString();\n      this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n      console.log(this.EmpowerSignForm);\n      await checkUserExist(this.EmpowerSignForm).then(re => {\n        if (re.data.data == this.EmpowerSignForm.encryptedPassword) {\n          this.$notify({\n            title: \"不能与旧密码重复\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200\n          });\n          return;\n        } else {\n          resetMnemonic(this.EmpowerSignForm).then(re => {\n            if (re.data.data == null) {\n              this.$notify.error({\n                title: \"系统异常\",\n                position: \"top-left\",\n                offset: 200\n              });\n            }\n            this.$notify({\n              title: \"🎉 重设成功\",\n              position: \"top-left\",\n              offset: 200\n            });\n            this.animate2 = true;\n            this.animate5 = false;\n          });\n        }\n      });\n    },\n    canacelEmpover() {\n      this.isGetToken = false;\n      this.$store.commit(\"connection\", true);\n      localStorage.clear();\n    },\n    giveChatInitToWalletConnect() {\n      console.log(\"聊天栏正初始化.......\");\n      this.$refs.ChatMemu.init();\n    },\n    echartsChangTheme(method) {\n      this.eChangTheme = method;\n    },\n    async connectWallet() {\n      if (localStorage.getItem[\"token\"] == null || !this.$store.state.isconnect) {\n        try {\n          // 请求用户授权\n          await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          }).then(async handleAccountsChanged => {\n            this.$store.commit(\"setcurrentAddress\", handleAccountsChanged[0]);\n            this.$store.commit(\"changeAvatar\", handleAccountsChanged[0]);\n            this.user.userAddress = handleAccountsChanged[0];\n          }).catch(error => {\n            this.$store.commit(\"connection\", false);\n            if (error.code === 4001) {\n              // EIP-1193 userRejectedRequest error\n              console.log(\"Please connect to MetaMask.\");\n            } else {\n              console.error(error);\n            }\n          });\n        } catch (error) {\n          console.error(error);\n          this.$notify.error({\n            title: \"连接失败\",\n            position: \"top-left\",\n            offset: 200\n          });\n        }\n      }\n    },\n    Copy() {\n      navigator.clipboard.writeText(this.$store.state.currentAddress).then(() => {\n        this.isCopy = true;\n        setTimeout(() => {\n          this.isCopy = false;\n        }, 3000);\n      });\n    },\n    GETHashAvatar() {\n      if (this.$store.state.isconnect) {\n        this.avatar = \"data:image/png;base64,\" + new this.Identicon(this.$store.state.currentAddress, 120).toString();\n        this.$refs.avatar.width = 60;\n        this.$refs.avatar.height = 60;\n      } else {\n        this.avatar = require(\"@/assets/webAssets/MetaMask.png\");\n        this.$refs.avatar.width = 40;\n        this.$refs.avatar.height = 40;\n      }\n    }\n  }\n};","map":{"version":3,"names":["postOwnerContractList","getToken","setMnemonic","checkUserExist","setAuthenticationMetaInformation","forgetMnemonic","resetMnemonic","CryptoJS","ConnectionTips","Theme","BalanceEchart","UserInf","ChatMemu","name","components","data","isOpen","UserImageList","avatar","eChangTheme","user","changeingAccount","anmiate1","animate2","animate3","animate4","animate5","EmpowerSignForm","sp1","sp2","sp3","isGetToken","CopyTips","CopySuccess","isCopy","isRepeatClick","newMnemonic","isUnlocked","created","mounted","window","ethereum","undefined","isMetaMask","_metamask","then","re","on","location","reload","$notify","title","type","position","offset","connectWallet","$store","state","isconnect","setTimeout","userAddress","currentAddress","console","log","methods","empower","encryptedPassword","SHA256","toString","localStorage","clear","alert","ownerAddress","commit","setItem","giveChatInitToWalletConnect","openEmpower","isEmpower","checkEmpower","viewControl","opt","backPassword","error","canacelEmpover","$refs","init","echartsChangTheme","method","getItem","request","handleAccountsChanged","catch","code","Copy","navigator","clipboard","writeText","GETHashAvatar","Identicon","width","height","require"],"sources":["src/views/market/index.vue"],"sourcesContent":["<template>\n  <div class=\"Main\">\n    <el-container>\n      <el-aside style=\"width: auto;\" class=\"HomeMenu animate__animated animate__fadeInLeft\">\n        <ChatMemu ref=\"ChatMemu\" />\n      </el-aside>\n\n      <el-main>\n        <router-view />\n      </el-main>\n\n      <el-aside class=\"animate__animated animate__fadeInRight\" style=\"width: auto;animation-delay: 1s;\">\n        <el-row type=\"flex\" class=\"row-bg\" justify=\"space-around\">\n          <el-col :span=\"8\">\n            <div class=\"grid-content bg-purple \">\n              <Theme :e-chang-theme=\"eChangTheme\" />\n            </div>\n          </el-col>\n          <el-col :span=\"12\">\n            <div class=\"grid-content bg-purple\">\n              <div class=\"Walletbox\">\n                <div class=\"WalletInnerBox\" @click.stop=\"Copy\">\n                  <span class=\"avatarBox\" @click=\"openEmpower\">\n                    <img class=\"avatar\" :src=\"$store.state.avatar\" alt=\"\" ref=\"avatar\" slot=\"reference\">\n                  </span>\n                  <span class=\"address\">{{ \n                    $store.state.currentAddress==\"\"?\"MetaMask is not connected\":`${this.$store.state.currentAddress.slice(\n                      0,\n                      5\n                    )}...${this.$store.state.currentAddress.slice(-5)}`\n                  }}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </el-col>\n        </el-row>\n        <div class=\"BalanceEchart\">\n          <BalanceEchart @echartsChangTheme=\"echartsChangTheme\" />\n        </div>\n        <div class=\"userInf\" v-if=\"$store.state.isconnect && $store.state.isEmpower\">\n          <UserInf />\n        </div>\n        <div class=\"userInf\">\n          <div class=\"feePercentage\" />\n        </div>\n        <div class=\"WaitLogin\" v-if=\"!$store.state.isEmpower\">\n          <ConnectionTips />\n        </div>\n      </el-aside>\n    </el-container>\n    <transition enter-active-class=\"animate__animated animate__fadeIn\" leave-active-class=\"animate__animated animate__fadeOut\">\n      <div class=\"EmpowerMask\" v-if=\"isGetToken\">\n        <div class=\"EmpowerBox \">\n          <div class=\"EmpowerUserInfbox\">\n            <div class=\"animate1 \" v-if=\"anmiate1\">\n              <span style=\"font-weight: 800;\n            font-size: 1.2vw;padding-right:4% ;\">正在连接到 </span>\n              <div class=\"EmpowerUserInf\">\n                <img class=\"UserImage\" :src=\"$store.state.avatar\" alt=\"\" ref=\"avatar\" slot=\"reference\">\n              </div>\n              <div class=\"EmpowerUserAddress\">\n                {{ `${$store.state.currentAddress.slice(\n                  0,\n                  5\n                )}...${$store.state.currentAddress.slice(37)}` }}\n              </div>\n            </div>\n            <div class=\"animate2 animate__animated animate__fadeIn\" v-if=\"animate2\">\n              <div class=\"EmpowerUserInf\">\n                <img class=\"UserImage\" :src=\"$store.state.avatar\" alt=\"\" ref=\"avatar\" slot=\"reference\">\n              </div>\n              <div class=\"EmpowerUserAddress\">\n                {{ `${$store.state.currentAddress.slice(\n                  0,\n                  5\n                )}...${$store.state.currentAddress.slice(37)}` }}\n              </div>\n              <div class=\"EmpowerPasswordBox\">\n                <div class=\"EmpowerPasswordBoxTop\">\n                  <el-input type=\"password\" v-model=\"user.encryptedPassword\" placeholder=\"请输入授权码\" @keydown.enter.prevent.native=\"checkEmpower\" />\n                </div>\n                <div class=\"EmpowerPasswordBoxBottom\">\n                  <div class=\"EmpowerPasswordOpt\">\n                    <span style=\"margin-right: 5%;\" @click=\"viewControl(1)\">忘记授权码</span>\n                    <span style=\"margin-left: 5%;\" @click=\"canacelEmpover\">不授权直接进入</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"animate3 animate__animated animate__fadeInLeft\" v-if=\"animate3\">\n              <div class=\"SignTop\">\n                <div class=\"SignUserInf\">\n                  <img class=\"SignUserImage\" :src=\"$store.state.avatar\" alt=\"\" ref=\"avatar\" slot=\"reference\">\n                </div>\n                <div class=\"SignUserAddress\">\n                  {{ `${$store.state.currentAddress.slice(\n                    0,\n                    5\n                  )}...${$store.state.currentAddress.slice(37)}` }} 请设置授权信息和密保\n                </div>\n                <div />\n              </div>\n              <div class=\"SignForm\">\n                <el-form label-position=\"top\" label-width=\"80px\" :model=\"EmpowerSignForm\">\n                  <el-form-item label=\"授权码:\">\n                    <el-input type=\"password\" v-model=\"user.encryptedPassword\" placeholder=\"请输入授权码\" />\n                  </el-form-item>\n                  <el-divider />\n                  <el-form-item label=\"你喜欢看的电影:\">\n                    <el-input v-model=\"EmpowerSignForm.sp1\" placeholder=\"请输入密保1\" />\n                  </el-form-item>\n                  <el-form-item label=\"你喜欢听的音乐:\">\n                    <el-input v-model=\"EmpowerSignForm.sp2\" placeholder=\"请输入密保2\" />\n                  </el-form-item>\n                  <el-form-item label=\"你喜欢的运动:\">\n                    <el-input v-model=\"EmpowerSignForm.sp3\" placeholder=\"请输入密保3\" />\n                  </el-form-item>\n                </el-form>\n                <div class=\"SignSubmitBox\">\n                  <el-button type=\"danger\" @click=\"isGetToken=false\">\n                    取消\n                  </el-button>\n                  <el-button type=\"primary\" @click=\"empower\">\n                    授权\n                  </el-button>\n                </div>\n              </div>\n            </div>\n            <div class=\"animate4 animate__animated animate__fadeInLeft\" v-if=\"animate4\">\n              <div class=\"SignTop\">\n                <div class=\"SignUserInf\">\n                  <img class=\"SignUserImage\" :src=\"$store.state.avatar\" alt=\"\" ref=\"avatar\" slot=\"reference\">\n                </div>\n                <div class=\"SignUserAddress\">\n                  {{ `${$store.state.currentAddress.slice(\n                    0,\n                    5\n                  )}...${$store.state.currentAddress.slice(37)}` }} 找回密码\n                </div>\n                <div />\n              </div>\n              <div class=\"SignForm\">\n                <el-form label-position=\"top\" label-width=\"80px\" :model=\"EmpowerSignForm\">\n                  <el-form-item label=\"你喜欢看的电影:\">\n                    <el-input v-model=\"EmpowerSignForm.sp1\" placeholder=\"请输入密保1\" />\n                  </el-form-item>\n                  <el-form-item label=\"你喜欢听的音乐:\">\n                    <el-input v-model=\"EmpowerSignForm.sp2\" placeholder=\"请输入密保2\" />\n                  </el-form-item>\n                  <el-form-item label=\"你喜欢的运动:\">\n                    <el-input v-model=\"EmpowerSignForm.sp3\" placeholder=\"请输入密保3\" />\n                  </el-form-item>\n                </el-form>\n                <div class=\"SignSubmitBox\">\n                  <el-button type=\"danger\" @click=\"viewControl(2)\n                    \">\n                    返回\n                  </el-button>\n                  <el-button type=\"primary\" @click=\"backPassword\">\n                    找回\n                  </el-button>\n                </div>\n              </div>\n            </div>\n            <div class=\"animate5\" v-if=\"animate5\">\n              <div style=\"margin-bottom: 20px;font-size: 1vw;\">\n                请设置新的授权码\n              </div>\n              <el-input v-model=\"newMnemonic\" placeholder=\"请设置新的授权码\" />\n              <el-button type=\"danger\" @click=\"viewControl(3)\" style=\"margin-top: 20px;\">\n                取消\n              </el-button>\n              <el-button type=\"primary\" @click=\"resetMnemonic\" style=\"margin-top: 20px;\">\n                重设\n              </el-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </transition>\n  </div>\n</template>\n<script>\n  import { postOwnerContractList } from \"@/api/axios/ownerContractLIst\";\n  import {\n    getToken,\n    setMnemonic,\n    checkUserExist,\n    setAuthenticationMetaInformation,\n    forgetMnemonic,\n    resetMnemonic,\n  } from \"@/api/axios/user\";\n  import CryptoJS from \"crypto-js\";\n  import ConnectionTips from \"../user/ConnectionTips.vue\";\n  import Theme from \"@/components/oasisTheme.vue\";\n  import BalanceEchart from \"@/views/extend/BalanceEchart.vue\";\n  import UserInf from \"@/views/user/UserInf.vue\";\n  import ChatMemu from \"@/views/chat/ChatMemu.vue\";\n  export default {\n    name: \"MarketShopIndex\",\n    components: {\n      Theme,\n      BalanceEchart,\n      UserInf,\n      ChatMemu,\n      ConnectionTips,\n    },\n    data() {\n      return {\n        //****聊天栏******//\n        isOpen: false,\n        UserImageList: [],\n        avatar: \"\",\n        //*********************//\n        //方法\n        eChangTheme: null,\n        //连接钱包\n        user: {},\n        changeingAccount: false,\n        anmiate1: true,\n        animate2: false,\n        animate3: false,\n        animate4: false,\n        animate5: false,\n        EmpowerSignForm: {\n          sp1: \"\",\n          sp2: \"\",\n          sp3: \"\",\n        },\n        isGetToken: false,\n        CopyTips: \"点击复制\",\n        CopySuccess: \"复制成功！\",\n        isCopy: false,\n        isRepeatClick: true,\n        newMnemonic: \"\",\n        isUnlocked:false\n      };\n    },\n    created() {},\n    async mounted() {\n      if (window.ethereum != undefined && window.ethereum.isMetaMask) {\n        await window.ethereum._metamask.isUnlocked().then(re=> this.isUnlocked=re)\n        window.ethereum.on(\"accountsChanged\", async () => {\n          window.location.reload();\n        });\n        window.ethereum.on(\"chainChanged\", () => {\n          window.location.reload();\n          this.$notify({\n            title: \"已切换链\",\n            type: \"warning\",\n            position: \"top-left\",\n            offset: 200,\n          });\n        });\n        await this.connectWallet();\n        if (!this.$store.state.isconnect && this.isUnlocked) {\n          \n          this.isGetToken = true;\n          setTimeout(async () => {\n            this.anmiate1 = false;\n            await checkUserExist({\n              userAddress: this.$store.state.currentAddress,\n            }).then(async (re) => {\n              console.log(re);\n              if (re.data.data == \"\") {\n                this.animate3 = true;\n              } else {\n                this.animate2 = true;\n              }\n            });\n          }, 2000);\n        }\n      }\n    },\n    methods: {\n      async empower() {\n        this.user.encryptedPassword = CryptoJS.SHA256(\n          this.user.encryptedPassword\n        ).toString();\n        await setMnemonic(this.user).then((re) => {\n          console.log(re);\n        });\n        this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n        await setAuthenticationMetaInformation(this.EmpowerSignForm).then(\n          (re) => {\n            console.log(re);\n          }\n        );\n        await getToken(this.user).then((re) => {\n          localStorage.clear();\n          console.log(re);\n          if (re.data.data == null) {\n            alert(\"密码错误\");\n          } else {\n            let currentAddress = {\n              ownerAddress: this.$store.state.currentAddress,\n            };\n            postOwnerContractList(currentAddress).then((re) => {\n              this.$store.commit(\"setOwnerNFTList\", re.data.data);\n            });\n            localStorage.setItem(\"token\", re.data.data);\n            this.giveChatInitToWalletConnect();\n            this.$store.commit(\"connection\", true);\n            this.$store.commit(\"setEmpower\", true);\n            this.isGetToken = false;\n            this.$notify({\n              title: \"🎉 连接成功\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          }\n        });\n      },\n      openEmpower() {\n        if (!this.$store.state.isEmpower && window.ethereum!==undefined && this.isUnlocked) {\n          this.isGetToken = true;\n        }\n      },\n      async checkEmpower() {\n        this.user.encryptedPassword = CryptoJS.SHA256(\n          this.user.encryptedPassword\n        ).toString();\n        await getToken(this.user).then((re) => {\n          localStorage.clear();\n          console.log(re);\n          if (re.data.data == null) {\n            this.user.encryptedPassword = \"\";\n            this.$notify({\n              title: \"授权码错误\",\n              type: \"warning\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          } else {\n            let currentAddress = {\n              ownerAddress: this.$store.state.currentAddress,\n            };\n            postOwnerContractList(currentAddress).then((re) => {\n              console.log(re);\n              this.$store.commit(\"setOwnerNFTList\", re.data.data);\n            });\n            localStorage.setItem(\"token\", re.data.data);\n            this.$store.commit(\"setEmpower\", true);\n            this.$store.commit(\"connection\", true);\n            this.giveChatInitToWalletConnect();\n            this.isGetToken = false;\n            this.$notify({\n              title: \"🎉 连接成功\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          }\n        });\n      },\n      viewControl(opt) {\n        switch (opt) {\n          case 1:\n            this.animate2 = false;\n            this.animate4 = true;\n            break;\n          case 2:\n            this.animate2 = true;\n            this.animate4 = false;\n            break;\n          case 3:\n            this.animate2 = true;\n            this.animate5 = false;\n            break;\n        }\n      },\n      async backPassword() {\n        this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n        forgetMnemonic(this.EmpowerSignForm).then((re) => {\n          if (re.data.data) {\n            this.animate5 = true;\n            this.animate4 = false;\n          } else {\n            this.$notify({\n              title: \"密保错误\",\n              type: \"warning\",\n              position: \"top-left\",\n              offset: 200,\n            });\n          }\n        });\n      },\n      async resetMnemonic() {\n        this.EmpowerSignForm.newMnemonic = CryptoJS.SHA256(\n          this.newMnemonic\n        ).toString();\n        this.EmpowerSignForm.userAddress = this.$store.state.currentAddress;\n        console.log(this.EmpowerSignForm);\n        await checkUserExist(this.EmpowerSignForm).then((re) => {\n          if (re.data.data == this.EmpowerSignForm.encryptedPassword) {\n            this.$notify({\n              title: \"不能与旧密码重复\",\n              type: \"warning\",\n              position: \"top-left\",\n              offset: 200,\n            });\n            return;\n          } else {\n            resetMnemonic(this.EmpowerSignForm).then((re) => {\n              if (re.data.data == null) {\n                this.$notify.error({\n                  title: \"系统异常\",\n                  position: \"top-left\",\n                  offset: 200,\n                });\n              }\n              this.$notify({\n                title: \"🎉 重设成功\",\n                position: \"top-left\",\n                offset: 200,\n              });\n              this.animate2 = true;\n              this.animate5 = false;\n            });\n          }\n        });\n      },\n      canacelEmpover() {\n        this.isGetToken = false;\n        this.$store.commit(\"connection\", true);\n        localStorage.clear();\n      },\n      giveChatInitToWalletConnect() {\n        console.log(\"聊天栏正初始化.......\");\n        this.$refs.ChatMemu.init();\n      },\n      echartsChangTheme(method) {\n        this.eChangTheme = method;\n      },\n      async connectWallet() {\n          if (\n            localStorage.getItem[\"token\"] == null ||\n            !this.$store.state.isconnect\n          ) {\n            try {\n              // 请求用户授权\n              await window.ethereum\n                .request({ method: \"eth_requestAccounts\" })\n                .then(async (handleAccountsChanged) => {\n                  this.$store.commit(\n                    \"setcurrentAddress\",\n                    handleAccountsChanged[0]\n                  );\n                  this.$store.commit(\"changeAvatar\", handleAccountsChanged[0]);\n                  this.user.userAddress = handleAccountsChanged[0];\n                })\n                .catch((error) => {\n                  this.$store.commit(\"connection\", false);\n                  if (error.code === 4001) {\n                    // EIP-1193 userRejectedRequest error\n                    console.log(\"Please connect to MetaMask.\");\n                  } else {\n                    console.error(error);\n                  }\n                });\n            } catch (error) {\n              console.error(error);\n              this.$notify.error({\n                title: \"连接失败\",\n                position: \"top-left\",\n                offset: 200,\n              });\n            }\n          }\n      },\n      Copy() {\n        navigator.clipboard\n          .writeText(this.$store.state.currentAddress)\n          .then(() => {\n            this.isCopy = true;\n            setTimeout(() => {\n              this.isCopy = false;\n            }, 3000);\n          });\n      },\n      GETHashAvatar() {\n        if (this.$store.state.isconnect) {\n          this.avatar =\n            \"data:image/png;base64,\" +\n            new this.Identicon(this.$store.state.currentAddress, 120).toString();\n          this.$refs.avatar.width = 60;\n          this.$refs.avatar.height = 60;\n        } else {\n          this.avatar = require(\"@/assets/webAssets/MetaMask.png\");\n          this.$refs.avatar.width = 40;\n          this.$refs.avatar.height = 40;\n        }\n      },\n    },\n  };\n</script>\n<style lang=\"scss\" scoped>\n@import \"@/style/index.css\";\n</style>\n<style lang=\"scss\" scoped>\n@import \"@/style/MarketShop/index.scss\";\n</style> \n  \n<style lang=\"scss\" scoped>\n.EmpowerMask {\n  z-index: 200;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  .EmpowerBox {\n    transition: all 0.3s ease-in-out;\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    width: 650px;\n    border-radius: 30px;\n    background-color: white;\n    display: flex;\n    box-shadow: rgba(50, 50, 93, 0.25) 0px 6px 12px -2px,\n      rgba(0, 0, 0, 0.3) 0px 3px 7px -3px;\n    .EmpowerUserInfbox {\n      margin: 5% 0 5% 0;\n      width: 100%;\n      height: 45%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      .animate1 {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        transition: all 1s ease-in-out;\n        width: 100%;\n        .EmpowerUserInf {\n          width: 120px;\n          height: 120px;\n          border-radius: 50%;\n          overflow: hidden;\n          border: 4px solid var(--border-green--);\n          .UserImage {\n            width: 100%;\n            height: 100%;\n            object-fit: cover;\n          }\n        }\n        .EmpowerUserAddress {\n          font-weight: 800;\n          font-size: 1.2vw;\n          padding-left: 4%;\n        }\n      }\n      .animate2 {\n        transition: all 1s ease-in-out;\n        @extend .animate1;\n        .EmpowerPasswordBox {\n          margin-left: 4%;\n          .EmpowerPasswordBoxTop {\n            width: 100%;\n          }\n          .EmpowerPasswordBoxBottom {\n            width: 100%;\n            font-size: 0.7vw;\n            .EmpowerPasswordOpt {\n              margin-top: 30px;\n              display: flex;\n              justify-content: space-around;\n              span {\n                cursor: pointer;\n              }\n            }\n          }\n        }\n      }\n      .animate3 {\n        @extend .animate1;\n        flex-direction: column;\n        .SignTop {\n          width: 100%;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          .SignUserInf {\n            width: 50px;\n            height: 50px;\n            border-radius: 50%;\n            overflow: hidden;\n            border: 2px solid #ff0000;\n            .SignUserImage {\n              width: 100%;\n              height: 100%;\n              object-fit: cover;\n            }\n          }\n          .SignUserAddress {\n            font-weight: 800;\n            font-size: 1vw;\n            padding-left: 2%;\n          }\n        }\n\n        .SignForm {\n          width: 50%;\n          margin-top: 2%;\n          .SignSubmitBox {\n            display: flex;\n            margin: 3% 0 3% 0;\n            justify-content: space-around;\n            align-items: center;\n          }\n        }\n      }\n      .animate4 {\n        @extend .animate3;\n      }\n    }\n  }\n}\n</style>\n<style lang=\"scss\">\n/* 全局通知样式 */\n.el-notification {\n  border: none !important;\n  padding-top: 2%;\n  padding-bottom: 2%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 20px;\n  .el-notification__title {\n    font-size: 1vw;\n    font-weight: 500;\n  }\n}\n::-webkit-scrollbar {\n  width: 6px;\n  height: 8px;\n  display: none;\n  background-color: transparent;\n}\n::-webkit-scrollbar-thumb {\n  background-color: #ccc;\n  border-radius: 25px;\n}\n</style>\n<style lang=\"scss\" scoped>\n.Walletbox {\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n}\n.avatar {\n  object-fit: fill;\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  float: right;\n}\n.avatarBox {\n  overflow: hidden;\n  border-radius: 50%;\n  width: 38px;\n  height: 38px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 10%;\n  border: 2px solid var(--border-green--);\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    border: 2px solid var(--border-green--);\n    box-shadow: 0 0 20px var(--border-green--);\n    transition: all 0.3s ease-in-out;\n  }\n}\n.MetaMaskAvatar {\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.BOX {\n  width: 100%;\n  height: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.WalletInnerBox {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  cursor: pointer;\n}\n.address {\n  margin-left: 5%;\n  color: var(--Dark--);\n  font-weight: 800;\n  font-size: 12px;\n  width: 50%;\n  text-align: center;\n  border-radius: 10px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  font-family: Arial, Helvetica, sans-serif;\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    background-color: rgba(238, 238, 238, 0.1);\n    transition: all 0.3s ease-in-out;\n  }\n}\n.feePercentage {\n  width: 90%;\n  height: 100%;\n  background-color: var(--White--);\n  border-radius: 40px;\n  box-shadow: var(--boxshdow-style--);\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    box-shadow: rgba(14, 30, 37, 0.12) 0px 2px 4px 0px,\n      rgba(14, 30, 37, 0.32) 0px 2px 16px 0px;\n    transition: all 0.3s ease-in-out;\n  }\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}