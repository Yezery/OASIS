{"ast":null,"code":"import { isUint8ArrayList, Uint8ArrayList } from 'uint8arraylist';\nimport { reader } from 'it-reader';\nexport function lteReader(source) {\n  const input = reader(source);\n  let overflow;\n  const lteReader = {\n    [Symbol.asyncIterator]: () => lteReader,\n    async next(bytes) {\n      if (overflow != null) {\n        let value;\n        if (bytes == null || overflow.length === bytes) {\n          value = overflow;\n          overflow = null;\n        } else if (overflow.length > bytes) {\n          value = overflow.sublist(0, bytes);\n          overflow = overflow.sublist(bytes);\n        } else if (overflow.length < bytes) {\n          const {\n            value: nextValue,\n            done\n          } = await input.next(bytes - overflow.length);\n          if (done === true ?? nextValue == null) {\n            throw Object.assign(new Error(`stream ended before ${bytes - overflow.length} bytes became available`), {\n              code: 'ERR_UNDER_READ'\n            });\n          }\n          value = new Uint8ArrayList(overflow, nextValue);\n          overflow = null;\n        }\n        if (value == null) {\n          const result = {\n            done: true,\n            value: undefined\n          };\n          return result;\n        }\n        const result = {\n          done: false,\n          value\n        };\n        return result;\n      }\n      return await input.next(bytes);\n    },\n    async nextLte(bytes) {\n      const {\n        done,\n        value\n      } = await lteReader.next();\n      if (done === true) {\n        return {\n          done: true,\n          value: undefined\n        };\n      }\n      if (value.length <= bytes) {\n        return {\n          done: false,\n          value\n        };\n      }\n      const list = isUint8ArrayList(value) ? value : new Uint8ArrayList(value);\n      if (overflow != null) {\n        overflow.append(list.sublist(bytes));\n      } else {\n        overflow = list.sublist(bytes);\n      }\n      return {\n        done: false,\n        value: list.sublist(0, bytes)\n      };\n    },\n    async return() {\n      return await input.return();\n    }\n  };\n  return lteReader;\n}","map":{"version":3,"names":["isUint8ArrayList","Uint8ArrayList","reader","lteReader","source","input","overflow","Symbol","asyncIterator","next","bytes","value","length","sublist","nextValue","done","Object","assign","Error","code","result","undefined","nextLte","list","append","return"],"sources":["../../src/lte-reader.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,cAAc,QAAQ,gBAAgB;AACjE,SAASC,MAAM,QAAQ,WAAW;AAQlC,OAAM,SAAUC,SAASA,CAAEC,MAA0B;EACnD,MAAMC,KAAK,GAAGH,MAAM,CAACE,MAAM,CAAC;EAC5B,IAAIE,QAA+B;EACnC,MAAMH,SAAS,GAAG;IAChB,CAACI,MAAM,CAACC,aAAa,GAAG,MAAML,SAAS;IACvC,MAAMM,IAAIA,CAAEC,KAAc;MACxB,IAAIJ,QAAQ,IAAI,IAAI,EAAE;QACpB,IAAIK,KAAK;QACT,IAAID,KAAK,IAAI,IAAI,IAAIJ,QAAQ,CAACM,MAAM,KAAKF,KAAK,EAAE;UAC9CC,KAAK,GAAGL,QAAQ;UAChBA,QAAQ,GAAG,IAAI;SAChB,MAAM,IAAIA,QAAQ,CAACM,MAAM,GAAGF,KAAK,EAAE;UAClCC,KAAK,GAAGL,QAAQ,CAACO,OAAO,CAAC,CAAC,EAAEH,KAAK,CAAC;UAClCJ,QAAQ,GAAGA,QAAQ,CAACO,OAAO,CAACH,KAAK,CAAC;SACnC,MAAM,IAAIJ,QAAQ,CAACM,MAAM,GAAGF,KAAK,EAAE;UAClC,MAAM;YAAEC,KAAK,EAAEG,SAAS;YAAEC;UAAI,CAAE,GAAG,MAAMV,KAAK,CAACI,IAAI,CAACC,KAAK,GAAGJ,QAAQ,CAACM,MAAM,CAAC;UAC5E,IAAIG,IAAI,KAAK,IAAI,IAAID,SAAS,IAAI,IAAI,EAAE;YACtC,MAAME,MAAM,CAACC,MAAM,CACjB,IAAIC,KAAK,CAAC,uBAAuBR,KAAK,GAAGJ,QAAQ,CAACM,MAAM,yBAAyB,CAAC,EAClF;cAAEO,IAAI,EAAE;YAAgB,CAAE,CAC3B;;UAEHR,KAAK,GAAG,IAAIV,cAAc,CAACK,QAAQ,EAAEQ,SAAS,CAAC;UAC/CR,QAAQ,GAAG,IAAI;;QAGjB,IAAIK,KAAK,IAAI,IAAI,EAAE;UACjB,MAAMS,MAAM,GAAmC;YAAEL,IAAI,EAAE,IAAI;YAAEJ,KAAK,EAAEU;UAAS,CAAE;UAE/E,OAAOD,MAAM;;QAGf,MAAMA,MAAM,GAAmC;UAAEL,IAAI,EAAE,KAAK;UAAEJ;QAAK,CAAE;QAErE,OAAOS,MAAM;;MAGf,OAAO,MAAMf,KAAK,CAACI,IAAI,CAACC,KAAK,CAAC;IAChC,CAAC;IACD,MAAMY,OAAOA,CAAEZ,KAAa;MAC1B,MAAM;QAAEK,IAAI;QAAEJ;MAAK,CAAE,GAAG,MAAMR,SAAS,CAACM,IAAI,EAAE;MAE9C,IAAIM,IAAI,KAAK,IAAI,EAAE;QACjB,OAAO;UACLA,IAAI,EAAE,IAAI;UACVJ,KAAK,EAAEU;SACR;;MAGH,IAAIV,KAAK,CAACC,MAAM,IAAIF,KAAK,EAAE;QACzB,OAAO;UAAEK,IAAI,EAAE,KAAK;UAAEJ;QAAK,CAAE;;MAG/B,MAAMY,IAAI,GAAGvB,gBAAgB,CAACW,KAAK,CAAC,GAAGA,KAAK,GAAG,IAAIV,cAAc,CAACU,KAAK,CAAC;MAExE,IAAIL,QAAQ,IAAI,IAAI,EAAE;QACpBA,QAAQ,CAACkB,MAAM,CAACD,IAAI,CAACV,OAAO,CAACH,KAAK,CAAC,CAAC;OACrC,MAAM;QACLJ,QAAQ,GAAGiB,IAAI,CAACV,OAAO,CAACH,KAAK,CAAC;;MAGhC,OAAO;QAAEK,IAAI,EAAE,KAAK;QAAEJ,KAAK,EAAEY,IAAI,CAACV,OAAO,CAAC,CAAC,EAAEH,KAAK;MAAC,CAAE;IACvD,CAAC;IACD,MAAMe,MAAMA,CAAA;MACV,OAAO,MAAMpB,KAAK,CAACoB,MAAM,EAAE;IAC7B;GACD;EAED,OAAOtB,SAAS;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}