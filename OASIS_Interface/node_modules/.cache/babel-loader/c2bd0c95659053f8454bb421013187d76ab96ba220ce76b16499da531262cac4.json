{"ast":null,"code":"/* eslint-env browser */\n\nimport { Client } from './core.js';\n\n// Set default configuration and call create function with them\n/**\n * @typedef { import(\"../types\").Options } Options\n */\n\n/**\n * @template T\n * @typedef {(client: Client, clientOptions: Options) => T} Fn\n */\n\n/**\n * @template T\n * @typedef {(clientOptions: Options) => T} Factory\n */\n\n/**\n * @template T\n * @param {Fn<T>} fn\n * @returns {Factory<T>}\n */\nexport const configure = fn => {\n  return options => {\n    return fn(new Client(options), options);\n  };\n};","map":{"version":3,"names":["Client","configure","fn","options"],"sources":["/Users/yezery/Documents/大学素材/毕业设计/OASIS/OASIS_Interface/node_modules/.store/ipfs-http-client@60.0.1/node_modules/ipfs-http-client/src/lib/configure.js"],"sourcesContent":["\n/* eslint-env browser */\n\nimport { Client } from './core.js'\n\n// Set default configuration and call create function with them\n/**\n * @typedef { import(\"../types\").Options } Options\n */\n\n/**\n * @template T\n * @typedef {(client: Client, clientOptions: Options) => T} Fn\n */\n\n/**\n * @template T\n * @typedef {(clientOptions: Options) => T} Factory\n */\n\n/**\n * @template T\n * @param {Fn<T>} fn\n * @returns {Factory<T>}\n */\nexport const configure = (fn) => {\n  return (options) => {\n    return fn(new Client(options), options)\n  }\n}\n"],"mappings":"AACA;;AAEA,SAASA,MAAM,QAAQ,WAAW;;AAElC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,SAAS,GAAIC,EAAE,IAAK;EAC/B,OAAQC,OAAO,IAAK;IAClB,OAAOD,EAAE,CAAC,IAAIF,MAAM,CAACG,OAAO,CAAC,EAAEA,OAAO,CAAC;EACzC,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}