{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { EventIterator } from 'event-iterator';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\n// copied from github.com/feross/buffer\n// Some ArrayBuffers are not passing the instanceof check, so we need to do a bit more work :(\nfunction isArrayBuffer(obj) {\n  return obj instanceof ArrayBuffer || obj?.constructor?.name === 'ArrayBuffer' && typeof obj?.byteLength === 'number';\n}\nexport default (socket => {\n  socket.binaryType = 'arraybuffer';\n  const connected = async () => await new Promise((resolve, reject) => {\n    if (isConnected) {\n      return resolve();\n    }\n    if (connError != null) {\n      return reject(connError);\n    }\n    const cleanUp = cont => {\n      socket.removeEventListener('open', onOpen);\n      socket.removeEventListener('error', onError);\n      cont();\n    };\n    const onOpen = () => cleanUp(resolve);\n    const onError = event => {\n      cleanUp(() => reject(event.error ?? new Error(`connect ECONNREFUSED ${socket.url}`)));\n    };\n    socket.addEventListener('open', onOpen);\n    socket.addEventListener('error', onError);\n  });\n  const source = async function* () {\n    const messages = new EventIterator(({\n      push,\n      stop,\n      fail\n    }) => {\n      const onMessage = event => {\n        let data = null;\n        if (typeof event.data === 'string') {\n          data = uint8ArrayFromString(event.data);\n        }\n        if (isArrayBuffer(event.data)) {\n          data = new Uint8Array(event.data);\n        }\n        if (event.data instanceof Uint8Array) {\n          data = event.data;\n        }\n        if (data == null) {\n          return;\n        }\n        push(data);\n      };\n      const onError = event => fail(event.error ?? new Error('Socket error'));\n      socket.addEventListener('message', onMessage);\n      socket.addEventListener('error', onError);\n      socket.addEventListener('close', stop);\n      return () => {\n        socket.removeEventListener('message', onMessage);\n        socket.removeEventListener('error', onError);\n        socket.removeEventListener('close', stop);\n      };\n    }, {\n      highWaterMark: Infinity\n    });\n    await connected();\n    for await (const chunk of messages) {\n      yield isArrayBuffer(chunk) ? new Uint8Array(chunk) : chunk;\n    }\n  }();\n  let isConnected = socket.readyState === 1;\n  let connError;\n  socket.addEventListener('open', () => {\n    isConnected = true;\n    connError = null;\n  });\n  socket.addEventListener('close', () => {\n    isConnected = false;\n    connError = null;\n  });\n  socket.addEventListener('error', event => {\n    if (!isConnected) {\n      connError = event.error ?? new Error(`connect ECONNREFUSED ${socket.url}`);\n    }\n  });\n  return Object.assign(source, {\n    connected\n  });\n});","map":{"version":3,"names":["EventIterator","fromString","uint8ArrayFromString","isArrayBuffer","obj","ArrayBuffer","constructor","name","byteLength","socket","binaryType","connected","Promise","resolve","reject","isConnected","connError","cleanUp","cont","removeEventListener","onOpen","onError","event","error","Error","url","addEventListener","source","messages","push","stop","fail","onMessage","data","Uint8Array","highWaterMark","Infinity","chunk","readyState","Object","assign"],"sources":["../../src/source.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}