{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.array.push.js\");\nvar util = require('util');\nvar Stream = require('stream');\nvar ChunkStream = module.exports = function () {\n  Stream.call(this);\n  this._buffers = [];\n  this._buffered = 0;\n  this._reads = [];\n  this._paused = false;\n  this._encoding = 'utf8';\n  this.writable = true;\n};\nutil.inherits(ChunkStream, Stream);\nChunkStream.prototype.read = function (length, callback) {\n  this._reads.push({\n    length: Math.abs(length),\n    // if length < 0 then at most this length\n    allowLess: length < 0,\n    func: callback\n  });\n  process.nextTick(function () {\n    this._process();\n\n    // its paused and there is not enought data then ask for more\n    if (this._paused && this._reads.length > 0) {\n      this._paused = false;\n      this.emit('drain');\n    }\n  }.bind(this));\n};\nChunkStream.prototype.write = function (data, encoding) {\n  if (!this.writable) {\n    this.emit('error', new Error('Stream not writable'));\n    return false;\n  }\n  var dataBuffer;\n  if (Buffer.isBuffer(data)) {\n    dataBuffer = data;\n  } else {\n    dataBuffer = new Buffer(data, encoding || this._encoding);\n  }\n  this._buffers.push(dataBuffer);\n  this._buffered += dataBuffer.length;\n  this._process();\n\n  // ok if there are no more read requests\n  if (this._reads && this._reads.length === 0) {\n    this._paused = true;\n  }\n  return this.writable && !this._paused;\n};\nChunkStream.prototype.end = function (data, encoding) {\n  if (data) {\n    this.write(data, encoding);\n  }\n  this.writable = false;\n\n  // already destroyed\n  if (!this._buffers) {\n    return;\n  }\n\n  // enqueue or handle end\n  if (this._buffers.length === 0) {\n    this._end();\n  } else {\n    this._buffers.push(null);\n    this._process();\n  }\n};\nChunkStream.prototype.destroySoon = ChunkStream.prototype.end;\nChunkStream.prototype._end = function () {\n  if (this._reads.length > 0) {\n    this.emit('error', new Error('There are some read requests waitng on finished stream'));\n  }\n  this.destroy();\n};\nChunkStream.prototype.destroy = function () {\n  if (!this._buffers) {\n    return;\n  }\n  this.writable = false;\n  this._reads = null;\n  this._buffers = null;\n  this.emit('close');\n};\nChunkStream.prototype._processReadAllowingLess = function (read) {\n  // ok there is any data so that we can satisfy this request\n  this._reads.shift(); // == read\n\n  // first we need to peek into first buffer\n  var smallerBuf = this._buffers[0];\n\n  // ok there is more data than we need\n  if (smallerBuf.length > read.length) {\n    this._buffered -= read.length;\n    this._buffers[0] = smallerBuf.slice(read.length);\n    read.func.call(this, smallerBuf.slice(0, read.length));\n  } else {\n    // ok this is less than maximum length so use it all\n    this._buffered -= smallerBuf.length;\n    this._buffers.shift(); // == smallerBuf\n\n    read.func.call(this, smallerBuf);\n  }\n};\nChunkStream.prototype._processRead = function (read) {\n  this._reads.shift(); // == read\n\n  var pos = 0;\n  var count = 0;\n  var data = new Buffer(read.length);\n\n  // create buffer for all data\n  while (pos < read.length) {\n    var buf = this._buffers[count++];\n    var len = Math.min(buf.length, read.length - pos);\n    buf.copy(data, pos, 0, len);\n    pos += len;\n\n    // last buffer wasn't used all so just slice it and leave\n    if (len !== buf.length) {\n      this._buffers[--count] = buf.slice(len);\n    }\n  }\n\n  // remove all used buffers\n  if (count > 0) {\n    this._buffers.splice(0, count);\n  }\n  this._buffered -= read.length;\n  read.func.call(this, data);\n};\nChunkStream.prototype._process = function () {\n  try {\n    // as long as there is any data and read requests\n    while (this._buffered > 0 && this._reads && this._reads.length > 0) {\n      var read = this._reads[0];\n\n      // read any data (but no more than length)\n      if (read.allowLess) {\n        this._processReadAllowingLess(read);\n      } else if (this._buffered >= read.length) {\n        // ok we can meet some expectations\n\n        this._processRead(read);\n      } else {\n        // not enought data to satisfy first request in queue\n        // so we need to wait for more\n        break;\n      }\n    }\n    if (this._buffers && this._buffers.length > 0 && this._buffers[0] === null) {\n      this._end();\n    }\n  } catch (ex) {\n    this.emit('error', ex);\n  }\n};","map":{"version":3,"names":["require","util","Stream","ChunkStream","module","exports","call","_buffers","_buffered","_reads","_paused","_encoding","writable","inherits","prototype","read","length","callback","push","Math","abs","allowLess","func","process","nextTick","_process","emit","bind","write","data","encoding","Error","dataBuffer","Buffer","isBuffer","end","_end","destroySoon","destroy","_processReadAllowingLess","shift","smallerBuf","slice","_processRead","pos","count","buf","len","min","copy","splice","ex"],"sources":["/Users/yezery/Documents/大学素材/毕业设计/OASIS/OASIS_Interface/node_modules/.store/pngjs-nozlib@1.0.0/node_modules/pngjs-nozlib/lib/chunkstream.js"],"sourcesContent":["'use strict';\n\n\nvar util = require('util');\nvar Stream = require('stream');\n\n\nvar ChunkStream = module.exports = function() {\n  Stream.call(this);\n\n  this._buffers = [];\n  this._buffered = 0;\n\n  this._reads = [];\n  this._paused = false;\n\n  this._encoding = 'utf8';\n  this.writable = true;\n};\nutil.inherits(ChunkStream, Stream);\n\n\nChunkStream.prototype.read = function(length, callback) {\n\n  this._reads.push({\n    length: Math.abs(length),  // if length < 0 then at most this length\n    allowLess: length < 0,\n    func: callback\n  });\n\n  process.nextTick(function() {\n    this._process();\n\n    // its paused and there is not enought data then ask for more\n    if (this._paused && this._reads.length > 0) {\n      this._paused = false;\n\n      this.emit('drain');\n    }\n  }.bind(this));\n};\n\nChunkStream.prototype.write = function(data, encoding) {\n\n  if (!this.writable) {\n    this.emit('error', new Error('Stream not writable'));\n    return false;\n  }\n\n  var dataBuffer;\n  if (Buffer.isBuffer(data)) {\n    dataBuffer = data;\n  }\n  else {\n    dataBuffer = new Buffer(data, encoding || this._encoding);\n  }\n\n  this._buffers.push(dataBuffer);\n  this._buffered += dataBuffer.length;\n\n  this._process();\n\n  // ok if there are no more read requests\n  if (this._reads && this._reads.length === 0) {\n    this._paused = true;\n  }\n\n  return this.writable && !this._paused;\n};\n\nChunkStream.prototype.end = function(data, encoding) {\n\n  if (data) {\n    this.write(data, encoding);\n  }\n\n  this.writable = false;\n\n  // already destroyed\n  if (!this._buffers) {\n    return;\n  }\n\n  // enqueue or handle end\n  if (this._buffers.length === 0) {\n    this._end();\n  }\n  else {\n    this._buffers.push(null);\n    this._process();\n  }\n};\n\nChunkStream.prototype.destroySoon = ChunkStream.prototype.end;\n\nChunkStream.prototype._end = function() {\n\n  if (this._reads.length > 0) {\n    this.emit('error',\n      new Error('There are some read requests waitng on finished stream')\n    );\n  }\n\n  this.destroy();\n};\n\nChunkStream.prototype.destroy = function() {\n\n  if (!this._buffers) {\n    return;\n  }\n\n  this.writable = false;\n  this._reads = null;\n  this._buffers = null;\n\n  this.emit('close');\n};\n\nChunkStream.prototype._processReadAllowingLess = function(read) {\n  // ok there is any data so that we can satisfy this request\n  this._reads.shift(); // == read\n\n  // first we need to peek into first buffer\n  var smallerBuf = this._buffers[0];\n\n  // ok there is more data than we need\n  if (smallerBuf.length > read.length) {\n\n    this._buffered -= read.length;\n    this._buffers[0] = smallerBuf.slice(read.length);\n\n    read.func.call(this, smallerBuf.slice(0, read.length));\n\n  }\n  else {\n    // ok this is less than maximum length so use it all\n    this._buffered -= smallerBuf.length;\n    this._buffers.shift(); // == smallerBuf\n\n    read.func.call(this, smallerBuf);\n  }\n};\n\nChunkStream.prototype._processRead = function(read) {\n  this._reads.shift(); // == read\n\n  var pos = 0;\n  var count = 0;\n  var data = new Buffer(read.length);\n\n  // create buffer for all data\n  while (pos < read.length) {\n\n    var buf = this._buffers[count++];\n    var len = Math.min(buf.length, read.length - pos);\n\n    buf.copy(data, pos, 0, len);\n    pos += len;\n\n    // last buffer wasn't used all so just slice it and leave\n    if (len !== buf.length) {\n      this._buffers[--count] = buf.slice(len);\n    }\n  }\n\n  // remove all used buffers\n  if (count > 0) {\n    this._buffers.splice(0, count);\n  }\n\n  this._buffered -= read.length;\n\n  read.func.call(this, data);\n};\n\nChunkStream.prototype._process = function() {\n\n  try {\n    // as long as there is any data and read requests\n    while (this._buffered > 0 && this._reads && this._reads.length > 0) {\n\n      var read = this._reads[0];\n\n      // read any data (but no more than length)\n      if (read.allowLess) {\n        this._processReadAllowingLess(read);\n\n      }\n      else if (this._buffered >= read.length) {\n        // ok we can meet some expectations\n\n        this._processRead(read);\n      }\n      else {\n        // not enought data to satisfy first request in queue\n        // so we need to wait for more\n        break;\n      }\n    }\n\n    if (this._buffers && this._buffers.length > 0 && this._buffers[0] === null) {\n      this._end();\n    }\n  }\n  catch (ex) {\n    this.emit('error', ex);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}