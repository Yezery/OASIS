{"ast":null,"code":"import errCode from 'err-code';\nimport filter from 'it-filter';\nimport map from 'it-map';\n/**\n * Store the multiaddrs from every peer in the passed peer store\n */\nexport async function* storeAddresses(source, peerStore) {\n  yield* map(source, async peer => {\n    // ensure we have the addresses for a given peer\n    await peerStore.addressBook.add(peer.id, peer.multiaddrs);\n    return peer;\n  });\n}\n/**\n * Filter peers by unique peer id\n */\nexport function uniquePeers(source) {\n  /** @type Set<string> */\n  const seen = new Set();\n  return filter(source, peer => {\n    // dedupe by peer id\n    if (seen.has(peer.id.toString())) {\n      return false;\n    }\n    seen.add(peer.id.toString());\n    return true;\n  });\n}\n/**\n * Require at least `min` peers to be yielded from `source`\n */\nexport async function* requirePeers(source, min = 1) {\n  let seen = 0;\n  for await (const peer of source) {\n    seen++;\n    yield peer;\n  }\n  if (seen < min) {\n    throw errCode(new Error('not found'), 'NOT_FOUND');\n  }\n}","map":{"version":3,"names":["errCode","filter","map","storeAddresses","source","peerStore","peer","addressBook","add","id","multiaddrs","uniquePeers","seen","Set","has","toString","requirePeers","min","Error"],"sources":["../../../src/content-routing/utils.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,OAAO,MAAM,UAAU;AAC9B,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,GAAG,MAAM,QAAQ;AAKxB;;;AAGA,OAAO,gBAAiBC,cAAcA,CAAEC,MAAwB,EAAEC,SAAoB;EACpF,OAAQH,GAAG,CAACE,MAAM,EAAE,MAAOE,IAAI,IAAI;IACjC;IACA,MAAMD,SAAS,CAACE,WAAW,CAACC,GAAG,CAACF,IAAI,CAACG,EAAE,EAAEH,IAAI,CAACI,UAAU,CAAC;IAEzD,OAAOJ,IAAI;EACb,CAAC,CAAC;AACJ;AAEA;;;AAGA,OAAM,SAAUK,WAAWA,CAAEP,MAAwB;EACnD;EACA,MAAMQ,IAAI,GAAG,IAAIC,GAAG,EAAE;EAEtB,OAAOZ,MAAM,CAACG,MAAM,EAAGE,IAAI,IAAI;IAC7B;IACA,IAAIM,IAAI,CAACE,GAAG,CAACR,IAAI,CAACG,EAAE,CAACM,QAAQ,EAAE,CAAC,EAAE;MAChC,OAAO,KAAK;;IAGdH,IAAI,CAACJ,GAAG,CAACF,IAAI,CAACG,EAAE,CAACM,QAAQ,EAAE,CAAC;IAE5B,OAAO,IAAI;EACb,CAAC,CAAC;AACJ;AAEA;;;AAGA,OAAO,gBAAiBC,YAAYA,CAAEZ,MAAwB,EAAEa,GAAA,GAAc,CAAC;EAC7E,IAAIL,IAAI,GAAG,CAAC;EAEZ,WAAW,MAAMN,IAAI,IAAIF,MAAM,EAAE;IAC/BQ,IAAI,EAAE;IAEN,MAAMN,IAAI;;EAGZ,IAAIM,IAAI,GAAGK,GAAG,EAAE;IACd,MAAMjB,OAAO,CAAC,IAAIkB,KAAK,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC;;AAEtD"},"metadata":{},"sourceType":"module","externalDependencies":[]}