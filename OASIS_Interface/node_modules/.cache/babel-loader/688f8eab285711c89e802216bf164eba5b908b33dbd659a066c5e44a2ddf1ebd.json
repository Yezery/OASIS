{"ast":null,"code":"import { Wantlist } from '../wantlist/index.js';\n\n/**\n * @typedef {import('multiformats').CID} CID\n */\n\nexport class Ledger {\n  /**\n   * @param {import('@libp2p/interface-peer-id').PeerId} peerId\n   */\n  constructor(peerId) {\n    this.partner = peerId;\n    this.wantlist = new Wantlist();\n    this.exchangeCount = 0;\n    this.sentToPeer = new Map();\n    this.accounting = {\n      bytesSent: 0,\n      bytesRecv: 0\n    };\n  }\n\n  /**\n   * @param {number} n\n   */\n  sentBytes(n) {\n    this.exchangeCount++;\n    this.lastExchange = new Date().getTime();\n    this.accounting.bytesSent += n;\n  }\n\n  /**\n   * @param {number} n\n   */\n  receivedBytes(n) {\n    this.exchangeCount++;\n    this.lastExchange = new Date().getTime();\n    this.accounting.bytesRecv += n;\n  }\n\n  /**\n   *\n   * @param {CID} cid\n   * @param {number} priority\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   * @returns {void}\n   */\n  wants(cid, priority, wantType) {\n    this.wantlist.add(cid, priority, wantType);\n  }\n\n  /**\n   * @param {CID} cid\n   * @returns {void}\n   */\n\n  cancelWant(cid) {\n    this.wantlist.remove(cid);\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  wantlistContains(cid) {\n    return this.wantlist.get(cid);\n  }\n\n  /**\n   * @returns {number}\n   */\n  debtRatio() {\n    return this.accounting.bytesSent / (this.accounting.bytesRecv + 1); // +1 is to prevent division by zero\n  }\n}","map":{"version":3,"names":["Wantlist","Ledger","constructor","peerId","partner","wantlist","exchangeCount","sentToPeer","Map","accounting","bytesSent","bytesRecv","sentBytes","n","lastExchange","Date","getTime","receivedBytes","wants","cid","priority","wantType","add","cancelWant","remove","wantlistContains","get","debtRatio"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-bitswap@15.0.2/node_modules/ipfs-bitswap/src/decision-engine/ledger.js"],"sourcesContent":["import { Wantlist } from '../wantlist/index.js'\n\n/**\n * @typedef {import('multiformats').CID} CID\n */\n\nexport class Ledger {\n  /**\n   * @param {import('@libp2p/interface-peer-id').PeerId} peerId\n   */\n  constructor (peerId) {\n    this.partner = peerId\n    this.wantlist = new Wantlist()\n\n    this.exchangeCount = 0\n    this.sentToPeer = new Map()\n\n    this.accounting = {\n      bytesSent: 0,\n      bytesRecv: 0\n    }\n  }\n\n  /**\n   * @param {number} n\n   */\n  sentBytes (n) {\n    this.exchangeCount++\n    this.lastExchange = (new Date()).getTime()\n    this.accounting.bytesSent += n\n  }\n\n  /**\n   * @param {number} n\n   */\n  receivedBytes (n) {\n    this.exchangeCount++\n    this.lastExchange = (new Date()).getTime()\n    this.accounting.bytesRecv += n\n  }\n\n  /**\n   *\n   * @param {CID} cid\n   * @param {number} priority\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   * @returns {void}\n   */\n  wants (cid, priority, wantType) {\n    this.wantlist.add(cid, priority, wantType)\n  }\n\n  /**\n   * @param {CID} cid\n   * @returns {void}\n   */\n\n  cancelWant (cid) {\n    this.wantlist.remove(cid)\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  wantlistContains (cid) {\n    return this.wantlist.get(cid)\n  }\n\n  /**\n   * @returns {number}\n   */\n  debtRatio () {\n    return (this.accounting.bytesSent / (this.accounting.bytesRecv + 1)) // +1 is to prevent division by zero\n  }\n}\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,sBAAsB;;AAE/C;AACA;AACA;;AAEA,OAAO,MAAMC,MAAM,CAAC;EAClB;AACF;AACA;EACEC,WAAWA,CAAEC,MAAM,EAAE;IACnB,IAAI,CAACC,OAAO,GAAGD,MAAM;IACrB,IAAI,CAACE,QAAQ,GAAG,IAAIL,QAAQ,CAAC,CAAC;IAE9B,IAAI,CAACM,aAAa,GAAG,CAAC;IACtB,IAAI,CAACC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;IAE3B,IAAI,CAACC,UAAU,GAAG;MAChBC,SAAS,EAAE,CAAC;MACZC,SAAS,EAAE;IACb,CAAC;EACH;;EAEA;AACF;AACA;EACEC,SAASA,CAAEC,CAAC,EAAE;IACZ,IAAI,CAACP,aAAa,EAAE;IACpB,IAAI,CAACQ,YAAY,GAAI,IAAIC,IAAI,CAAC,CAAC,CAAEC,OAAO,CAAC,CAAC;IAC1C,IAAI,CAACP,UAAU,CAACC,SAAS,IAAIG,CAAC;EAChC;;EAEA;AACF;AACA;EACEI,aAAaA,CAAEJ,CAAC,EAAE;IAChB,IAAI,CAACP,aAAa,EAAE;IACpB,IAAI,CAACQ,YAAY,GAAI,IAAIC,IAAI,CAAC,CAAC,CAAEC,OAAO,CAAC,CAAC;IAC1C,IAAI,CAACP,UAAU,CAACE,SAAS,IAAIE,CAAC;EAChC;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEK,KAAKA,CAAEC,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,EAAE;IAC9B,IAAI,CAAChB,QAAQ,CAACiB,GAAG,CAACH,GAAG,EAAEC,QAAQ,EAAEC,QAAQ,CAAC;EAC5C;;EAEA;AACF;AACA;AACA;;EAEEE,UAAUA,CAAEJ,GAAG,EAAE;IACf,IAAI,CAACd,QAAQ,CAACmB,MAAM,CAACL,GAAG,CAAC;EAC3B;;EAEA;AACF;AACA;EACEM,gBAAgBA,CAAEN,GAAG,EAAE;IACrB,OAAO,IAAI,CAACd,QAAQ,CAACqB,GAAG,CAACP,GAAG,CAAC;EAC/B;;EAEA;AACF;AACA;EACEQ,SAASA,CAAA,EAAI;IACX,OAAQ,IAAI,CAAClB,UAAU,CAACC,SAAS,IAAI,IAAI,CAACD,UAAU,CAACE,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;EACvE;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}