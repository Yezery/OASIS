{"ast":null,"code":"import _defineProperty from \"/Users/yezery/Oasis/OASIS/node_modules/.store/@babel+runtime@7.22.15/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { logger } from '@libp2p/logger';\nimport { anySignal } from 'any-signal';\nimport errCode from 'err-code';\nimport drain from 'it-drain';\nimport defer from 'p-defer';\nimport PQueue from 'p-queue';\nconst log = logger('libp2p:delegated-content-routing');\nconst DEFAULT_TIMEOUT = 30e3; // 30 second default\nconst CONCURRENT_HTTP_REQUESTS = 4;\nconst CONCURRENT_HTTP_REFS_REQUESTS = 2;\nexport var EventTypes;\n(function (EventTypes) {\n  EventTypes[EventTypes[\"SENDING_QUERY\"] = 0] = \"SENDING_QUERY\";\n  EventTypes[EventTypes[\"PEER_RESPONSE\"] = 1] = \"PEER_RESPONSE\";\n  EventTypes[EventTypes[\"FINAL_PEER\"] = 2] = \"FINAL_PEER\";\n  EventTypes[EventTypes[\"QUERY_ERROR\"] = 3] = \"QUERY_ERROR\";\n  EventTypes[EventTypes[\"PROVIDER\"] = 4] = \"PROVIDER\";\n  EventTypes[EventTypes[\"VALUE\"] = 5] = \"VALUE\";\n  EventTypes[EventTypes[\"ADDING_PEER\"] = 6] = \"ADDING_PEER\";\n  EventTypes[EventTypes[\"DIALING_PEER\"] = 7] = \"DIALING_PEER\";\n})(EventTypes || (EventTypes = {}));\n/**\n * The types of messages set/received during DHT queries\n */\nexport var MessageType;\n(function (MessageType) {\n  MessageType[MessageType[\"PUT_VALUE\"] = 0] = \"PUT_VALUE\";\n  MessageType[MessageType[\"GET_VALUE\"] = 1] = \"GET_VALUE\";\n  MessageType[MessageType[\"ADD_PROVIDER\"] = 2] = \"ADD_PROVIDER\";\n  MessageType[MessageType[\"GET_PROVIDERS\"] = 3] = \"GET_PROVIDERS\";\n  MessageType[MessageType[\"FIND_NODE\"] = 4] = \"FIND_NODE\";\n  MessageType[MessageType[\"PING\"] = 5] = \"PING\";\n})(MessageType || (MessageType = {}));\n/**\n * An implementation of content routing, using a delegated peer\n */\nclass DelegatedContentRouting {\n  /**\n   * Create a new DelegatedContentRouting instance\n   */\n  constructor(client) {\n    _defineProperty(this, \"client\", void 0);\n    _defineProperty(this, \"httpQueue\", void 0);\n    _defineProperty(this, \"httpQueueRefs\", void 0);\n    _defineProperty(this, \"started\", void 0);\n    _defineProperty(this, \"abortController\", void 0);\n    if (client == null) {\n      throw new Error('missing ipfs http client');\n    }\n    this.client = client;\n    this.started = false;\n    this.abortController = new AbortController();\n    // limit concurrency to avoid request flood in web browser\n    // https://github.com/libp2p/js-libp2p-delegated-content-routing/issues/12\n    this.httpQueue = new PQueue({\n      concurrency: CONCURRENT_HTTP_REQUESTS\n    });\n    // sometimes refs requests take long time, they need separate queue\n    // to not suffocate regular business\n    this.httpQueueRefs = new PQueue({\n      concurrency: CONCURRENT_HTTP_REFS_REQUESTS\n    });\n    const {\n      protocol,\n      host,\n      port\n    } = client.getEndpointConfig();\n    log(`enabled DelegatedContentRouting via ${protocol}://${host}:${port}`);\n  }\n  isStarted() {\n    return this.started;\n  }\n  start() {\n    this.started = true;\n  }\n  stop() {\n    this.httpQueue.clear();\n    this.httpQueueRefs.clear();\n    this.abortController.abort();\n    this.abortController = new AbortController();\n    this.started = false;\n  }\n  /**\n   * Search the dht for providers of the given CID.\n   *\n   * - call `findProviders` on the delegated node.\n   */\n  async *findProviders(key, options = {}) {\n    log('findProviders starts: %c', key);\n    options.timeout = options.timeout ?? DEFAULT_TIMEOUT;\n    const signal = anySignal([this.abortController.signal, options.signal]);\n    const onStart = defer();\n    const onFinish = defer();\n    void this.httpQueue.add(async () => {\n      onStart.resolve();\n      return onFinish.promise;\n    });\n    try {\n      await onStart.promise;\n      for await (const event of this.client.dht.findProvs(key, {\n        ...options,\n        signal\n      })) {\n        if (event.name === 'PROVIDER') {\n          yield* event.providers.map(prov => {\n            const peerInfo = {\n              id: prov.id,\n              protocols: [],\n              multiaddrs: prov.multiaddrs\n            };\n            return peerInfo;\n          });\n        }\n      }\n    } catch (err) {\n      log.error('findProviders errored:', err);\n      throw err;\n    } finally {\n      signal.clear();\n      onFinish.resolve();\n      log('findProviders finished: %c', key);\n    }\n  }\n  /**\n   * Announce to the network that the delegated node can provide the given key.\n   *\n   * Currently this uses the following hack\n   * - delegate is one of bootstrap nodes, so we are always connected to it\n   * - call block stat on the delegated node, so it fetches the content\n   * - call dht provide with the passed cid\n   *\n   * N.B. this must be called for every block in the dag you want provided otherwise\n   * the delegate will only be able to supply the root block of the dag when asked\n   * for the data by an interested peer.\n   */\n  async provide(key, options = {}) {\n    log('provide starts: %c', key);\n    options.timeout = options.timeout ?? DEFAULT_TIMEOUT;\n    const signal = anySignal([this.abortController.signal, options.signal]);\n    const onStart = defer();\n    const onFinish = defer();\n    void this.httpQueue.add(async () => {\n      onStart.resolve();\n      return onFinish.promise;\n    });\n    try {\n      await onStart.promise;\n      await this.client.block.stat(key, {\n        ...options,\n        signal\n      });\n      await drain(this.client.dht.provide(key, {\n        ...options,\n        signal\n      }));\n    } catch (err) {\n      log.error('provide errored:', err);\n      throw err;\n    } finally {\n      signal.clear();\n      onFinish.resolve();\n      log('provide finished: %c', key);\n    }\n  }\n  /**\n   * Stores a value in the backing key/value store of the delegated content router.\n   * This may fail if the delegated node's content routing implementation does not\n   * use a key/value store, or if the delegated operation fails.\n   */\n  async put(key, value, options = {}) {\n    log('put value start: %b', key);\n    options.timeout = options.timeout ?? DEFAULT_TIMEOUT;\n    const signal = anySignal([this.abortController.signal, options.signal]);\n    const onStart = defer();\n    const onFinish = defer();\n    void this.httpQueue.add(async () => {\n      onStart.resolve();\n      return onFinish.promise;\n    });\n    try {\n      await onStart.promise;\n      await drain(this.client.dht.put(key, value, {\n        ...options,\n        signal\n      }));\n    } catch (err) {\n      log.error('put errored:', err);\n      throw err;\n    } finally {\n      signal.clear();\n      onFinish.resolve();\n      log('put finished: %b', key);\n    }\n  }\n  /**\n   * Fetches an value from the backing key/value store of the delegated content router.\n   * This may fail if the delegated node's content routing implementation does not\n   * use a key/value store, or if the delegated operation fails.\n   */\n  async get(key, options = {}) {\n    log('get value start: %b', key);\n    options.timeout = options.timeout ?? DEFAULT_TIMEOUT;\n    const signal = anySignal([this.abortController.signal, options.signal]);\n    const onStart = defer();\n    const onFinish = defer();\n    void this.httpQueue.add(async () => {\n      onStart.resolve();\n      return onFinish.promise;\n    });\n    try {\n      await onStart.promise;\n      for await (const event of this.client.dht.get(key, {\n        ...options,\n        signal\n      })) {\n        if (event.name === 'VALUE') {\n          log('get value finished: %b', key);\n          return event.value;\n        }\n      }\n      throw errCode(new Error('Not found'), 'ERR_NOT_FOUND');\n    } catch (err) {\n      log.error('put errored:', err);\n      throw err;\n    } finally {\n      signal.clear();\n      onFinish.resolve();\n      log('put finished: %b', key);\n    }\n  }\n}\nexport function delegatedContentRouting(client) {\n  return () => new DelegatedContentRouting(client);\n}","map":{"version":3,"names":["logger","anySignal","errCode","drain","defer","PQueue","log","DEFAULT_TIMEOUT","CONCURRENT_HTTP_REQUESTS","CONCURRENT_HTTP_REFS_REQUESTS","EventTypes","MessageType","DelegatedContentRouting","constructor","client","_defineProperty","Error","started","abortController","AbortController","httpQueue","concurrency","httpQueueRefs","protocol","host","port","getEndpointConfig","isStarted","start","stop","clear","abort","findProviders","key","options","timeout","signal","onStart","onFinish","add","resolve","promise","event","dht","findProvs","name","providers","map","prov","peerInfo","id","protocols","multiaddrs","err","error","provide","block","stat","put","value","get","delegatedContentRouting"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}