{"ast":null,"code":"import { normaliseContent } from './normalise-content.js';\nimport { normaliseCandidateSingle } from './normalise-candidate-single.js';\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.add` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidate} input\n */\nexport function normaliseInput(input) {\n  return normaliseCandidateSingle(input, normaliseContent);\n}","map":{"version":3,"names":["normaliseContent","normaliseCandidateSingle","normaliseInput","input"],"sources":["/Users/yezery/Desktop/OASIS/OASIS_Interface/node_modules/.store/ipfs-core-utils@0.18.1/node_modules/ipfs-core-utils/src/files/normalise-input-single.js"],"sourcesContent":["import { normaliseContent } from './normalise-content.js'\nimport { normaliseCandidateSingle } from './normalise-candidate-single.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.add` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidate} input\n */\nexport function normaliseInput (input) {\n  return normaliseCandidateSingle(input, normaliseContent)\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,wBAAwB,QAAQ,iCAAiC;;AAE1E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAAEC,KAAK,EAAE;EACrC,OAAOF,wBAAwB,CAACE,KAAK,EAAEH,gBAAgB,CAAC;AAC1D"},"metadata":{},"sourceType":"module","externalDependencies":[]}