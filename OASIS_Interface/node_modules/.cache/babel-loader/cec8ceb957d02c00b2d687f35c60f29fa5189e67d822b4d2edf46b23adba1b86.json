{"ast":null,"code":"import last from 'it-last';\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-types/src/pin').API<{}>[\"rmAll\"]} config.rmAll\n */\nexport function createRm({\n  rmAll\n}) {\n  /**\n   * @type {import('ipfs-core-types/src/pin').API<{}>[\"rm\"]}\n   */\n  async function rm(path, options = {}) {\n    // @ts-expect-error return value of last can be undefined\n    const cid = await last(rmAll([{\n      path,\n      ...options\n    }], options));\n    if (!cid) {\n      throw new Error('CID expected');\n    }\n    return cid;\n  }\n  return rm;\n}","map":{"version":3,"names":["last","createRm","rmAll","rm","path","options","cid","Error"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-core@0.18.1/node_modules/ipfs-core/src/components/pin/rm.js"],"sourcesContent":["import last from 'it-last'\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-types/src/pin').API<{}>[\"rmAll\"]} config.rmAll\n */\nexport function createRm ({ rmAll }) {\n  /**\n   * @type {import('ipfs-core-types/src/pin').API<{}>[\"rm\"]}\n   */\n  async function rm (path, options = {}) {\n    // @ts-expect-error return value of last can be undefined\n    const cid = await last(rmAll([{ path, ...options }], options))\n\n    if (!cid) {\n      throw new Error('CID expected')\n    }\n\n    return cid\n  }\n\n  return rm\n}\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;;AAE1B;AACA;AACA;AACA;AACA,OAAO,SAASC,QAAQA,CAAE;EAAEC;AAAM,CAAC,EAAE;EACnC;AACF;AACA;EACE,eAAeC,EAAEA,CAAEC,IAAI,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACrC;IACA,MAAMC,GAAG,GAAG,MAAMN,IAAI,CAACE,KAAK,CAAC,CAAC;MAAEE,IAAI;MAAE,GAAGC;IAAQ,CAAC,CAAC,EAAEA,OAAO,CAAC,CAAC;IAE9D,IAAI,CAACC,GAAG,EAAE;MACR,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;IACjC;IAEA,OAAOD,GAAG;EACZ;EAEA,OAAOH,EAAE;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}