{"ast":null,"code":"import { encode } from './lib/encode.js';\nimport { decode, decodeFirst } from './lib/decode.js';\nimport { Token, Type } from './lib/token.js';\n\n/**\n * Export the types that were present in the original manual cborg.d.ts\n * @typedef {import('./interface').TagDecoder} TagDecoder\n * There was originally just `TypeEncoder` so don't break types by renaming or not exporting\n * @typedef {import('./interface').OptionalTypeEncoder} TypeEncoder\n * @typedef {import('./interface').DecodeOptions} DecodeOptions\n * @typedef {import('./interface').EncodeOptions} EncodeOptions\n */\n\nexport { decode, decodeFirst, encode, Token, Type };","map":{"version":3,"names":["encode","decode","decodeFirst","Token","Type"],"sources":["/Users/yezery/OASIS/OASIS_Interface/node_modules/.store/cborg@4.0.3/node_modules/cborg/cborg.js"],"sourcesContent":["import { encode } from './lib/encode.js'\nimport { decode, decodeFirst } from './lib/decode.js'\nimport { Token, Type } from './lib/token.js'\n\n/**\n * Export the types that were present in the original manual cborg.d.ts\n * @typedef {import('./interface').TagDecoder} TagDecoder\n * There was originally just `TypeEncoder` so don't break types by renaming or not exporting\n * @typedef {import('./interface').OptionalTypeEncoder} TypeEncoder\n * @typedef {import('./interface').DecodeOptions} DecodeOptions\n * @typedef {import('./interface').EncodeOptions} EncodeOptions\n */\n\nexport {\n  decode,\n  decodeFirst,\n  encode,\n  Token,\n  Type\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,iBAAiB;AACxC,SAASC,MAAM,EAAEC,WAAW,QAAQ,iBAAiB;AACrD,SAASC,KAAK,EAAEC,IAAI,QAAQ,gBAAgB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SACEH,MAAM,EACNC,WAAW,EACXF,MAAM,EACNG,KAAK,EACLC,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}