{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// @ts-expect-error\nimport SparseArray from 'sparse-array';\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string';\nexport class Bucket {\n  constructor(options, parent, posAtParent = 0) {\n    this._options = options;\n    this._popCount = 0;\n    this._parent = parent;\n    this._posAtParent = posAtParent;\n    this._children = new SparseArray();\n    this.key = null;\n  }\n  async put(key, value) {\n    const place = await this._findNewBucketAndPos(key);\n    await place.bucket._putAt(place, key, value);\n  }\n  async get(key) {\n    const child = await this._findChild(key);\n    if (child != null) {\n      return child.value;\n    }\n  }\n  async del(key) {\n    const place = await this._findPlace(key);\n    const child = place.bucket._at(place.pos);\n    if (child != null && child.key === key) {\n      place.bucket._delAt(place.pos);\n    }\n  }\n  leafCount() {\n    const children = this._children.compactArray();\n    return children.reduce((acc, child) => {\n      if (child instanceof Bucket) {\n        return acc + child.leafCount();\n      }\n      return acc + 1;\n    }, 0);\n  }\n  childrenCount() {\n    return this._children.length;\n  }\n  onlyChild() {\n    return this._children.get(0);\n  }\n  *eachLeafSeries() {\n    const children = this._children.compactArray();\n    for (const child of children) {\n      if (child instanceof Bucket) {\n        yield* child.eachLeafSeries();\n      } else {\n        yield child;\n      }\n    }\n  }\n  serialize(map, reduce) {\n    const acc = [];\n    // serialize to a custom non-sparse representation\n    return reduce(this._children.reduce((acc, child, index) => {\n      if (child != null) {\n        if (child instanceof Bucket) {\n          acc.push(child.serialize(map, reduce));\n        } else {\n          acc.push(map(child, index));\n        }\n      }\n      return acc;\n    }, acc));\n  }\n  async asyncTransform(asyncMap, asyncReduce) {\n    return await asyncTransformBucket(this, asyncMap, asyncReduce);\n  }\n  toJSON() {\n    return this.serialize(mapNode, reduceNodes);\n  }\n  prettyPrint() {\n    return JSON.stringify(this.toJSON(), null, '  ');\n  }\n  tableSize() {\n    return Math.pow(2, this._options.bits);\n  }\n  async _findChild(key) {\n    const result = await this._findPlace(key);\n    const child = result.bucket._at(result.pos);\n    if (child instanceof Bucket) {\n      // should not be possible, this._findPlace should always\n      // return a location for a child, not a bucket\n      return undefined;\n    }\n    if (child != null && child.key === key) {\n      return child;\n    }\n  }\n  async _findPlace(key) {\n    const hashValue = this._options.hash(typeof key === 'string' ? uint8ArrayFromString(key) : key);\n    const index = await hashValue.take(this._options.bits);\n    const child = this._children.get(index);\n    if (child instanceof Bucket) {\n      return await child._findPlace(hashValue);\n    }\n    return {\n      bucket: this,\n      pos: index,\n      hash: hashValue,\n      existingChild: child\n    };\n  }\n  async _findNewBucketAndPos(key) {\n    const place = await this._findPlace(key);\n    if (place.existingChild != null && place.existingChild.key !== key) {\n      // conflict\n      const bucket = new Bucket(this._options, place.bucket, place.pos);\n      place.bucket._putObjectAt(place.pos, bucket);\n      // put the previous value\n      const newPlace = await bucket._findPlace(place.existingChild.hash);\n      newPlace.bucket._putAt(newPlace, place.existingChild.key, place.existingChild.value);\n      return await bucket._findNewBucketAndPos(place.hash);\n    }\n    // no conflict, we found the place\n    return place;\n  }\n  _putAt(place, key, value) {\n    this._putObjectAt(place.pos, {\n      key: key,\n      value: value,\n      hash: place.hash\n    });\n  }\n  _putObjectAt(pos, object) {\n    if (this._children.get(pos) == null) {\n      this._popCount++;\n    }\n    this._children.set(pos, object);\n  }\n  _delAt(pos) {\n    if (pos === -1) {\n      throw new Error('Invalid position');\n    }\n    if (this._children.get(pos) != null) {\n      this._popCount--;\n    }\n    this._children.unset(pos);\n    this._level();\n  }\n  _level() {\n    if (this._parent != null && this._popCount <= 1) {\n      if (this._popCount === 1) {\n        // remove myself from parent, replacing me with my only child\n        const onlyChild = this._children.find(exists);\n        if (onlyChild != null && !(onlyChild instanceof Bucket)) {\n          const hash = onlyChild.hash;\n          hash.untake(this._options.bits);\n          const place = {\n            pos: this._posAtParent,\n            hash: hash,\n            bucket: this._parent\n          };\n          this._parent._putAt(place, onlyChild.key, onlyChild.value);\n        }\n      } else {\n        this._parent._delAt(this._posAtParent);\n      }\n    }\n  }\n  _at(index) {\n    return this._children.get(index);\n  }\n}\nfunction exists(o) {\n  return Boolean(o);\n}\nfunction mapNode(node, _) {\n  return node.key;\n}\nfunction reduceNodes(nodes) {\n  return nodes;\n}\nasync function asyncTransformBucket(bucket, asyncMap, asyncReduce) {\n  const output = [];\n  for (const child of bucket._children.compactArray()) {\n    if (child instanceof Bucket) {\n      await asyncTransformBucket(child, asyncMap, asyncReduce);\n    } else {\n      const mappedChildren = await asyncMap(child);\n      output.push({\n        bitField: bucket._children.bitField(),\n        children: mappedChildren\n      });\n    }\n  }\n  return await asyncReduce(output);\n}","map":{"version":3,"names":["SparseArray","fromString","uint8ArrayFromString","Bucket","constructor","options","parent","posAtParent","_options","_popCount","_parent","_posAtParent","_children","key","put","value","place","_findNewBucketAndPos","bucket","_putAt","get","child","_findChild","del","_findPlace","_at","pos","_delAt","leafCount","children","compactArray","reduce","acc","childrenCount","length","onlyChild","eachLeafSeries","serialize","map","index","push","asyncTransform","asyncMap","asyncReduce","asyncTransformBucket","toJSON","mapNode","reduceNodes","prettyPrint","JSON","stringify","tableSize","Math","pow","bits","result","undefined","hashValue","hash","take","existingChild","_putObjectAt","newPlace","object","set","Error","unset","_level","find","exists","untake","o","Boolean","node","_","nodes","output","mappedChildren","bitField"],"sources":["../../src/bucket.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}