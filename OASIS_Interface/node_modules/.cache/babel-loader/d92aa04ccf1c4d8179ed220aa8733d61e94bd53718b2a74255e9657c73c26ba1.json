{"ast":null,"code":"import { postOwnerContractList } from \"@/api/axios/ownerContractLIst\";\nexport default {\n  props: {\n    walletConnect: {\n      type: Function,\n      default: null\n    }\n  },\n  data() {\n    return {\n      //****Èí±ÂåÖËøûÊé•ÂºπÂá∫Ê°Ü******//\n      MetaMaskTipsIsShow: false,\n      Tips2: \"MetaMaskÊó†Ê≥ïËøûÊé• \",\n      isDisable: false,\n      //*********************//\n      //********Web3********//\n      web3: null,\n      contract: null,\n      toAddress: \"\",\n      value: \"\",\n      re: \"\",\n      avatar: \"\",\n      //*********************//\n      CopyTips: \"ÁÇπÂáªÂ§çÂà∂\",\n      CopySuccess: \"Â§çÂà∂ÊàêÂäüÔºÅ\",\n      isCopy: false,\n      isRepeatClick: true\n    };\n  },\n  mounted() {\n    if (window.ethereum != undefined) {\n      window.ethereum.on(\"accountsChanged\", this.connectWallet);\n      console.log(\"ok\");\n    }\n    window.ethereum.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC721',\n        options: {\n          address: '0xEC1Df48dF712Cd7432Bc931bee0004A336eC1258',\n          tokenId: \"1\",\n          symbol: \"qqq\",\n          image: 'http://10.39.5.194:8080/ipfs/QmWkcPJGf71AksHEbjeSvoNJzWBqHCucs462eVqgn8B11y?filename=qqqq'\n        }\n      }\n    }).then(success => {\n      if (success) {\n        console.log('FOO successfully added to wallet!');\n      } else {\n        throw new Error('Something went wrong.');\n      }\n    }).catch(console.error);\n  },\n  methods: {\n    Copy() {\n      navigator.clipboard.writeText(this.$store.state.currentAddress).then(() => {\n        this.isCopy = true;\n        setTimeout(() => {\n          this.isCopy = false;\n        }, 3000);\n      });\n    },\n    GETHashAvatar() {\n      if (this.$store.state.isconnect) {\n        this.avatar = \"data:image/png;base64,\" + new this.Identicon(this.$store.state.currentAddress, 120).toString();\n        this.$refs.avatar.width = 60;\n        this.$refs.avatar.height = 60;\n      } else {\n        this.avatar = require(\"@/assets/webAssets/MetaMask.png\");\n        this.$refs.avatar.width = 40;\n        this.$refs.avatar.height = 40;\n      }\n    },\n    MMCTDis() {\n      this.$refs.MMCT.classList.remove(\"animate__fadeIn\");\n      this.$refs.MMCT.classList.add(\"animate__fadeOut\");\n      setTimeout(() => {\n        this.MetaMaskTipsIsShow = !this.MetaMaskTipsIsShow;\n      }, 750);\n    },\n    async connectWallet() {\n      if (this.isRepeatClick) {\n        this.isRepeatClick = false;\n        try {\n          // ËØ∑Ê±ÇÁî®Êà∑ÊéàÊùÉ\n          await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n          }).then(handleAccountsChanged => {\n            this.$store.commit(\"connection\", true);\n            this.$store.commit(\"changeAvatar\", handleAccountsChanged[0]);\n            this.$store.commit(\"setcurrentAddress\", handleAccountsChanged[0]);\n          }).catch(error => {\n            this.$store.commit(\"connection\", false);\n            if (error.code === 4001) {\n              // EIP-1193 userRejectedRequest error\n              console.log(\"Please connect to MetaMask.\");\n            } else {\n              console.error(error);\n            }\n          });\n          let currentAddress = {\n            ownerAddress: this.$store.state.currentAddress\n          };\n          // ====================\n          postOwnerContractList(currentAddress).then(re => {\n            this.$store.commit(\"setOwnerNFTList\", re.data.data);\n            this.accountNFTList = this.$store.state.ownerNFTList;\n          });\n          this.walletConnect();\n          this.$notify({\n            title: \"üéâ ËøûÊé•ÊàêÂäü\",\n            position: \"top-left\",\n            offset: 200\n          });\n        } catch (error) {\n          console.error(error);\n          this.$notify.error({\n            title: \"ËøûÊé•Â§±Ë¥•\",\n            position: \"top-left\",\n            offset: 200\n          });\n        }\n      } else {\n        this.$notify({\n          title: \"Â∑≤ÁªèÊúâËøûÊé•ËØ∑ÂãøÊìç‰ΩúÈ¢ëÁπÅ\",\n          type: \"warning\",\n          position: \"top-left\",\n          offset: 200\n        });\n      }\n      setTimeout(() => {\n        this.isRepeatClick = true;\n      }, 5000);\n    }\n  }\n};","map":{"version":3,"names":["postOwnerContractList","props","walletConnect","type","Function","default","data","MetaMaskTipsIsShow","Tips2","isDisable","web3","contract","toAddress","value","re","avatar","CopyTips","CopySuccess","isCopy","isRepeatClick","mounted","window","ethereum","undefined","on","connectWallet","console","log","request","method","params","options","address","tokenId","symbol","image","then","success","Error","catch","error","methods","Copy","navigator","clipboard","writeText","$store","state","currentAddress","setTimeout","GETHashAvatar","isconnect","Identicon","toString","$refs","width","height","require","MMCTDis","MMCT","classList","remove","add","handleAccountsChanged","commit","code","ownerAddress","accountNFTList","ownerNFTList","$notify","title","position","offset"],"sources":["src/views/user/WalletConnect.vue"],"sourcesContent":["<template>\n  <div class=\"Walletbox\">\n    <div\n      class=\"WalletInnerBox\"\n      @click.stop=\"Copy\"\n    >\n      <span class=\"avatarBox\">\n        <img\n          class=\"avatar\"\n          :src=\"$store.state.avatar\"\n          alt=\"\"\n          ref=\"avatar\"\n          slot=\"reference\"\n          @click.stop=\"connectWallet\"\n        >\n      </span>\n      <span\n        class=\"address\"\n      >{{ \n        $store.state.currentAddress==\"\"?\"MetaMask is not connected\":`${this.$store.state.currentAddress.slice(\n          0,\n          5\n        )}...${this.$store.state.currentAddress.slice(-5)}`\n      }}\n      </span>\n    </div>\n    <div />\n  </div>\n</template>\n\n<script>\n  import { postOwnerContractList } from \"@/api/axios/ownerContractLIst\";\n  export default {\n    props: {\n      walletConnect: {\n        type: Function,\n        default: null,\n      },\n    },\n    data() {\n      return {\n        //****Èí±ÂåÖËøûÊé•ÂºπÂá∫Ê°Ü******//\n        MetaMaskTipsIsShow: false,\n        Tips2: \"MetaMaskÊó†Ê≥ïËøûÊé• \",\n        isDisable: false,\n        //*********************//\n        //********Web3********//\n        web3: null,\n        contract: null,\n        toAddress: \"\",\n        value: \"\",\n        re: \"\",\n        avatar: \"\",\n        //*********************//\n        CopyTips: \"ÁÇπÂáªÂ§çÂà∂\",\n        CopySuccess: \"Â§çÂà∂ÊàêÂäüÔºÅ\",\n        isCopy: false,\n        isRepeatClick:true\n      };\n    },\n    mounted() {\n      if (window.ethereum != undefined) {\n        window.ethereum.on(\"accountsChanged\", this.connectWallet);\n        console.log(\"ok\");\n      }\n      window.ethereum\n  .request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC721',\n      options: {\n        address: '0xEC1Df48dF712Cd7432Bc931bee0004A336eC1258',\n        tokenId:\"1\",\n        symbol:\"qqq\",\n        image: 'http://10.39.5.194:8080/ipfs/QmWkcPJGf71AksHEbjeSvoNJzWBqHCucs462eVqgn8B11y?filename=qqqq',\n      },\n    },\n  })\n  .then((success) => {\n    if (success) {\n      console.log('FOO successfully added to wallet!');\n    } else {\n      throw new Error('Something went wrong.');\n    }\n  })\n  .catch(console.error);\n\n\n    },\n    methods: {\n      Copy() {\n        navigator.clipboard.writeText(this.$store.state.currentAddress).then(() => {\n          this.isCopy = true;\n          setTimeout(() => {\n            this.isCopy = false;\n          }, 3000);\n        });\n      },\n      GETHashAvatar() {\n        if (this.$store.state.isconnect) {\n          this.avatar =\n            \"data:image/png;base64,\" +\n            new this.Identicon(this.$store.state.currentAddress, 120).toString();\n          this.$refs.avatar.width = 60;\n          this.$refs.avatar.height = 60;\n        } else {\n          this.avatar = require(\"@/assets/webAssets/MetaMask.png\");\n          this.$refs.avatar.width = 40;\n          this.$refs.avatar.height = 40;\n        }\n      },\n      MMCTDis() {\n        this.$refs.MMCT.classList.remove(\"animate__fadeIn\");\n        this.$refs.MMCT.classList.add(\"animate__fadeOut\");\n        setTimeout(() => {\n          this.MetaMaskTipsIsShow = !this.MetaMaskTipsIsShow;\n        }, 750);\n      },\n      async connectWallet() {\n        if (this.isRepeatClick) {\n          this.isRepeatClick = false;\n          try {\n          // ËØ∑Ê±ÇÁî®Êà∑ÊéàÊùÉ\n          await window.ethereum.request({ method: \"eth_requestAccounts\" }).then((handleAccountsChanged) => {\n              this.$store.commit(\"connection\", true);\n              this.$store.commit(\"changeAvatar\", handleAccountsChanged[0]);\n              this.$store.commit(\"setcurrentAddress\", handleAccountsChanged[0]);\n            }).catch((error) => {\n              this.$store.commit(\"connection\", false);\n              if (error.code === 4001) {\n                // EIP-1193 userRejectedRequest error\n                console.log(\"Please connect to MetaMask.\");\n              } else {\n                console.error(error);\n              }\n            });\n          let currentAddress = {\n            ownerAddress: this.$store.state.currentAddress,\n          };\n          // ====================\n          postOwnerContractList(currentAddress).then((re) => {\n            this.$store.commit(\"setOwnerNFTList\", re.data.data);\n            this.accountNFTList = this.$store.state.ownerNFTList;\n          });\n            this.walletConnect();\n          this.$notify({\n            title: \"üéâ ËøûÊé•ÊàêÂäü\",\n            position: \"top-left\",\n            offset: 200,\n          });     \n        } catch (error) {\n          console.error(error);\n          this.$notify.error({\n            title: \"ËøûÊé•Â§±Ë¥•\",\n            position: \"top-left\",\n            offset: 200,\n          });\n        }\n        }else {\n          this.$notify({\n              title: \"Â∑≤ÁªèÊúâËøûÊé•ËØ∑ÂãøÊìç‰ΩúÈ¢ëÁπÅ\",\n              type: \"warning\",\n              position: \"top-left\",\n              offset: 200,\n            });\n        }\n          setTimeout(() => {\n            this.isRepeatClick = true;\n          }, 5000);\n   \n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\">\n/* ÂÖ®Â±ÄÈÄöÁü•Ê†∑Âºè */\n.el-notification {\n  border: none !important;\n  padding-top: 2%;\n  padding-bottom: 2%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 20px;\n  .el-notification__title {\n    font-size: 1vw;\n    font-weight: 500;\n  }\n}\n::-webkit-scrollbar {\n  width: 6px;\n  height: 8px;\n  display: none;\n  background-color: transparent;\n}\n::-webkit-scrollbar-thumb {\n  background-color: #ccc;\n  border-radius: 25px;\n}\n</style>\n<style lang=\"scss\" scoped>\n.Walletbox {\n  display: flex;\n  justify-content: flex-start;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n}\n.avatar {\n  object-fit: fill;\n  width: 100%;\n  height: 100%;\n  background-color: white;\n  float: right;\n}\n.avatarBox {\n  overflow: hidden;\n  border-radius: 50%;\n  width: 38px;\n  height: 38px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 10%;\n  border: 2px solid var(--border-green--);\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    border: 2px solid var(--border-green--);\n    box-shadow: 0 0 20px var(--border-green--);\n    transition: all 0.3s ease-in-out;\n  }\n}\n.MetaMaskAvatar {\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.BOX {\n  width: 100%;\n  height: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.WalletInnerBox {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  cursor: pointer;\n}\n.address {\n  margin-left: 5%;\n  color: var(--Dark--);\n  font-weight: 800;\n  font-size: 12px;\n  width: 50%;\n  text-align: center;\n  border-radius: 10px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  padding-left: 5px;\n  padding-right: 5px;\n  font-family: Arial, Helvetica, sans-serif;\n  transition: all 0.3s ease-in-out;\n  &:hover {\n    background-color: rgba(238, 238, 238, 0.1);\n    transition: all 0.3s ease-in-out;\n  }\n}\n/* MetaMaskÂºπÂá∫Ê°Ü */\n.MetaMaskConnectionTip {\n  font-family: Arial, Helvetica, sans-serif;\n  overflow: hidden;\n  position: absolute;\n  width: 350px;\n  height: 300px;\n  background-color: var(--White--);\n  color: var(--Dark--);\n  top: 50%;\n  left: 50%;\n  z-index: 100;\n  transform: translate(-50%, -50%);\n  border-radius: 20px;\n  box-shadow: rgba(17, 17, 26, 0.05) 0px 1px 0px,\n    rgba(17, 17, 26, 0.1) 0px 0px 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.MetaMaskTipsBtn {\n  border: 0px solid;\n  background-color: white;\n  box-shadow: rgba(17, 17, 26, 0.05) 0px 1px 0px,\n    rgba(17, 17, 26, 0.1) 0px 0px 8px;\n  border-radius: 7px;\n  padding-top: 5%;\n  padding-bottom: 5%;\n  padding-left: 22%;\n  padding-right: 22%;\n  font-size: 13px;\n  font-weight: 500;\n}\n.MetaMaskTipsBtn:hover {\n  background-color: rgb(252, 251, 251);\n}\n.MetaMaskTips {\n  font-size: 17px;\n  font-weight: 500;\n  margin-top: 25%;\n}\n/* ÈÅÆÁΩ©Â±Ç */\n.Mask {\n  z-index: 100;\n  position: fixed !important;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  top: 0;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}