{"ast":null,"code":"import { pushable } from 'it-pushable';\nimport merge from 'it-merge';\nexport function pipe(first, ...rest) {\n  if (first == null) {\n    throw new Error('Empty pipeline');\n  }\n  // Duplex at start: wrap in function and return duplex source\n  if (isDuplex(first)) {\n    const duplex = first;\n    first = () => duplex.source;\n    // Iterable at start: wrap in function\n  } else if (isIterable(first) || isAsyncIterable(first)) {\n    const source = first;\n    first = () => source;\n  }\n  const fns = [first, ...rest];\n  if (fns.length > 1) {\n    // Duplex at end: use duplex sink\n    if (isDuplex(fns[fns.length - 1])) {\n      fns[fns.length - 1] = fns[fns.length - 1].sink;\n    }\n  }\n  if (fns.length > 2) {\n    // Duplex in the middle, consume source with duplex sink and return duplex source\n    for (let i = 1; i < fns.length - 1; i++) {\n      if (isDuplex(fns[i])) {\n        fns[i] = duplexPipelineFn(fns[i]);\n      }\n    }\n  }\n  return rawPipe(...fns);\n}\nexport const rawPipe = (...fns) => {\n  let res;\n  while (fns.length > 0) {\n    res = fns.shift()(res);\n  }\n  return res;\n};\nconst isAsyncIterable = obj => {\n  return obj?.[Symbol.asyncIterator] != null;\n};\nconst isIterable = obj => {\n  return obj?.[Symbol.iterator] != null;\n};\nconst isDuplex = obj => {\n  if (obj == null) {\n    return false;\n  }\n  return obj.sink != null && obj.source != null;\n};\nconst duplexPipelineFn = duplex => {\n  return source => {\n    const p = duplex.sink(source);\n    if (p?.then != null) {\n      const stream = pushable({\n        objectMode: true\n      });\n      p.then(() => {\n        stream.end();\n      }, err => {\n        stream.end(err);\n      });\n      let sourceWrap;\n      const source = duplex.source;\n      if (isAsyncIterable(source)) {\n        sourceWrap = async function* () {\n          yield* source;\n          stream.end();\n        };\n      } else if (isIterable(source)) {\n        sourceWrap = function* () {\n          yield* source;\n          stream.end();\n        };\n      } else {\n        throw new Error('Unknown duplex source type - must be Iterable or AsyncIterable');\n      }\n      return merge(stream, sourceWrap());\n    }\n    return duplex.source;\n  };\n};","map":{"version":3,"names":["pushable","merge","pipe","first","rest","Error","isDuplex","duplex","source","isIterable","isAsyncIterable","fns","length","sink","i","duplexPipelineFn","rawPipe","res","shift","obj","Symbol","asyncIterator","iterator","p","then","stream","objectMode","end","err","sourceWrap"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}