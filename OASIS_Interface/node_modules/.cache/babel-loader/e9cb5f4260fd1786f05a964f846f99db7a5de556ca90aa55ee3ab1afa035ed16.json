{"ast":null,"code":"import { CodeError } from '@libp2p/interfaces/errors';\nimport { pipe } from 'it-pipe';\nimport * as lp from 'it-length-prefixed';\nimport drain from 'it-drain';\nimport first from 'it-first';\nimport { Message } from './message/index.js';\nimport { EventEmitter, CustomEvent } from '@libp2p/interfaces/events';\nimport { dialingPeerEvent, sendingQueryEvent, peerResponseEvent, queryErrorEvent } from './query/events.js';\nimport { logger } from '@libp2p/logger';\nimport { abortableDuplex } from 'abortable-iterator';\n/**\n * Handle network operations for the dht\n */\nexport class Network extends EventEmitter {\n  /**\n   * Create a new network\n   */\n  constructor(components, init) {\n    super();\n    const {\n      protocol,\n      lan\n    } = init;\n    this.components = components;\n    this.log = logger(`libp2p:kad-dht:${lan ? 'lan' : 'wan'}:network`);\n    this.running = false;\n    this.protocol = protocol;\n  }\n  /**\n   * Start the network\n   */\n  async start() {\n    if (this.running) {\n      return;\n    }\n    this.running = true;\n  }\n  /**\n   * Stop all network activity\n   */\n  async stop() {\n    this.running = false;\n  }\n  /**\n   * Is the network online?\n   */\n  isStarted() {\n    return this.running;\n  }\n  /**\n   * Send a request and record RTT for latency measurements\n   */\n  async *sendRequest(to, msg, options = {}) {\n    if (!this.running) {\n      return;\n    }\n    this.log('sending %s to %p', msg.type, to);\n    yield dialingPeerEvent({\n      peer: to\n    });\n    yield sendingQueryEvent({\n      to,\n      type: msg.type\n    });\n    let stream;\n    try {\n      const connection = await this.components.connectionManager.openConnection(to, options);\n      const stream = await connection.newStream(this.protocol, options);\n      const response = await this._writeReadMessage(stream, msg.serialize(), options);\n      yield peerResponseEvent({\n        from: to,\n        messageType: response.type,\n        closer: response.closerPeers,\n        providers: response.providerPeers,\n        record: response.record\n      });\n    } catch (err) {\n      yield queryErrorEvent({\n        from: to,\n        error: err\n      });\n    } finally {\n      if (stream != null) {\n        stream.close();\n      }\n    }\n  }\n  /**\n   * Sends a message without expecting an answer\n   */\n  async *sendMessage(to, msg, options = {}) {\n    if (!this.running) {\n      return;\n    }\n    this.log('sending %s to %p', msg.type, to);\n    yield dialingPeerEvent({\n      peer: to\n    });\n    yield sendingQueryEvent({\n      to,\n      type: msg.type\n    });\n    let stream;\n    try {\n      const connection = await this.components.connectionManager.openConnection(to, options);\n      const stream = await connection.newStream(this.protocol, options);\n      await this._writeMessage(stream, msg.serialize(), options);\n      yield peerResponseEvent({\n        from: to,\n        messageType: msg.type\n      });\n    } catch (err) {\n      yield queryErrorEvent({\n        from: to,\n        error: err\n      });\n    } finally {\n      if (stream != null) {\n        stream.close();\n      }\n    }\n  }\n  /**\n   * Write a message to the given stream\n   */\n  async _writeMessage(stream, msg, options) {\n    if (options.signal != null) {\n      stream = abortableDuplex(stream, options.signal);\n    }\n    await pipe([msg], lp.encode(), stream, drain);\n  }\n  /**\n   * Write a message and read its response.\n   * If no response is received after the specified timeout\n   * this will error out.\n   */\n  async _writeReadMessage(stream, msg, options) {\n    if (options.signal != null) {\n      stream = abortableDuplex(stream, options.signal);\n    }\n    const res = await pipe([msg], lp.encode(), stream, lp.decode(), async source => {\n      const buf = await first(source);\n      if (buf != null) {\n        return buf;\n      }\n      throw new CodeError('No message received', 'ERR_NO_MESSAGE_RECEIVED');\n    });\n    const message = Message.deserialize(res);\n    // tell any listeners about new peers we've seen\n    message.closerPeers.forEach(peerData => {\n      this.dispatchEvent(new CustomEvent('peer', {\n        detail: peerData\n      }));\n    });\n    message.providerPeers.forEach(peerData => {\n      this.dispatchEvent(new CustomEvent('peer', {\n        detail: peerData\n      }));\n    });\n    return message;\n  }\n}","map":{"version":3,"names":["CodeError","pipe","lp","drain","first","Message","EventEmitter","CustomEvent","dialingPeerEvent","sendingQueryEvent","peerResponseEvent","queryErrorEvent","logger","abortableDuplex","Network","constructor","components","init","protocol","lan","log","running","start","stop","isStarted","sendRequest","to","msg","options","type","peer","stream","connection","connectionManager","openConnection","newStream","response","_writeReadMessage","serialize","from","messageType","closer","closerPeers","providers","providerPeers","record","err","error","close","sendMessage","_writeMessage","signal","encode","res","decode","source","buf","message","deserialize","forEach","peerData","dispatchEvent","detail"],"sources":["../../src/network.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}