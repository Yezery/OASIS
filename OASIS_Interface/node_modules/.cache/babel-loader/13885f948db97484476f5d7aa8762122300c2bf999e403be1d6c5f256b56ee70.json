{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport http from 'http';\nimport https from 'https';\nfunction initRequest(url, init) {\n  if (url.protocol === 'http:') {\n    return http.request(url, {\n      method: init.method,\n      headers: init.headers\n    });\n  } else if (url.protocol === 'https:') {\n    return https.request(url, {\n      method: init.method,\n      headers: init.headers,\n      rejectUnauthorized: false\n    });\n  } else {\n    throw new Error('Invalid protocol ' + url.protocol);\n  }\n}\nexport async function fetch(url, init = {}) {\n  return new Promise((resolve, reject) => {\n    const request = initRequest(new URL(url), init);\n    if (init.body != null) {\n      request.write(init.body);\n    }\n    request.end();\n    request.on('error', err => {\n      reject(err);\n    });\n    request.on('response', response => {\n      if (response.headers['content-type'] != null && !response.headers['content-type'].includes('/xml')) {\n        reject(new Error(`Bad content type ${response.headers['content-type']}`));\n        return;\n      }\n      let body = '';\n      response.on('data', chunk => {\n        body += chunk.toString();\n      });\n      response.on('end', () => {\n        resolve(body);\n      });\n      response.on('error', err => {\n        reject(err);\n      });\n    });\n  });\n}","map":{"version":3,"names":["http","https","initRequest","url","init","protocol","request","method","headers","rejectUnauthorized","Error","fetch","Promise","resolve","reject","URL","body","write","end","on","err","response","includes","chunk","toString"],"sources":["../../src/fetch.ts"],"sourcesContent":[null],"mappings":";;;AAAA,OAAOA,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AAQzB,SAASC,WAAWA,CAAEC,GAAQ,EAAEC,IAAiB;EAC/C,IAAID,GAAG,CAACE,QAAQ,KAAK,OAAO,EAAE;IAC5B,OAAOL,IAAI,CAACM,OAAO,CAACH,GAAG,EAAE;MACvBI,MAAM,EAAEH,IAAI,CAACG,MAAM;MACnBC,OAAO,EAAEJ,IAAI,CAACI;KACf,CAAC;GACH,MAAM,IAAIL,GAAG,CAACE,QAAQ,KAAK,QAAQ,EAAE;IACpC,OAAOJ,KAAK,CAACK,OAAO,CAACH,GAAG,EAAE;MACxBI,MAAM,EAAEH,IAAI,CAACG,MAAM;MACnBC,OAAO,EAAEJ,IAAI,CAACI,OAAO;MACrBC,kBAAkB,EAAE;KACrB,CAAC;GACH,MAAM;IACL,MAAM,IAAIC,KAAK,CAAC,mBAAmB,GAAGP,GAAG,CAACE,QAAQ,CAAC;;AAEvD;AAEA,OAAO,eAAeM,KAAKA,CAAER,GAAW,EAAEC,IAAA,GAAoB,EAAE;EAC9D,OAAO,IAAIQ,OAAO,CAAS,CAACC,OAAO,EAAEC,MAAM,KAAI;IAC7C,MAAMR,OAAO,GAAGJ,WAAW,CAAC,IAAIa,GAAG,CAACZ,GAAG,CAAC,EAAEC,IAAI,CAAC;IAE/C,IAAIA,IAAI,CAACY,IAAI,IAAI,IAAI,EAAE;MACrBV,OAAO,CAACW,KAAK,CAACb,IAAI,CAACY,IAAI,CAAC;;IAG1BV,OAAO,CAACY,GAAG,EAAE;IAEbZ,OAAO,CAACa,EAAE,CAAC,OAAO,EAAGC,GAAG,IAAI;MAC1BN,MAAM,CAACM,GAAG,CAAC;IACb,CAAC,CAAC;IAEFd,OAAO,CAACa,EAAE,CAAC,UAAU,EAAGE,QAAQ,IAAI;MAClC,IAAIA,QAAQ,CAACb,OAAO,CAAC,cAAc,CAAC,IAAI,IAAI,IAAI,CAACa,QAAQ,CAACb,OAAO,CAAC,cAAc,CAAC,CAACc,QAAQ,CAAC,MAAM,CAAC,EAAE;QAClGR,MAAM,CAAC,IAAIJ,KAAK,CAAC,oBAAoBW,QAAQ,CAACb,OAAO,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACzE;;MAGF,IAAIQ,IAAI,GAAG,EAAE;MAEbK,QAAQ,CAACF,EAAE,CAAC,MAAM,EAAGI,KAAa,IAAI;QACpCP,IAAI,IAAIO,KAAK,CAACC,QAAQ,EAAE;MAC1B,CAAC,CAAC;MACFH,QAAQ,CAACF,EAAE,CAAC,KAAK,EAAE,MAAK;QACtBN,OAAO,CAACG,IAAI,CAAC;MACf,CAAC,CAAC;MACFK,QAAQ,CAACF,EAAE,CAAC,OAAO,EAAGC,GAAG,IAAI;QAC3BN,MAAM,CAACM,GAAG,CAAC;MACb,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}