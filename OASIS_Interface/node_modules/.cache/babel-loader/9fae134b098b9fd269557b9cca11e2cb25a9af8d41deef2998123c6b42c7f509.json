{"ast":null,"code":"import { configure } from '../lib/configure.js';\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js';\nimport { mapEvent } from './map-event.js';\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n * @typedef {import('multiformats/cid').CID} CID\n */\n\nexport const createProvide = configure(api => {\n  /**\n   * @type {DHTAPI[\"provide\"]}\n   */\n  async function* provide(cids, options = {\n    recursive: false\n  }) {\n    /** @type {CID[]} */\n    const cidArr = Array.isArray(cids) ? cids : [cids];\n    const res = await api.post('dht/provide', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cidArr.map(cid => cid.toString()),\n        ...options\n      }),\n      headers: options.headers\n    });\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event);\n    }\n  }\n  return provide;\n});","map":{"version":3,"names":["configure","toUrlSearchParams","mapEvent","createProvide","api","provide","cids","options","recursive","cidArr","Array","isArray","res","post","signal","searchParams","arg","map","cid","toString","headers","event","ndjson"],"sources":["/Users/yezery/Documents/大学素材/毕业设计/OASIS/OASIS_Interface/node_modules/.store/ipfs-http-client@60.0.1/node_modules/ipfs-http-client/src/dht/provide.js"],"sourcesContent":["import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n * @typedef {import('multiformats/cid').CID} CID\n */\n\nexport const createProvide = configure(api => {\n  /**\n   * @type {DHTAPI[\"provide\"]}\n   */\n  async function * provide (cids, options = { recursive: false }) {\n    /** @type {CID[]} */\n    const cidArr = Array.isArray(cids) ? cids : [cids]\n\n    const res = await api.post('dht/provide', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cidArr.map(cid => cid.toString()),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return provide\n})\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAASC,QAAQ,QAAQ,gBAAgB;;AAEzC;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAGH,SAAS,CAACI,GAAG,IAAI;EAC5C;AACF;AACA;EACE,gBAAiBC,OAAOA,CAAEC,IAAI,EAAEC,OAAO,GAAG;IAAEC,SAAS,EAAE;EAAM,CAAC,EAAE;IAC9D;IACA,MAAMC,MAAM,GAAGC,KAAK,CAACC,OAAO,CAACL,IAAI,CAAC,GAAGA,IAAI,GAAG,CAACA,IAAI,CAAC;IAElD,MAAMM,GAAG,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,aAAa,EAAE;MACxCC,MAAM,EAAEP,OAAO,CAACO,MAAM;MACtBC,YAAY,EAAEd,iBAAiB,CAAC;QAC9Be,GAAG,EAAEP,MAAM,CAACQ,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,QAAQ,CAAC,CAAC,CAAC;QACtC,GAAGZ;MACL,CAAC,CAAC;MACFa,OAAO,EAAEb,OAAO,CAACa;IACnB,CAAC,CAAC;IAEF,WAAW,MAAMC,KAAK,IAAIT,GAAG,CAACU,MAAM,CAAC,CAAC,EAAE;MACtC,MAAMpB,QAAQ,CAACmB,KAAK,CAAC;IACvB;EACF;EAEA,OAAOhB,OAAO;AAChB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}