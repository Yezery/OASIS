{"ast":null,"code":"import { createExport } from './export.js';\nimport { createGet } from './get.js';\nimport { createImport } from './import.js';\nimport { createPut } from './put.js';\nimport { createResolve } from './resolve.js';\nexport class DagAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-core-utils/multihashes').Multihashes} config.hashers\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {import('../../types').Preload} config.preload\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor({\n    repo,\n    codecs,\n    hashers,\n    preload\n  }) {\n    this.export = createExport({\n      repo,\n      preload,\n      codecs\n    });\n    this.get = createGet({\n      codecs,\n      repo,\n      preload\n    });\n    this.import = createImport({\n      repo\n    });\n    this.resolve = createResolve({\n      repo,\n      codecs,\n      preload\n    });\n    this.put = createPut({\n      repo,\n      codecs,\n      hashers,\n      preload\n    });\n  }\n}","map":{"version":3,"names":["createExport","createGet","createImport","createPut","createResolve","DagAPI","constructor","repo","codecs","hashers","preload","export","get","import","resolve","put"],"sources":["/Users/yezery/Oasis/OASIS/node_modules/.store/ipfs-core@0.18.1/node_modules/ipfs-core/src/components/dag/index.js"],"sourcesContent":["import { createExport } from './export.js'\nimport { createGet } from './get.js'\nimport { createImport } from './import.js'\nimport { createPut } from './put.js'\nimport { createResolve } from './resolve.js'\n\nexport class DagAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-core-utils/multihashes').Multihashes} config.hashers\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {import('../../types').Preload} config.preload\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor ({ repo, codecs, hashers, preload }) {\n    this.export = createExport({ repo, preload, codecs })\n    this.get = createGet({ codecs, repo, preload })\n    this.import = createImport({ repo })\n    this.resolve = createResolve({ repo, codecs, preload })\n    this.put = createPut({ repo, codecs, hashers, preload })\n  }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,aAAa;AAC1C,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,YAAY,QAAQ,aAAa;AAC1C,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,aAAa,QAAQ,cAAc;AAE5C,OAAO,MAAMC,MAAM,CAAC;EAClB;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,WAAWA,CAAE;IAAEC,IAAI;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAQ,CAAC,EAAE;IAC/C,IAAI,CAACC,MAAM,GAAGX,YAAY,CAAC;MAAEO,IAAI;MAAEG,OAAO;MAAEF;IAAO,CAAC,CAAC;IACrD,IAAI,CAACI,GAAG,GAAGX,SAAS,CAAC;MAAEO,MAAM;MAAED,IAAI;MAAEG;IAAQ,CAAC,CAAC;IAC/C,IAAI,CAACG,MAAM,GAAGX,YAAY,CAAC;MAAEK;IAAK,CAAC,CAAC;IACpC,IAAI,CAACO,OAAO,GAAGV,aAAa,CAAC;MAAEG,IAAI;MAAEC,MAAM;MAAEE;IAAQ,CAAC,CAAC;IACvD,IAAI,CAACK,GAAG,GAAGZ,SAAS,CAAC;MAAEI,IAAI;MAAEC,MAAM;MAAEC,OAAO;MAAEC;IAAQ,CAAC,CAAC;EAC1D;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}