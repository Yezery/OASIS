{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Message, MESSAGE_TYPE } from '../message/index.js';\nimport parallel from 'it-parallel';\nimport map from 'it-map';\nimport { convertBuffer } from '../utils.js';\nimport { ALPHA } from '../constants.js';\nimport { pipe } from 'it-pipe';\nimport { queryErrorEvent, peerResponseEvent, providerEvent } from '../query/events.js';\nimport { logger } from '@libp2p/logger';\nexport class ContentRouting {\n  constructor(components, init) {\n    const {\n      network,\n      peerRouting,\n      queryManager,\n      routingTable,\n      providers,\n      lan\n    } = init;\n    this.components = components;\n    this.log = logger(`libp2p:kad-dht:${lan ? 'lan' : 'wan'}:content-routing`);\n    this.network = network;\n    this.peerRouting = peerRouting;\n    this.queryManager = queryManager;\n    this.routingTable = routingTable;\n    this.providers = providers;\n  }\n  /**\n   * Announce to the network that we can provide the value for a given key and\n   * are contactable on the given multiaddrs\n   */\n  async *provide(key, multiaddrs, options = {}) {\n    this.log('provide %s', key);\n    // Add peer as provider\n    await this.providers.addProvider(key, this.components.peerId);\n    const msg = new Message(MESSAGE_TYPE.ADD_PROVIDER, key.multihash.bytes, 0);\n    msg.providerPeers = [{\n      id: this.components.peerId,\n      multiaddrs,\n      protocols: []\n    }];\n    let sent = 0;\n    const maybeNotifyPeer = event => {\n      return async () => {\n        if (event.name !== 'FINAL_PEER') {\n          return [event];\n        }\n        const events = [];\n        this.log('putProvider %s to %p', key, event.peer.id);\n        try {\n          this.log('sending provider record for %s to %p', key, event.peer.id);\n          for await (const sendEvent of this.network.sendMessage(event.peer.id, msg, options)) {\n            if (sendEvent.name === 'PEER_RESPONSE') {\n              this.log('sent provider record for %s to %p', key, event.peer.id);\n              sent++;\n            }\n            events.push(sendEvent);\n          }\n        } catch (err) {\n          this.log.error('error sending provide record to peer %p', event.peer.id, err);\n          events.push(queryErrorEvent({\n            from: event.peer.id,\n            error: err\n          }));\n        }\n        return events;\n      };\n    };\n    // Notify closest peers\n    yield* pipe(this.peerRouting.getClosestPeers(key.multihash.bytes, options), source => map(source, event => maybeNotifyPeer(event)), source => parallel(source, {\n      ordered: false,\n      concurrency: ALPHA\n    }), async function* (source) {\n      for await (const events of source) {\n        yield* events;\n      }\n    });\n    this.log('sent provider records to %d peers', sent);\n  }\n  /**\n   * Search the dht for up to `K` providers of the given CID.\n   */\n  async *findProviders(key, options) {\n    const toFind = this.routingTable.kBucketSize;\n    const target = key.multihash.bytes;\n    const id = await convertBuffer(target);\n    const self = this; // eslint-disable-line @typescript-eslint/no-this-alias\n    this.log('findProviders %c', key);\n    const provs = await this.providers.getProviders(key);\n    // yield values if we have some, also slice because maybe we got lucky and already have too many?\n    if (provs.length > 0) {\n      const providers = [];\n      for (const peerId of provs.slice(0, toFind)) {\n        providers.push({\n          id: peerId,\n          multiaddrs: ((await this.components.peerStore.addressBook.get(peerId)) ?? []).map(address => address.multiaddr),\n          protocols: []\n        });\n      }\n      yield peerResponseEvent({\n        from: this.components.peerId,\n        messageType: MESSAGE_TYPE.GET_PROVIDERS,\n        providers\n      });\n      yield providerEvent({\n        from: this.components.peerId,\n        providers\n      });\n    }\n    // All done\n    if (provs.length >= toFind) {\n      return;\n    }\n    /**\n     * The query function to use on this particular disjoint path\n     */\n    const findProvidersQuery = async function* ({\n      peer,\n      signal\n    }) {\n      const request = new Message(MESSAGE_TYPE.GET_PROVIDERS, target, 0);\n      yield* self.network.sendRequest(peer, request, {\n        signal\n      });\n    };\n    const providers = new Set(provs.map(p => p.toString()));\n    for await (const event of this.queryManager.run(target, this.routingTable.closestPeers(id), findProvidersQuery, options)) {\n      yield event;\n      if (event.name === 'PEER_RESPONSE') {\n        this.log('Found %d provider entries for %c and %d closer peers', event.providers.length, key, event.closer.length);\n        const newProviders = [];\n        for (const peer of event.providers) {\n          if (providers.has(peer.id.toString())) {\n            continue;\n          }\n          providers.add(peer.id.toString());\n          newProviders.push(peer);\n        }\n        if (newProviders.length > 0) {\n          yield providerEvent({\n            from: event.from,\n            providers: newProviders\n          });\n        }\n        if (providers.size === toFind) {\n          return;\n        }\n      }\n    }\n  }\n}","map":{"version":3,"names":["Message","MESSAGE_TYPE","parallel","map","convertBuffer","ALPHA","pipe","queryErrorEvent","peerResponseEvent","providerEvent","logger","ContentRouting","constructor","components","init","network","peerRouting","queryManager","routingTable","providers","lan","log","provide","key","multiaddrs","options","addProvider","peerId","msg","ADD_PROVIDER","multihash","bytes","providerPeers","id","protocols","sent","maybeNotifyPeer","event","name","events","peer","sendEvent","sendMessage","push","err","error","from","getClosestPeers","source","ordered","concurrency","findProviders","toFind","kBucketSize","target","self","provs","getProviders","length","slice","peerStore","addressBook","get","address","multiaddr","messageType","GET_PROVIDERS","findProvidersQuery","signal","request","sendRequest","Set","p","toString","run","closestPeers","closer","newProviders","has","add","size"],"sources":["../../../src/content-routing/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}